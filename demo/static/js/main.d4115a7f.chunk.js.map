{"version":3,"sources":["../node_modules/@ohif/i18n/dist/locales sync //.json$","config.js","version.js","utils/getUserManagerForOpenIdConnectClient.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","lib/jumpToRowItem.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","connectedComponents/ConnectedMeasurementTable.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","connectedComponents/FlexboxLayout.js","connectedComponents/ConnectedFlexboxLayout.js","store/layout/actions.js","connectedComponents/ConnectedCineDialog.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","store/layout/selectors.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","routes/ViewerRouting.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","CallbackPage.js","OHIFStandaloneViewer.js","store/layout/reducers.js","store/index.js","appCommands/viewer.js","appCommands/index.js","setupTools.js","App.js","utils/initWebWorkers.js","index.js"],"names":["map","./en/Buttons.json","./en/CineDialog.json","./en/Common.json","./en/Header.json","./en/MeasurementTable.json","./en/UK/Header.json","./en/US/Header.json","./en/UserPreferencesModal.json","./es/AR/Header.json","./es/Buttons.json","./es/CineDialog.json","./es/Common.json","./es/Header.json","./es/MX/Header.json","./es/MeasurementTable.json","./es/UserPreferencesModal.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getUserManagerForOpenIdConnectClient","oidcSettings","settings","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","OHIFLogo","react_default","a","createElement","target","rel","className","href","react_viewerbase_dist_index_es","name","defaultContextValues","logoComponent","WhiteLabellingContext","React","createContext","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isUserPreferencesOpen","isOpen","loadOptions","_this2","t","options","title","icon","onClick","setState","hotKeysData","hotkeysManager","hotkeyDefinitions","_ref","windowLevelData","_this3","home","location","studyLink","react_router_dom","to","children","pathname","list","align","assign","onCancel","Component","defaultProps","withTranslation","withRouter","ConnectedHeader","connect","ui","userPreferencesModalOpen","MeasurementApi","measurements","studyMetadataManager","utils","updateTableWithNewMeasurementData","toolType","measurementNumber","description","measurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","doneCallback","cornerstoneTools","getToolForElement","configuration","setViewportSpecificData","redux","actions","getMeasurementText","measurementData","text","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","data","timepoint","eachData","displayText","timepointId","push","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","config","toolGroup","childTools","getAllTools","tableMeasurements","groupName","groupId","toolId","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","length","date","moment","latestDate","format","ConnectedMeasurementTable","_state$timepointManag","timepointManager","measurementCollection","viewports","dispatch","dispatchRelabel","event","viewportsState","activeViewportIndex","enabledElements","log","error","clientX","clientY","skipAddLabelButton","editLocation","dispatchEditDescription","editDescriptionOnDialog","dispatchJumpToRowItem","timepointManagerState","arguments","undefined","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","Math","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","key","viewportSpecificData","viewportIndex","study","get","studyInstanceUid","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","active","measurementToActive","propsFromState","propsFromDispatch","ownProps","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","cloneDeep","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","availableViewportModules","viewportModules","extensionManager","modules","MODULE_TYPES","VIEWPORT","moduleDefinition","extensionId","availablePlugins","LayoutManager","toolTypes","defaultDropdownItems","actionType","action","nearbyToolData","removeToolState","_ref2","_ref3","getDropdownItems","isTouchEvent","coords","nearbyTool","pointNearTool","toolData","getToolState","index","toolInterface","getNearbyToolData","currentPoints","canvas","dropdownItems","item","params","ToolContextMenu","componentDidMount","mainElement","current","updateElementPosition","componentDidUpdate","_this$mainElement$cur","offsetParent","offsetTop","offsetHeight","offsetWidth","offsetLeft","offBoundPixels","top","y","style","left","x","createRef","_this$props","availableTools","dropdownComponents","onClose","position","ref","visible","ConnectedToolContextMenu","contextMenu","toolContextMenuData","extensions","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","some","v","setViewportData","dSet","plugin","getDisplaySets","connectedComponents_ConnectedLayoutManager","connectedComponents_ConnectedToolContextMenu","clearViewportSpecificData","ConnectedViewerMain","_state$viewports","FlexboxLayout","studiesForBrowser","getStudiesForBrowser","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","mainContentClassName","leftSidebarOpen","rightSidebarOpen","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedMeasurementTable","ConnectedFlexboxLayout","setLeftSidebarOpen","type","setRightSidebarOpen","scrollToIndex","toolImport","csTools","import","ConnectedCineDialog","cine","activeEnabledElement","dom","activeViewportCineData","isPlaying","cineFrameRate","dispatchSetViewportSpecificData","onPlayPauseChanged","onFrameRateChanged","frameRate","onClickNextButton","stackData","_stackData$data$","currentImageIdIndex","imageIds","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","lastIndex","CineDialog","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","ConnectedPluginSwitch","commandsManager","runCommand","ToolbarRow","onLeftSidebarValueChanged","value","onRightSidebarValueChanged","toolbarButtonDefinitions","_getVisibleToolbarButtons","assertThisInitialized","toolbarButtons","activeButtons","isCineDialogOpen","_handleBuiltIn","behavior","bind","prevProps","activeContexts","leftSidebarToggle","bottomLabel","rightSidebarToggle","leftSidebarValue","rightSidebarValue","buttonComponents","button","evt","commandName","commandOptions","isActive","includes","cineDialogContainerStyle","display","zIndex","Fragment","padding","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","connectedComponents_ConnectedCineDialog","toolbarModules","TOOLBAR","extension","_extension$module","definitions","defaultContext","definition","context","getActiveContexts","createSelector","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","activeViewportExtension","toUpperCase","ConnectedToolbarRow","SimpleDialog","rootClass","componentRef","componentStyle","headerTitle","onConfirm","bounding","elementRef","currentPosition","currentElement","maxHeight","buttonSize","EditDescriptionDialog","onUpdate","handleChange","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","react_transition_group","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","LabellingFlow","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","LabellingManager_LabellingManager","ConnectedLabellingOverlay","labelling","labellingFlowData","Viewer","retrieveMeasurements","patientId","timepointIds","Promise","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","connectedComponents_ConnectedFlexboxLayout","connectedComponents_ConnectedLabellingOverlay","setTimepoints","setMeasurements","ConnectedViewer","OHIFStudyMetadata","metadata","retrieveStudiesMetadata","updateMetaDataManager","ViewerRetrieveStudyData","seriesInstanceUids","server","purge","updatedStudies","studyMetadata","sopClassHandlerModules","createDisplaySets","setDisplaySets","add","_context","t0","JSON","stringify","connectedComponents_ConnectedViewer","ConnectedViewerRetrieveStudyData","servers","studyUids","_getQueryParameters","queryString","parse","search","getQueryParameters","requestType","studyUID","connectedComponents_ConnectedViewerRetrieveStudyData","split","atob","ViewerRouting","studyUIDs","seriesUIDs","match","_match$params","StudyListWithData","searchData","searchForStudies","currentPage","rowsPerPage","studyDateFrom","defaultStudyDateFrom","studyDateTo","defaultStudyDateTo","sortData","defaultSort","patientName","accessionNumber","studyDescription","modalitiesInStudy","modalities","limit","offset","searchStudies","then","_searchData$sortData","field","order","sortedStudies","isValid","fieldA","fieldB","catch","onImport","onSelectItem","studyInstanceUID","history","onSearch","studyListFunctionsEnabled","pageSize","studyListDateFilterNumDays","subtract","toDate","ConnectedStudyList","StudyListRouting","studylist_ConnectedStudyList","StandaloneRouting","qs","parseQueryAndFetchStudies","src_connectedComponents_Viewer","reject","url","oReq","XMLHttpRequest","warn","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","sessionStorage","getItem","errorCallback","reload","OHIFStandaloneViewer","unlisten","listen","setContext","expired","setItem","react_router","exact","path","onEnter","render","src_CallbackPage","component","signinRedirect","IHEInvokeImageDisplay","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","defaultState","reducers","localStorage","layoutReducers","oidcReducer","rootReducer","combineReducers","createStore","loadState","applyMiddleware","thunkMiddleware","subscribe","saveState","preferences","setViewportActive","updateViewportDisplaySet","direction","console","updateActiveViewport","maxIndex","newIndex","incrementActiveViewport","commandFn","storeContexts","decrementActiveViewport","CONTEXTS","viewer","appCommands","init","commandContext","viewerCommandDefinitions","commandDefinition","registerCommand","_registerViewerCommands","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","parseInt","dataset","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","commandsManagerConfig","getAppState","CommandsManager","HotkeysManager","ExtensionManager","hotkeys","setHotkeys","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","registerExtensions","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","App","firstOpenIdClient","addServers","baseDirectory","webWorkScriptsPath","scriptsPath","protocol","host","maxWebWorkers","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","initWebWorkers","routerBasename","relativeWebWorkerScriptsPath","react_redux_es","es","i18n","basename","Provider","src_OHIFStandaloneViewer_0","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d4115a7f.chunk.js","sourcesContent":["var map = {\n\t\"./en/Buttons.json\": 176,\n\t\"./en/CineDialog.json\": 177,\n\t\"./en/Common.json\": 178,\n\t\"./en/Header.json\": 179,\n\t\"./en/MeasurementTable.json\": 180,\n\t\"./en/UK/Header.json\": 181,\n\t\"./en/US/Header.json\": 182,\n\t\"./en/UserPreferencesModal.json\": 183,\n\t\"./es/AR/Header.json\": 184,\n\t\"./es/Buttons.json\": 185,\n\t\"./es/CineDialog.json\": 186,\n\t\"./es/Common.json\": 187,\n\t\"./es/Header.json\": 188,\n\t\"./es/MX/Header.json\": 189,\n\t\"./es/MeasurementTable.json\": 190,\n\t\"./es/UserPreferencesModal.json\": 191\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 175;","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\n//if (process.env.node_env === 'development') {\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n//}\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.21';\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","import './Header.css';\nimport './Header.css';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Dropdown } from 'react-viewerbase';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport PropTypes from 'prop-types';\nimport { AboutModal } from 'react-viewerbase';\nimport { hotkeysManager } from './../../App.js';\nimport { withTranslation } from 'react-i18next';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  // onSave: data => {\n  //   const contextName = store.getState().commandContext.context;\n  //   const preferences = cloneDeep(store.getState().preferences);\n  //   preferences[contextName] = data;\n  //   dispatch(setUserPreferences(preferences));\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n  // },\n  // onResetToDefaults: () => {\n  //   dispatch(setUserPreferences());\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys();\n  // },\n\n  constructor(props) {\n    super(props);\n    this.state = { isUserPreferencesOpen: false, isOpen: false };\n\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    const { t } = this.props;\n    this.options = [\n      {\n        title: t('About'),\n        icon: { name: 'info' },\n        onClick: () => {\n          this.setState({\n            isOpen: true,\n          });\n        },\n      },\n    ];\n\n    this.hotKeysData = hotkeysManager.hotkeyDefinitions;\n  }\n\n  onUserPreferencesSave({ windowLevelData, hotKeysData }) {\n    // console.log(windowLevelData);\n    // console.log(hotKeysData);\n    // TODO: Update hotkeysManager\n    // TODO: reset `this.hotKeysData`\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              {t('Back to Viewer')}\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {!this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              {t('Study list')}\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">{t('INVESTIGATIONAL USE ONLY')}</span>\n          <Dropdown title={t('Options')} list={this.options} align=\"right\" />\n          <AboutModal\n            {...this.state}\n            onCancel={() =>\n              this.setState({\n                isOpen: false,\n              })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('Header')(withRouter(Header));\n","import Header from '../components/Header/Header.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst ConnectedHeader = connect(mapStateToProps)(Header);\n\nexport default ConnectedHeader;\n","import { measurements, utils } from 'ohif-core';\n\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\nimport jumpToRowItem from '../lib/jumpToRowItem.js';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { LayoutManager } from 'react-viewerbase';\nimport { MODULE_TYPES } from 'ohif-core';\nimport { connect } from 'react-redux';\nimport { extensionManager } from './../App.js';\n\nconst mapStateToProps = state => {\n  const availableViewportModules = {};\n  const viewportModules = extensionManager.modules[MODULE_TYPES.VIEWPORT];\n\n  viewportModules.forEach(moduleDefinition => {\n    availableViewportModules[moduleDefinition.extensionId] =\n      moduleDefinition.module;\n  });\n\n  // TODO: Use something like state.plugins.defaultPlugin[MODULE_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportModules.length) {\n    defaultPlugin = viewportModules[0].extensionId;\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    // TODO: rename `availableViewportModules`\n    availablePlugins: availableViewportModules,\n    // TODO: rename `defaultViewportModule`\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './ViewerMain.css';\n\nimport { Component } from 'react';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport ConnectedToolContextMenu from './ConnectedToolContextMenu.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    activeViewportIndex: PropTypes.number.isRequired,\n    studies: PropTypes.array.isRequired,\n    viewportSpecificData: PropTypes.object.isRequired,\n    layout: PropTypes.object.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    const displaySets = this.getDisplaySets(this.props.studies);\n\n    this.setState({\n      displaySets,\n    });\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        <ConnectedLayoutManager\n          studies={this.props.studies}\n          viewportData={this.getViewportData()}\n          setViewportData={this.setViewportData}\n        >\n          {/* Children to add to each viewport that support children */}\n          <ConnectedToolContextMenu />\n        </ConnectedLayoutManager>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // TODO: These don't have to be viewer specific?\n    // Could qualify for other routes?\n    // hotkeys.destroy();\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import OHIF from 'ohif-core';\nimport ViewerMain from './ViewerMain';\nimport { connect } from 'react-redux';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './FlexboxLayout.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport PropTypes from 'prop-types';\n\nclass FlexboxLayout extends Component {\n  static propTypes = {\n    studies: PropTypes.array.isRequired,\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    studiesForBrowser: [],\n  };\n\n  componentDidMount() {\n    const studiesForBrowser = this.getStudiesForBrowser();\n\n    this.setState({\n      studiesForBrowser,\n    });\n  }\n\n  getStudiesForBrowser = () => {\n    const { studies } = this.props;\n\n    // TODO[react]:\n    // - Add sorting of display sets\n    // - Add useMiddleSeriesInstanceAsThumbnail\n    // - Add showStackLoadingProgressBar option\n    return studies.map(study => {\n      const { studyInstanceUid } = study;\n\n      const thumbnails = study.displaySets.map(displaySet => {\n        const {\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n          // TODO: This is undefined\n          // modality,\n        } = displaySet;\n\n        let imageId;\n        let altImageText = ' '; // modality\n\n        if (displaySet.images && displaySet.images.length) {\n          imageId = displaySet.images[0].getImageId();\n        } else {\n          altImageText = 'SR';\n        }\n\n        return {\n          imageId,\n          altImageText,\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n        };\n      });\n\n      return {\n        studyInstanceUid,\n        thumbnails,\n      };\n    });\n  };\n\n  render() {\n    let mainContentClassName = 'main-content';\n    if (this.props.leftSidebarOpen) {\n      mainContentClassName += ' sidebar-left-open';\n    }\n\n    if (this.props.rightSidebarOpen) {\n      mainContentClassName += ' sidebar-right-open';\n    }\n\n    // TODO[react]: Make ConnectedMeasurementTable extension with state.timepointManager\n    return (\n      <div className=\"FlexboxLayout\">\n        <div\n          className={\n            this.props.leftSidebarOpen\n              ? 'sidebar-menu sidebar-left sidebar-open'\n              : 'sidebar-menu sidebar-left'\n          }\n        >\n          <ConnectedStudyBrowser studies={this.state.studiesForBrowser} />\n        </div>\n        <div className={mainContentClassName}>\n          <ConnectedViewerMain studies={this.props.studies} />\n        </div>\n        <div\n          className={\n            this.props.rightSidebarOpen\n              ? 'sidebar-menu sidebar-right sidebar-open'\n              : 'sidebar-menu sidebar-right'\n          }\n        >\n          <ConnectedMeasurementTable />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlexboxLayout;\n","import { connect } from 'react-redux';\nimport FlexboxLayout from './FlexboxLayout';\n\nconst mapStateToProps = state => {\n  return {\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst ConnectedFlexboxLayout = connect(\n  mapStateToProps,\n  null\n)(FlexboxLayout);\n\nexport default ConnectedFlexboxLayout;\n","export const setLeftSidebarOpen = state => ({\n  type: 'SET_LEFT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setRightSidebarOpen = state => ({\n  type: 'SET_RIGHT_SIDEBAR_OPEN',\n  state,\n});\n\nconst actions = {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n};\n\nexport default actions;\n","import { connect } from 'react-redux';\nimport { CineDialog } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport csTools from 'cornerstone-tools';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// Why do I need or care about any of this info?\n// A dispatch action should be able to pull this at the time of an event?\n// `isPlaying` and `cineFrameRate` might matter, but I think we can prop pass for those.\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { cine, dom } = viewportSpecificData[activeViewportIndex] || {};\n\n  const cineData = cine || {\n    isPlaying: false,\n    cineFrameRate: 24,\n  };\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportCineData: cineData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportCineData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  return {\n    cineFrameRate: activeViewportCineData.cineFrameRate,\n    isPlaying: activeViewportCineData.isPlaying,\n    onPlayPauseChanged: isPlaying => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.isPlaying = !cine.isPlaying;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onFrameRateChanged: frameRate => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.cineFrameRate = frameRate;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onClickNextButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex, imageIds } = stackData.data[0];\n      if (currentImageIdIndex >= imageIds.length - 1) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex + 1);\n    },\n    onClickBackButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex } = stackData.data[0];\n      if (currentImageIdIndex === 0) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex - 1);\n    },\n    onClickSkipToStart: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      scrollToIndex(activeEnabledElement, 0);\n    },\n    onClickSkipToEnd: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const lastIndex = stackData.data[0].imageIds.length - 1;\n      scrollToIndex(activeEnabledElement, lastIndex);\n    },\n  };\n};\n\nconst ConnectedCineDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CineDialog);\n\nexport default ConnectedCineDialog;\n","import { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import OHIF from 'ohif-core';\nimport PluginSwitch from './PluginSwitch.js';\nimport { commandsManager } from './../App.js';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    viewportSpecificData,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\n/*function setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}*/\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  //const { activeViewportIndex, layout } = propsFromState;\n  //const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    /*{\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('axial');\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('sagittal');\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('coronal');\n      },\n    },*/\n    {\n      label: '2D MPR',\n      icon: 'cube',\n      onClick: () => {\n        commandsManager.runCommand('mpr2d');\n      },\n    },\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\nimport { RoundedButtonGroup, ToolbarButton } from 'react-viewerbase';\nimport { commandsManager, extensionManager } from './../App.js';\n\nimport ConnectedCineDialog from './ConnectedCineDialog';\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport { MODULE_TYPES } from 'ohif-core';\nimport PropTypes from 'prop-types';\n\nclass ToolbarRow extends Component {\n  static propTypes = {\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n    setLeftSidebarOpen: PropTypes.func,\n    setRightSidebarOpen: PropTypes.func,\n    activeContexts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  };\n\n  static defaultProps = {\n    leftSidebarOpen: false,\n    rightSidebarOpen: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const toolbarButtonDefinitions = _getVisibleToolbarButtons.call(this);\n    // TODO:\n    // If it's a tool that can be active... Mark it as active?\n    // - Tools that are on/off?\n    // - Tools that can be bound to multiple buttons?\n\n    // Normal ToolbarButtons...\n    // Just how high do we need to hoist this state?\n    // Why ToolbarRow instead of just Toolbar? Do we have any others?\n    this.state = {\n      toolbarButtons: toolbarButtonDefinitions,\n      activeButtons: [],\n      isCineDialogOpen: false,\n    };\n\n    this._handleBuiltIn = _handleBuiltIn.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const activeContextsChanged =\n      prevProps.activeContexts !== this.props.activeContexts;\n\n    if (activeContextsChanged) {\n      this.setState({\n        toolbarButtons: _getVisibleToolbarButtons.call(this),\n      });\n    }\n  }\n\n  onLeftSidebarValueChanged = value => {\n    this.props.setLeftSidebarOpen(!!value);\n  };\n\n  onRightSidebarValueChanged = value => {\n    this.props.setRightSidebarOpen(!!value);\n  };\n\n  render() {\n    const leftSidebarToggle = [\n      {\n        value: 'studies',\n        icon: 'th-large',\n        bottomLabel: 'Series',\n      },\n    ];\n\n    const rightSidebarToggle = [\n      {\n        value: 'measurements',\n        icon: 'list',\n        bottomLabel: 'Measurements',\n      },\n    ];\n\n    const leftSidebarValue = this.props.leftSidebarOpen\n      ? leftSidebarToggle[0].value\n      : null;\n\n    const rightSidebarValue = this.props.rightSidebarOpen\n      ? rightSidebarToggle[0].value\n      : null;\n\n    const buttonComponents = _getButtonComponents.call(\n      this,\n      this.state.toolbarButtons,\n      this.state.activeButtons\n    );\n\n    const cineDialogContainerStyle = {\n      display: this.state.isCineDialogOpen ? 'block' : 'none',\n      position: 'absolute',\n      top: '82px',\n      zIndex: 999,\n    };\n\n    return (\n      <>\n        <div className=\"ToolbarRow\">\n          <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n            <RoundedButtonGroup\n              options={leftSidebarToggle}\n              value={leftSidebarValue}\n              onValueChanged={this.onLeftSidebarValueChanged}\n            />\n          </div>\n          {buttonComponents}\n          <ConnectedLayoutButton />\n          <ConnectedPluginSwitch />\n          <div\n            className=\"pull-right m-t-1 rm-x-1\"\n            style={{ marginLeft: 'auto' }}\n          >\n            <RoundedButtonGroup\n              options={rightSidebarToggle}\n              value={rightSidebarValue}\n              onValueChanged={this.onRightSidebarValueChanged}\n            />\n          </div>\n        </div>\n        <div className=\"CineDialogContainer\" style={cineDialogContainerStyle}>\n          <ConnectedCineDialog />\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Determine which extension buttons should be showing, if they're\n * active, and what their onClick behavior should be.\n */\nfunction _getButtonComponents(toolbarButtons, activeButtons) {\n  return toolbarButtons.map((button, index) => {\n    // TODO: If `button.buttons`, use `ExpandedToolMenu`\n    // I don't believe any extensions currently leverage this\n    return (\n      <ToolbarButton\n        key={button.id}\n        label={button.label}\n        icon={button.icon}\n        onClick={(evt, props) => {\n          if (button.commandName) {\n            const options = Object.assign({ evt }, button.commandOptions);\n            commandsManager.runCommand(button.commandName, options);\n          }\n\n          // TODO: Use Types ENUM\n          // TODO: We can update this to be a `getter` on the extension to query\n          //       For the active tools after we apply our updates?\n          if (button.type === 'setToolActive') {\n            this.setState({\n              activeButtons: [button.id],\n            });\n          } else if (button.type === 'builtIn') {\n            this._handleBuiltIn(button.options);\n          }\n        }}\n        isActive={activeButtons.includes(button.id)}\n      />\n    );\n  });\n}\n\nfunction _getVisibleToolbarButtons() {\n  const toolbarModules = extensionManager.modules[MODULE_TYPES.TOOLBAR];\n  const toolbarButtonDefinitions = [];\n\n  toolbarModules.forEach(extension => {\n    const { definitions, defaultContext } = extension.module;\n    definitions.forEach(definition => {\n      const context = definition.context || defaultContext;\n\n      if (this.props.activeContexts.includes(context)) {\n        toolbarButtonDefinitions.push(definition);\n      }\n    });\n  });\n\n  return toolbarButtonDefinitions;\n}\n\nfunction _handleBuiltIn({ behavior } = {}) {\n  if (behavior === 'CINE') {\n    this.setState({\n      isCineDialogOpen: !this.state.isCineDialogOpen,\n    });\n  }\n}\n\nexport default ToolbarRow;\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","import {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n} from './../store/layout/actions.js';\n\nimport ToolbarRow from './ToolbarRow';\nimport { connect } from 'react-redux';\nimport { getActiveContexts } from './../store/layout/selectors.js';\n\nconst mapStateToProps = state => {\n  return {\n    activeContexts: getActiveContexts(state),\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLeftSidebarOpen: state => {\n      dispatch(setLeftSidebarOpen(state));\n    },\n    setRightSidebarOpen: state => {\n      dispatch(setRightSidebarOpen(state));\n    },\n  };\n};\n\nconst ConnectedToolbarRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import OHIF from 'ohif-core';\n//import { CineDialog } from 'react-viewerbase';\n\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedFlexboxLayout from './ConnectedFlexboxLayout.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    const patientId = studies[0] && studies[0].patientId;\n    timepointApi.retrieveTimepoints({ patientId });\n    measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n  }\n\n  render() {\n    return (\n      <>\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n        <div id=\"viewer\" className=\"Viewer\">\n          <ConnectedToolbarRow />\n          {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n          {/*<StudyPrefetcher studies={this.props.studies} />*/}\n          <ConnectedFlexboxLayout studies={this.props.studies} />\n          <ConnectedLabellingOverlay />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  null,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport { metadata, studies, utils } from 'ohif-core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  async componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n\n    try {\n      const studies = await retrieveStudiesMetadata(\n        server,\n        studyInstanceUids,\n        seriesInstanceUids\n      );\n\n      // Render the viewer when the data is ready\n      // TODO: CLEAR THIS SOMEWHERE ELSE\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({\n        studies: updatedStudies,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n      });\n\n      // TODO: Handle gracefully instead of throwing?\n      throw new Error(err);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData.js';\n\nfunction decodeStudyUids(studyUids) {\n  const decodedData = window.atob(studyUids);\n\n  return decodedData.split(';');\n}\n\nfunction getQueryParameters(location) {\n  if (location) {\n    return queryString.parse(location.search);\n  }\n\n  return {};\n}\n\nfunction IHEInvokeImageDisplay({ location }) {\n  const {\n    // patientID,\n    requestType,\n    studyUID,\n  } = getQueryParameters(location);\n\n  switch (requestType) {\n    case 'STUDY':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={studyUID.split(';')}\n        />\n      );\n\n    case 'STUDYBASE64':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={decodeStudyUids(studyUID)}\n        />\n      );\n\n    case 'PATIENT':\n      // TODO: connect this to the StudyList when we have the filter parameters set up\n      // return <StudyList patientUids={patientID.split(';')} />;\n      return '';\n\n    default:\n      // TODO: Figure out what to do here, this won't work because StudyList expects studies\n      // return <StudyList />;\n      return '';\n  }\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(IHEInvokeImageDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [match.params.studyInstanceUid];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n\n    this.searchForStudies();\n  }\n\n  searchForStudies = (\n    searchData = {\n      currentPage: 0,\n      rowsPerPage: StudyListWithData.rowsPerPage,\n      studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n      studyDateTo: StudyListWithData.defaultStudyDateTo,\n      sortData: StudyListWithData.defaultSort,\n    }\n  ) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        let sortedStudies = studies.map(study => {\n          if (!moment(study.studyDate, 'MMM DD, YYYY', true).isValid()) {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n          }\n          return study;\n        });\n\n        sortedStudies.sort(function(a, b) {\n          let fieldA = a[field];\n          let fieldB = b[field];\n          if (field === 'studyDate') {\n            fieldA = moment(fieldA).toISOString();\n            fieldB = moment(fieldB).toISOString();\n          }\n          if (order === 'desc') {\n            if (fieldA < fieldB) {\n              return -1;\n            }\n            if (fieldA > fieldB) {\n              return 1;\n            }\n            return 0;\n          } else {\n            if (fieldA > fieldB) {\n              return -1;\n            }\n            if (fieldA < fieldB) {\n              return 1;\n            }\n            return 0;\n          }\n        });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        <StudyList\n          studies={this.state.studies}\n          studyListFunctionsEnabled={false}\n          onImport={this.onImport}\n          onSelectItem={this.onSelectItem}\n          pageSize={this.rowsPerPage}\n          defaultSort={StudyListWithData.defaultSort}\n          studyListDateFilterNumDays={\n            StudyListWithData.studyListDateFilterNumDays\n          }\n          onSearch={this.onSearch}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(StudyListWithData);\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction StudyListRouting({ match }) {\n  // TODO: Figure out which filters we want to pass in via a URL\n  //const { patientId } = match.params;\n\n  return <ConnectedStudyList />;\n}\n\nStudyListRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      patientIds: PropTypes.string,\n    }),\n  }),\n};\n\nexport default StudyListRouting;\n","import React, { Component } from 'react';\nimport { log, metadata, studies, utils } from 'ohif-core';\n\nimport PropTypes from 'prop-types';\nimport Viewer from '../connectedComponents/Viewer';\nimport { extensionManager } from './../App.js';\nimport qs from 'querystring';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          retrieveStudiesMetadata(\n            server,\n            studyInstanceUids,\n            seriesInstanceUids\n          ).then(\n            studies => {\n              resolve(studies);\n            },\n            error => {\n              reject(error);\n            }\n          );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const query = qs.parse(this.props.location.search);\n      const studies = await StandaloneRouting.parseQueryAndFetchStudies(query);\n\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({ studies: updatedStudies });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './CallbackPage.js';\nimport { withRouter } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        <Route exact path=\"/studylist\" component={StudyListRouting} />\n        <Route exact path=\"/\" component={StudyListRouting} />\n        <Route exact path=\"/viewer\" component={StandaloneRouting} />\n        <Route path=\"/viewer/:studyInstanceUids\" component={ViewerRouting} />\n        <Route\n          path=\"/study/:studyInstanceUid/series/:seriesInstanceUids\"\n          component={ViewerRouting}\n        />\n        <Route\n          path=\"/IHEInvokeImageDisplay\"\n          component={IHEInvokeImageDisplay}\n        />\n        <Route render={() => <div> Sorry, this page does not exist. </div>} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","const defaultState = {\n  leftSidebarOpen: true,\n  rightSidebarOpen: false,\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    // ~ SIDEBAR\n    case 'SET_LEFT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { leftSidebarOpen: action.state });\n    case 'SET_RIGHT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { rightSidebarOpen: action.state });\n    case 'SET_LABELLING_FLOW_DATA': {\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    }\n    case 'SET_TOOL_CONTEXT_MENU_DATA': {\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    }\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\n\n// import { createLogger } from 'redux-logger';\nimport layoutReducers from './layout/reducers.js';\nimport { reducer as oidcReducer } from 'redux-oidc';\nimport { redux } from 'ohif-core';\nimport thunkMiddleware from 'redux-thunk';\n\n// Combine our ohif-core, ui, and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage } = redux;\n// const loggerMiddleware = createLogger();\n\nreducers.ui = layoutReducers;\nreducers.oidc = oidcReducer;\n\nconst rootReducer = combineReducers(reducers);\nconst store = createStore(\n  rootReducer,\n  localStorage.loadState(), // preloadedState\n  applyMiddleware(\n    thunkMiddleware // Lets us dispatch() functions\n    // loggerMiddleware // neat middleware that logs actions\n  )\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nexport default store;\n","import { redux } from 'ohif-core';\nimport store from './../store';\nconst { setViewportActive } = redux.actions;\n\nconst actions = {\n  updateViewportDisplaySet: ({ direction }) => {\n    // TODO\n    console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: ({ viewports, direction }) => {\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n    const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n    let newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n    store.dispatch(setViewportActive(newIndex));\n  },\n};\n\nconst definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: 1 },\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: -1 },\n  },\n};\n\nexport default definitions;\n","import viewerCommandDefinitions from './viewer.js';\n\nconst CONTEXTS = {\n  viewer: 'VIEWER',\n};\n\n/**\n * Register all commands.\n * TODO: Extensions should self-register their commands\n */\nfunction init(commandsManager) {\n  _registerViewerCommands(commandsManager);\n}\n\n/**\n * Register all Viewer commands\n *\n * @private\n */\nfunction _registerViewerCommands(commandsManager) {\n  const commandContext = CONTEXTS.viewer;\n\n  commandsManager.createContext(commandContext);\n  Object.keys(viewerCommandDefinitions).forEach(commandName => {\n    const commandDefinition = viewerCommandDefinitions[commandName];\n\n    commandsManager.registerCommand(\n      commandContext,\n      commandName,\n      commandDefinition\n    );\n  });\n}\n\nexport default {\n  init,\n};\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","import './config';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  utils,\n} from 'ohif-core';\nimport React, { Component } from 'react';\nimport {\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport { I18nextProvider } from 'react-i18next';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\nimport { OidcProvider } from 'redux-oidc';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport appCommands from './appCommands';\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport i18n from '@ohif/i18n';\nimport setupTools from './setupTools';\nimport store from './store';\n// Imported flat feature since is not transpiled for old browser versions\nimport 'core-js/features/array/flat';\n\n// ~~~~ APP SETUP\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst hotkeysManager = new HotkeysManager(commandsManager);\nconst extensionManager = new ExtensionManager({ commandsManager });\n\n// TODO: Should be done in extensions w/ commandsModule\n// ~~ ADD COMMANDS\nappCommands.init(commandsManager);\nif (window.config.hotkeys) {\n  hotkeysManager.setHotkeys(window.config.hotkeys, true);\n}\n// ~~~~ END APP SETUP\n\nsetupTools(store);\n\n// const children = {\n//   viewport: [<ConnectedToolContextMenu key=\"tool-context\" />],\n// };\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nextensionManager.registerExtensions([\n  OHIFCornerstoneExtension,\n  OHIFVTKExtension,\n  OHIFDicomPDFExtension,\n  OHIFDicomHtmlExtension,\n  OHIFDicomMicroscopyExtension,\n]);\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <I18nextProvider i18n={i18n}>\n            <OidcProvider store={store} userManager={userManager}>\n              <Router basename={this.props.routerBasename}>\n                <WhiteLabellingContext.Provider\n                  value={this.props.whiteLabelling}\n                >\n                  <OHIFStandaloneViewer userManager={userManager} />\n                </WhiteLabellingContext.Provider>\n              </Router>\n            </OidcProvider>\n          </I18nextProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n          <Router basename={this.props.routerBasename}>\n            <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n              <OHIFStandaloneViewer />\n            </WhiteLabellingContext.Provider>\n          </Router>\n        </I18nextProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// Make our managers accessible\nexport { commandsManager, extensionManager, hotkeysManager };\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n  \n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\nUI settings\nPlugins\n    - Custom tools / buttons\n    - Custom Sidebar module thing\n    - Custom Viewports\n    - Custom Sop Class Interpreters\n*/\n\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"leftSidebarOpen\": false,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}