{"version":3,"sources":["config.js","version.js","utils/getDefaultToolbarButtons.js","utils/getUserManagerForOpenIdConnectClient.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","redux/actions.js","connectedComponents/ConnectedUserPreferencesModal.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","connectedComponents/ConnectedMeasurementTable.js","lib/jumpToRowItem.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","connectedComponents/FlexboxLayout.js","connectedComponents/ConnectedFlexboxLayout.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/ViewerRouting.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","CallbackPage.js","OHIFStandaloneViewer.js","setupTools.js","redux/ui.js","App.js","utils/initWebWorkers.js","index.js"],"names":["window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getDefaultToolbarButtons","command","type","text","icon","active","getUserManagerForOpenIdConnectClient","oidcSettings","settings","Object","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","updateTableWithNewMeasurementData","_ref","toolType","measurementNumber","location","description","measurementApi","measurements","MeasurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","options","doneCallback","cornerstoneTools","getToolForElement","configuration","toolTypes","defaultDropdownItems","actionType","action","nearbyToolData","removeToolState","_ref2","skipAddLabelButton","editLocation","_ref3","editDescriptionOnDialog","getDropdownItems","isTouchEvent","arguments","length","undefined","coords","nearbyTool","pointNearTool","toolData","getToolState","data","index","toolInterface","Error","getNearbyToolData","currentPoints","canvas","dropdownItems","item","params","push","ToolContextMenu","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","mainElement","current","updateElementPosition","componentDidUpdate","_this$mainElement$cur","offsetParent","offsetTop","offsetHeight","offsetWidth","offsetLeft","offBoundPixels","top","y","style","left","x","React","createRef","_this2","_this$props","availableTools","dropdownComponents","map","react_default","a","createElement","key","className","onClick","event","onClose","position","ref","Component","defaultProps","visible","ConnectedToolContextMenu","connect","ownProps","ui","contextMenu","viewportIndex","toolContextMenuData","extensions","OHIFLogo","target","rel","href","react_viewerbase_dist_index_es","name","defaultContextValues","logoComponent","WhiteLabellingContext","createContext","setLeftSidebarOpen","setRightSidebarOpen","setUserPreferencesModalOpen","setUserPreferences","redux","actions","ConnectedUserPreferencesModal","contextName","commandContext","context","isOpen","userPreferencesModalOpen","windowLevelData","preferences","hotKeysData","dispatch","onCancel","onSave","cloneDeep","hotkeysUtil","setHotkeys","onResetToDefaults","UserPreferencesModal","Header","userPreferencesOpen","title","openUserPreferencesModal","link","home","studyLink","Link","to","children","pathname","list","align","connectedComponents_ConnectedUserPreferencesModal","withRouter","ConnectedHeader","setViewportSpecificData","getMeasurementText","measurementData","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","timepoint","eachData","displayText","timepointId","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","config","toolGroup","childTools","getAllTools","tableMeasurements","groupName","groupId","id","keys","toolId","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","date","moment","latestDate","format","ConnectedMeasurementTable","_state$timepointManag","timepointManager","measurementCollection","viewports","dispatchRelabel","viewportsState","activeViewportIndex","enabledElements","log","error","clientX","clientY","assign","dispatchEditDescription","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","Math","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","viewportSpecificData","study","utils","studyMetadataManager","get","studyInstanceUid","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","measurementToActive","propsFromState","propsFromDispatch","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","viewportPluginIds","plugins","availablePlugins","plugin","PLUGIN_TYPES","VIEWPORT","component","LayoutManager","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","some","v","setViewportData","HotkeysUtil","clearViewportSpecificData","setToolActive","setActiveViewportSpecificData","dSet","getDisplaySets","setState","connectedComponents_ConnectedLayoutManager","ConnectedViewerMain","_state$viewports","viewport","FlexboxLayout","studiesForBrowser","getStudiesForBrowser","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","mainContentClassName","leftSidebarOpen","rightSidebarOpen","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedMeasurementTable","ConnectedFlexboxLayout","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","setSingleLayoutData","originalArray","slice","layoutData","ConnectedPluginSwitch","console","warn","vtk","mode","sliceNormal","ToolbarRow","onLeftSidebarValueChanged","value","onRightSidebarValueChanged","pluginComp","leftSidebarToggle","bottomLabel","rightSidebarToggle","leftSidebarValue","rightSidebarValue","currentPluginId","pluginId","_OHIF$plugins","TOOLBAR","PluginComponent","padding","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","ConnectedToolbarRow","pluginInLayout","pluginInViewportData","SimpleDialog","rootClass","componentRef","componentStyle","headerTitle","onConfirm","bounding","elementRef","currentPosition","currentElement","maxHeight","buttonSize","EditDescriptionDialog","onUpdate","handleChange","prevProps","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","react_transition_group","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","LabellingFlow","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","Fragment","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","LabellingManager_LabellingManager","ConnectedLabellingOverlay","labelling","labellingFlowData","Viewer","retrieveMeasurements","patientId","timepointIds","Promise","resolve","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","connectedComponents_ConnectedFlexboxLayout","connectedComponents_ConnectedLabellingOverlay","setTimepoints","setMeasurements","ConnectedViewer","createDisplaySets","ViewerRetrieveStudyData","seriesInstanceUids","server","retrieveStudiesMetadata","then","updatedStudies","catch","JSON","stringify","connectedComponents_ConnectedViewer","IHEInvokeImageDisplay","match","requestType","displayStudyList","studyUID","split","uids","atob","connectedComponents_ViewerRetrieveStudyData","isActive","ConnectedViewerRetrieveStudyData","servers","ViewerRouting","studyUIDs","seriesUIDs","_match$params","connectedComponents_ConnectedViewerRetrieveStudyData","StudyListWithData","searchData","searchForStudies","currentPage","rowsPerPage","studyDateFrom","defaultStudyDateFrom","studyDateTo","defaultStudyDateTo","sortData","defaultSort","patientName","accessionNumber","studyDescription","modalitiesInStudy","modalities","limit","offset","searchStudies","_searchData$sortData","field","order","sortedStudies","isValid","fieldA","fieldB","onImport","onSelectItem","studyInstanceUID","history","onSearch","studyListFunctionsEnabled","pageSize","studyListDateFilterNumDays","subtract","toDate","ConnectedStudyList","StudyListRouting","studylist_ConnectedStudyList","StandaloneRouting","qs","parse","search","parseQueryAndFetchStudies","src_connectedComponents_Viewer","reject","url","oReq","XMLHttpRequest","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","sessionStorage","getItem","errorCallback","reload","OHIFStandaloneViewer","unlisten","listen","setContext","expired","setItem","Switch","Route","exact","path","onEnter","render","src_CallbackPage","signinRedirect","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","parseInt","dataset","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","defaultState","ExtensionManager","reducers","localStorage","oidcReducer","combined","combineReducers","createStore","loadState","subscribe","saveState","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","connectedComponents_ConnectedToolContextMenu","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","registerExtensions","App","defaultButtons","routerBasename","buttonsAction","setAvailableButtons","firstOpenIdClient","addServers","baseDirectory","webWorkScriptsPath","scriptsPath","protocol","host","maxWebWorkers","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","initWebWorkers","relativeWebWorkerScriptsPath","es","BrowserRouter","basename","Provider","src_OHIFStandaloneViewer_0","__webpack_require__","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.28987f49.chunk.js","sourcesContent":["import dicomParser from 'dicom-parser';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport OHIF from 'ohif-core';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.20';\n","export default function() {\n  return [\n    {\n      command: 'StackScroll',\n      type: 'tool',\n      text: 'Stack Scroll',\n      icon: 'bars',\n      active: false,\n    },\n    {\n      command: 'Zoom',\n      type: 'tool',\n      text: 'Zoom',\n      icon: 'search-plus',\n      active: false,\n    },\n    {\n      command: 'Wwwc',\n      type: 'tool',\n      text: 'Levels',\n      icon: 'level',\n      active: true,\n    },\n    {\n      command: 'Pan',\n      type: 'tool',\n      text: 'Pan',\n      icon: 'arrows',\n      active: false,\n    },\n    {\n      command: 'Length',\n      type: 'tool',\n      text: 'Length',\n      icon: 'measure-temp',\n      active: false,\n    },\n    /*{\n        command: 'Annotate',\n        type: 'tool',\n        text: 'Annotate',\n        icon: `icon-tools-measure-non-target`,\n        active: false\n    },*/\n    {\n      command: 'Angle',\n      type: 'tool',\n      text: 'Angle',\n      icon: 'angle-left',\n      active: false,\n    },\n    {\n      command: 'reset',\n      type: 'command',\n      text: 'Reset',\n      icon: 'reset',\n      active: false,\n    },\n  ];\n}\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","export const setLeftSidebarOpen = state => ({\n  type: 'SET_LEFT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setRightSidebarOpen = state => ({\n  type: 'SET_RIGHT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setUserPreferencesModalOpen = state => ({\n  type: 'SET_USER_PREFERENCES_MODAL_OPEN',\n  state,\n});\n\nconst actions = {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n  setUserPreferencesModalOpen,\n};\n\nexport default actions;\n","import { connect } from 'react-redux';\nimport { UserPreferencesModal } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { setUserPreferencesModalOpen } from '../redux/actions.js';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst { setUserPreferences } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const contextName = window.store.getState().commandContext.context;\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n    windowLevelData: state.preferences[contextName]\n      ? state.preferences[contextName].windowLevelData\n      : {},\n    hotKeysData: state.preferences[contextName]\n      ? state.preferences[contextName].hotKeysData\n      : {},\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCancel: () => {\n      dispatch(setUserPreferencesModalOpen(false));\n    },\n    onSave: data => {\n      const contextName = window.store.getState().commandContext.context;\n      const preferences = cloneDeep(window.store.getState().preferences);\n      preferences[contextName] = data;\n      dispatch(setUserPreferences(preferences));\n      dispatch(setUserPreferencesModalOpen(false));\n      OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n    },\n    onResetToDefaults: () => {\n      dispatch(setUserPreferences());\n      dispatch(setUserPreferencesModalOpen(false));\n      OHIF.hotkeysUtil.setHotkeys();\n    },\n  };\n};\n\nconst ConnectedUserPreferencesModal = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPreferencesModal);\n\nexport default ConnectedUserPreferencesModal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Dropdown } from 'react-viewerbase';\nimport './Header.css';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport ConnectedUserPreferencesModal from '../../connectedComponents/ConnectedUserPreferencesModal.js';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    openUserPreferencesModal: PropTypes.func,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userPreferencesOpen: false,\n    };\n\n    this.options = [\n      {\n        title: 'Preferences ',\n        icon: {\n          name: 'user',\n        },\n        onClick: this.props.openUserPreferencesModal,\n      },\n      {\n        title: 'About',\n        icon: {\n          name: 'info',\n        },\n        link: 'http://ohif.org',\n      },\n    ];\n  }\n\n  render() {\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              Back to Viewer\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {!this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              Study list\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">INVESTIGATIONAL USE ONLY</span>\n          <Dropdown title=\"Options\" list={this.options} align=\"right\" />\n          <ConnectedUserPreferencesModal />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import { connect } from 'react-redux';\nimport Header from '../components/Header/Header.js';\nimport { setUserPreferencesModalOpen } from '../redux/actions.js';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openUserPreferencesModal: () => {\n      dispatch(setUserPreferencesModalOpen(true));\n    },\n  };\n};\n\nconst ConnectedHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\nexport default ConnectedHeader;\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\nimport jumpToRowItem from '../lib/jumpToRowItem.js';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import { OHIF } from 'ohif-core';\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = OHIF.measurements.MeasurementApi.getToolConfiguration(\n      toolType\n    );\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = OHIF.utils.studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { connect } from 'react-redux';\nimport { LayoutManager } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\n\nconst mapStateToProps = state => {\n  const viewportPluginIds = state.plugins.availablePlugins\n    .filter(plugin => plugin.type === OHIF.plugins.PLUGIN_TYPES.VIEWPORT)\n    .map(plugin => plugin.id);\n\n  const availablePlugins = {};\n  viewportPluginIds.forEach(id => {\n    const plugin = OHIF.plugins.availablePlugins.find(\n      plugin => plugin.id === id\n    );\n    if (plugin) {\n      availablePlugins[id] = plugin.component;\n    }\n  });\n\n  // TODO Use something like state.plugins.defaultPlugin[OHIF.plugins.PLUGIN_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportPluginIds && viewportPluginIds.length) {\n    defaultPlugin = viewportPluginIds[0];\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    availablePlugins,\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OHIF } from 'ohif-core';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport './ViewerMain.css';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    studies: PropTypes.array.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n    setToolActive: PropTypes.func.isRequired,\n    setActiveViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Initialize hotkeys\n    new OHIF.HotkeysUtil('viewer', {\n      setViewportSpecificData: props.setViewportSpecificData,\n      clearViewportSpecificData: props.clearViewportSpecificData,\n      setToolActive: props.setToolActive,\n      setActiveViewportSpecificData: props.setActiveViewportSpecificData,\n    });\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    const displaySets = this.getDisplaySets(this.props.studies);\n\n    this.setState({\n      displaySets,\n    });\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        <ConnectedLayoutManager\n          studies={this.props.studies}\n          viewportData={this.getViewportData()}\n          setViewportData={this.setViewportData}\n        />\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import { connect } from 'react-redux';\nimport ViewerMain from './ViewerMain';\nimport OHIF from 'ohif-core';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n  setToolActive,\n  setActiveViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n    setToolActive: tool => {\n      dispatch(setToolActive(tool));\n    },\n    setActiveViewportSpecificData: viewport => {\n      dispatch(setActiveViewportSpecificData(viewport));\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './FlexboxLayout.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport PropTypes from 'prop-types';\n\nclass FlexboxLayout extends Component {\n  static propTypes = {\n    studies: PropTypes.array.isRequired,\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    studiesForBrowser: [],\n  };\n\n  componentDidMount() {\n    const studiesForBrowser = this.getStudiesForBrowser();\n\n    this.setState({\n      studiesForBrowser,\n    });\n  }\n\n  getStudiesForBrowser = () => {\n    const { studies } = this.props;\n\n    // TODO[react]:\n    // - Add sorting of display sets\n    // - Add useMiddleSeriesInstanceAsThumbnail\n    // - Add showStackLoadingProgressBar option\n    return studies.map(study => {\n      const { studyInstanceUid } = study;\n\n      const thumbnails = study.displaySets.map(displaySet => {\n        const {\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n          // TODO: This is undefined\n          // modality,\n        } = displaySet;\n\n        let imageId;\n        let altImageText = ' '; // modality\n\n        if (displaySet.images && displaySet.images.length) {\n          imageId = displaySet.images[0].getImageId();\n        } else {\n          altImageText = 'SR';\n        }\n\n        return {\n          imageId,\n          altImageText,\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n        };\n      });\n\n      return {\n        studyInstanceUid,\n        thumbnails,\n      };\n    });\n  };\n\n  render() {\n    let mainContentClassName = 'main-content';\n    if (this.props.leftSidebarOpen) {\n      mainContentClassName += ' sidebar-left-open';\n    }\n\n    if (this.props.rightSidebarOpen) {\n      mainContentClassName += ' sidebar-right-open';\n    }\n\n    // TODO[react]: Make ConnectedMeasurementTable extension with state.timepointManager\n    return (\n      <div className=\"FlexboxLayout\">\n        <div\n          className={\n            this.props.leftSidebarOpen\n              ? 'sidebar-menu sidebar-left sidebar-open'\n              : 'sidebar-menu sidebar-left'\n          }\n        >\n          <ConnectedStudyBrowser studies={this.state.studiesForBrowser} />\n        </div>\n        <div className={mainContentClassName}>\n          <ConnectedViewerMain studies={this.props.studies} />\n        </div>\n        <div\n          className={\n            this.props.rightSidebarOpen\n              ? 'sidebar-menu sidebar-right sidebar-open'\n              : 'sidebar-menu sidebar-right'\n          }\n        >\n          <ConnectedMeasurementTable />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlexboxLayout;\n","import { connect } from 'react-redux';\nimport FlexboxLayout from './FlexboxLayout';\n\nconst mapStateToProps = state => {\n  return {\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst ConnectedFlexboxLayout = connect(\n  mapStateToProps,\n  null\n)(FlexboxLayout);\n\nexport default ConnectedFlexboxLayout;\n","import { connect } from 'react-redux';\nimport { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import { connect } from 'react-redux';\nimport PluginSwitch from './PluginSwitch.js';\nimport OHIF from 'ohif-core';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\nfunction setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const { activeViewportIndex, layout } = propsFromState;\n  const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    {\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        console.warn('Axial');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: 'mpr',\n            sliceNormal: [0, 0, 1],\n          },\n        };\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          data\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        console.warn('Sagittal');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: 'mpr',\n            sliceNormal: [1, 0, 0],\n          },\n        };\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          data\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        console.warn('Coronal');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: 'mpr',\n            sliceNormal: [0, 1, 0],\n          },\n        };\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          data\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    /*{\n      text: '3D',\n      icon: `#cube`,\n      onClick: (click) => {\n        console.warn('3D Perspective');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: '3d',\n          }\n        };\n\n        const layoutData = setSingleLayoutData(layout.viewports, activeViewportIndex, data);\n\n        setLayout({ viewports: layoutData });\n      }\n    }*/\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport OHIF from 'ohif-core';\nimport PropTypes from 'prop-types';\nimport { RoundedButtonGroup } from 'react-viewerbase';\n\nclass ToolbarRow extends Component {\n  static propTypes = {\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n    setLeftSidebarOpen: PropTypes.func,\n    setRightSidebarOpen: PropTypes.func,\n    pluginId: PropTypes.string,\n  };\n\n  static defaultProps = {\n    leftSidebarOpen: false,\n    rightSidebarOpen: false,\n  };\n\n  onLeftSidebarValueChanged = value => {\n    this.props.setLeftSidebarOpen(!!value);\n  };\n\n  onRightSidebarValueChanged = value => {\n    this.props.setRightSidebarOpen(!!value);\n  };\n\n  render() {\n    const leftSidebarToggle = [\n      {\n        value: 'studies',\n        icon: 'th-large',\n        bottomLabel: 'Series',\n      },\n    ];\n\n    const rightSidebarToggle = [\n      {\n        value: 'measurements',\n        icon: 'list',\n        bottomLabel: 'Measurements',\n      },\n    ];\n\n    const leftSidebarValue = this.props.leftSidebarOpen\n      ? leftSidebarToggle[0].value\n      : null;\n\n    const rightSidebarValue = this.props.rightSidebarOpen\n      ? rightSidebarToggle[0].value\n      : null;\n\n    const currentPluginId = this.props.pluginId;\n\n    const { PLUGIN_TYPES, availablePlugins } = OHIF.plugins;\n    const plugin = availablePlugins.find(entry => {\n      return (\n        entry.type === PLUGIN_TYPES.TOOLBAR && entry.id === currentPluginId\n      );\n    });\n\n    let pluginComp;\n    if (plugin) {\n      const PluginComponent = plugin.component;\n\n      pluginComp = <PluginComponent />;\n    }\n\n    return (\n      <div className=\"ToolbarRow\">\n        <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n          <RoundedButtonGroup\n            options={leftSidebarToggle}\n            value={leftSidebarValue}\n            onValueChanged={this.onLeftSidebarValueChanged}\n          />\n        </div>\n        {pluginComp}\n        <ConnectedLayoutButton />\n        <ConnectedPluginSwitch />\n        <div className=\"pull-right m-t-1 rm-x-1\" style={{ marginLeft: 'auto' }}>\n          <RoundedButtonGroup\n            options={rightSidebarToggle}\n            value={rightSidebarValue}\n            onValueChanged={this.onRightSidebarValueChanged}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToolbarRow;\n","import { connect } from 'react-redux';\nimport ToolbarRow from './ToolbarRow';\nimport { setLeftSidebarOpen, setRightSidebarOpen } from '../redux/actions.js';\n\nconst defaultPlugin = 'cornerstone';\n\nconst mapStateToProps = state => {\n  const { layout, viewportSpecificData, activeViewportIndex } = state.viewports;\n  const pluginInLayout =\n    layout.viewports[activeViewportIndex] &&\n    layout.viewports[activeViewportIndex].plugin;\n  const pluginInViewportData =\n    viewportSpecificData[activeViewportIndex] &&\n    viewportSpecificData[activeViewportIndex].plugin;\n  const pluginInActiveViewport =\n    pluginInLayout || pluginInViewportData || defaultPlugin;\n  //     const extensionData = state.extensions[pluginInActiveViewport];\n\n  return {\n    pluginId: pluginInActiveViewport,\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLeftSidebarOpen: state => {\n      dispatch(setLeftSidebarOpen(state));\n    },\n    setRightSidebarOpen: state => {\n      dispatch(setRightSidebarOpen(state));\n    },\n  };\n};\n\nconst ConnectedToolbarRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import OHIF from 'ohif-core';\n//import { CineDialog } from 'react-viewerbase';\n\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedFlexboxLayout from './ConnectedFlexboxLayout.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    const patientId = studies[0] && studies[0].patientId;\n    timepointApi.retrieveTimepoints({ patientId });\n    measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n  }\n\n  render() {\n    return (\n      <>\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n        <div id=\"viewer\" className=\"Viewer\">\n          <ConnectedToolbarRow />\n          {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n          {/*<StudyPrefetcher studies={this.props.studies} />*/}\n          <ConnectedFlexboxLayout studies={this.props.studies} />\n          <ConnectedLabellingOverlay />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  null,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport ConnectedViewer from './ConnectedViewer.js';\n\nconst { createDisplaySets } = OHIF.utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n    const promise = OHIF.studies.retrieveStudiesMetadata(\n      server,\n      studyInstanceUids,\n      seriesInstanceUids\n    );\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        const updatedStudies = createDisplaySets(studies);\n\n        this.setState({\n          studies: updatedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ViewerRetrieveStudyData from '../connectedComponents/ViewerRetrieveStudyData.js';\n\nfunction IHEInvokeImageDisplay({ match }) {\n  const requestType = match.params.query.requestType;\n  let studyInstanceUids;\n  //let patientUids;\n  let displayStudyList = false;\n\n  if (requestType === 'STUDY') {\n    studyInstanceUids = match.params.query.studyUID.split(';');\n  } else if (requestType === 'STUDYBASE64') {\n    const uids = this.params.query.studyUID;\n    const decodedData = window.atob(uids);\n    studyInstanceUids = decodedData.split(';');\n  } else if (requestType === 'PATIENT') {\n    //patientUidspatientUids = this.params.query.patientID.split(';');\n    displayStudyList = true;\n  } else {\n    displayStudyList = true;\n  }\n\n  if (displayStudyList) {\n    return ''; //<StudyList patientUids={patientUids}/>);\n  }\n\n  return <ViewerRetrieveStudyData studyInstanceUids={studyInstanceUids} />;\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      query: PropTypes.shape({\n        requestType: PropTypes.string.isRequired,\n        studyUID: PropTypes.string,\n        patientID: PropTypes.string,\n      }),\n    }),\n  }),\n};\n\nexport default IHEInvokeImageDisplay;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [match.params.studyInstanceUid];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n\n    this.searchForStudies();\n  }\n\n  searchForStudies = (\n    searchData = {\n      currentPage: 0,\n      rowsPerPage: StudyListWithData.rowsPerPage,\n      studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n      studyDateTo: StudyListWithData.defaultStudyDateTo,\n      sortData: StudyListWithData.defaultSort,\n    }\n  ) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        let sortedStudies = studies.map(study => {\n          if (!moment(study.studyDate, 'MMM DD, YYYY', true).isValid()) {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n          }\n          return study;\n        });\n\n        sortedStudies.sort(function(a, b) {\n          let fieldA = a[field];\n          let fieldB = b[field];\n          if (field === 'studyDate') {\n            fieldA = moment(fieldA).toISOString();\n            fieldB = moment(fieldB).toISOString();\n          }\n          if (order === 'desc') {\n            if (fieldA < fieldB) {\n              return -1;\n            }\n            if (fieldA > fieldB) {\n              return 1;\n            }\n            return 0;\n          } else {\n            if (fieldA > fieldB) {\n              return -1;\n            }\n            if (fieldA < fieldB) {\n              return 1;\n            }\n            return 0;\n          }\n        });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        <StudyList\n          studies={this.state.studies}\n          studyListFunctionsEnabled={false}\n          onImport={this.onImport}\n          onSelectItem={this.onSelectItem}\n          pageSize={this.rowsPerPage}\n          defaultSort={StudyListWithData.defaultSort}\n          studyListDateFilterNumDays={\n            StudyListWithData.studyListDateFilterNumDays\n          }\n          onSearch={this.onSearch}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(StudyListWithData);\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction StudyListRouting({ match }) {\n  // TODO: Figure out which filters we want to pass in via a URL\n  //const { patientId } = match.params;\n\n  return <ConnectedStudyList />;\n}\n\nStudyListRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      patientIds: PropTypes.string,\n    }),\n  }),\n};\n\nexport default StudyListRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport qs from 'querystring';\nimport Viewer from '../connectedComponents/Viewer';\nimport OHIF from 'ohif-core';\n\nconst { createDisplaySets } = OHIF.utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        OHIF.log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          OHIF.log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        OHIF.log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          OHIF.studies\n            .retrieveStudiesMetadata(\n              server,\n              studyInstanceUids,\n              seriesInstanceUids\n            )\n            .then(\n              studies => {\n                resolve(studies);\n              },\n              error => {\n                reject(error);\n              }\n            );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      OHIF.log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  componentDidMount() {\n    const query = qs.parse(this.props.location.search);\n    StandaloneRouting.parseQueryAndFetchStudies(query).then(\n      studies => {\n        const updatedStudies = createDisplaySets(studies);\n\n        this.setState({ studies: updatedStudies });\n      },\n      error => {\n        this.setState({ error });\n      }\n    );\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './CallbackPage.js';\nimport { withRouter } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        <Route exact path=\"/studylist\" component={StudyListRouting} />\n        <Route exact path=\"/\" component={StudyListRouting} />\n        <Route exact path=\"/viewer\" component={StandaloneRouting} />\n        <Route path=\"/viewer/:studyInstanceUids\" component={ViewerRouting} />\n        <Route\n          path=\"/study/:studyInstanceUid/series/:seriesInstanceUids\"\n          component={ViewerRouting}\n        />\n        <Route\n          path=\"/IHEInvokeImageDisplay\"\n          component={IHEInvokeImageDisplay}\n        />\n        <Route render={() => <div> Sorry, this page does not exist. </div>} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","const defaultState = {\n  leftSidebarOpen: true,\n  rightSidebarOpen: false,\n  userPreferencesModalOpen: false,\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_LEFT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { leftSidebarOpen: action.state });\n    case 'SET_RIGHT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { rightSidebarOpen: action.state });\n    case 'SET_USER_PREFERENCES_MODAL_OPEN':\n      return Object.assign({}, state, {\n        userPreferencesModalOpen: action.state,\n      });\n    case 'SET_LABELLING_FLOW_DATA':\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    case 'SET_TOOL_CONTEXT_MENU_DATA':\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import './config';\n\nimport { OidcProvider, reducer as oidcReducer } from 'redux-oidc';\nimport React, { Component } from 'react';\nimport { combineReducers, createStore } from 'redux';\nimport {\n  getDefaultToolbarButtons,\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport ConnectedToolContextMenu from './connectedComponents/ConnectedToolContextMenu';\nimport OHIF from 'ohif-core';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from 'ohif-dicom-html-extension';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from 'ohif-dicom-pdf-extension';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport setupTools from './setupTools';\nimport ui from './redux/ui.js';\n\nconst { ExtensionManager } = OHIF.extensions;\nconst { reducers, localStorage } = OHIF.redux;\n\nreducers.ui = ui;\nreducers.oidc = oidcReducer;\n\nconst combined = combineReducers(reducers);\nconst store = createStore(combined, localStorage.loadState());\n\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nsetupTools(store);\n\nconst children = {\n  viewport: [<ConnectedToolContextMenu />],\n};\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nconst extensions = [\n  new OHIFCornerstoneExtension({ children }),\n  new OHIFVTKExtension(),\n  new OHIFDicomPDFExtension(),\n  new OHIFDicomHtmlExtension(),\n  new OHIFDicomMicroscopyExtension(),\n];\nExtensionManager.registerExtensions(store, extensions);\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    OHIF.utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    //\n    const defaultButtons = getDefaultToolbarButtons(this.props.routerBasename);\n    const buttonsAction = OHIF.redux.actions.setAvailableButtons(\n      defaultButtons\n    );\n\n    store.dispatch(buttonsAction);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <OidcProvider store={store} userManager={userManager}>\n            <Router basename={this.props.routerBasename}>\n              <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n                <OHIFStandaloneViewer userManager={userManager} />\n              </WhiteLabellingContext.Provider>\n            </Router>\n          </OidcProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <Router basename={this.props.routerBasename}>\n          <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n            <OHIFStandaloneViewer />\n          </WhiteLabellingContext.Provider>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n\n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\nUI settings\nPlugins\n    - Custom tools / buttons\n    - Custom Sidebar module thing\n    - Custom Viewports\n    - Custom Sop Class Interpreters\n*/\n\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"leftSidebarOpen\": false,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}