{"version":3,"sources":["config.js","version.js","utils/getUserManagerForOpenIdConnectClient.js","store/layout/reducers.js","store/index.js","appExtensions/GenericViewerCommands/commandsModule.js","appExtensions/GenericViewerCommands/index.js","appExtensions/MeasurementsPanel/jumpToRowItem.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","appExtensions/MeasurementsPanel/ConnectedMeasurementTable.js","appExtensions/MeasurementsPanel/index.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","connectedComponents/ConnectedCineDialog.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","store/layout/selectors.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","components/SidePanel.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","routes/ViewerRouting.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","routes/CallbackPage.js","routes/NotFound.js","components/LoadingBar/Bar.js","components/LoadingBar/Container.js","OHIFStandaloneViewer.js","setupTools.js","initCornerstoneTools.js","App.js","utils/initWebWorkers.js","index.js"],"names":["window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getUserManagerForOpenIdConnectClient","oidcSettings","settings","Object","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","defaultState","labelling","contextMenu","ui","arguments","length","undefined","action","type","assign","labellingFlowData","viewportIndex","toolContextMenuData","reducers","redux","localStorage","layoutReducers","oidcReducer","rootReducer","combineReducers","createStore","loadState","applyMiddleware","thunkMiddleware","subscribe","saveState","preferences","setViewportActive","actions","updateViewportDisplaySet","_ref","direction","updateActiveViewport","_ref2","viewports","viewportSpecificData","activeViewportIndex","maxIndex","keys","newIndex","dispatch","commandsModule","definitions","incrementActiveViewport","commandFn","storeContexts","options","decrementActiveViewport","defaultContext","GenericViewerCommands","id","getCommandsModule","MeasurementApi","measurements","studyMetadataManager","utils","updateTableWithNewMeasurementData","toolType","measurementNumber","location","description","measurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","doneCallback","ToolInstance","cornerstoneTools","getToolForElement","configuration","console","warn","setViewportSpecificData","getMeasurementText","measurementData","text","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","data","timepoint","eachData","displayText","timepointId","push","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","config","toolGroup","childTools","getAllTools","tableMeasurements","map","groupName","name","groupId","toolId","props","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","a","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","date","moment","latestDate","format","ConnectedMeasurementTable","connect","_state$timepointManag","timepointManager","measurementCollection","dispatchRelabel","event","viewportsState","enabledElements","log","error","clientX","clientY","skipAddLabelButton","editLocation","dispatchEditDescription","editDescriptionOnDialog","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","Math","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","key","study","get","studyInstanceUid","Error","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","active","measurementToActive","propsFromState","propsFromDispatch","ownProps","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","MeasurementsPanel","getPanelModule","menuOptions","icon","target","components","component","OHIFLogo","react_default","createElement","rel","className","href","dist_index_es","defaultContextValues","logoComponent","WhiteLabellingContext","React","createContext","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isUserPreferencesOpen","isOpen","loadOptions","_this2","t","title","onClick","setState","hotKeysData","hotkeysManager","hotkeyDefinitions","windowLevelData","_this3","home","studyLink","react_router_dom","to","children","pathname","list","align","onCancel","Component","defaultProps","withTranslation","withRouter","ConnectedHeader","userPreferencesModalOpen","scrollToIndex","toolImport","csTools","import","ConnectedCineDialog","_state$viewports","cine","activeEnabledElement","dom","activeViewportCineData","isPlaying","cineFrameRate","dispatchSetViewportSpecificData","onPlayPauseChanged","cloneDeep","onFrameRateChanged","frameRate","onClickNextButton","stackData","getToolState","_stackData$data$","currentImageIdIndex","imageIds","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","lastIndex","CineDialog","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","ConnectedPluginSwitch","commandsManager","runCommand","_handleToolbarButtonClick","button","evt","commandName","commandOptions","activeButtons","_handleBuiltIn","_getVisibleToolbarButtons","_this4","toolbarModules","extensionManager","modules","MODULE_TYPES","TOOLBAR","toolbarButtonDefinitions","extension","_extension$module","module","definition","context","activeContexts","includes","ToolbarRow","assertThisInitialized","toolbarButtons","isCineDialogOpen","behavior","bind","panelModules","PANEL","buttonGroups","left","value","bottomLabel","right","panelExtension","panelModule","defaultContexts","from","menuOption","contexts","some","actx","menuOptionEntry","prevProps","buttonComponents","index","childButtons","childButton","isActive","cineDialogContainerStyle","display","position","top","zIndex","onPress","side","handleSidePanelChange","onPressLeft","onPressRight","Fragment","style","padding","selectedLeftSidePanel","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","selectedRightSidePanel","connectedComponents_ConnectedCineDialog","getActiveContexts","createSelector","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","plugin","activeViewportExtension","toUpperCase","ConnectedToolbarRow","SimpleDialog","rootClass","ref","componentRef","componentStyle","onClose","headerTitle","onConfirm","bounding","elementRef","currentPosition","current","currentElement","offsetParent","offsetTop","offsetHeight","offsetLeft","offsetWidth","maxHeight","buttonSize","EditDescriptionDialog","componentDidMount","mainElement","onUpdate","handleChange","createRef","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","CSSTransition","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","item","LabellingFlow","componentDidUpdate","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","y","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","currentPoints","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","x","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","_this$props","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","visible","LabellingManager_LabellingManager","ConnectedLabellingOverlay","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","availableViewportModules","viewportModules","VIEWPORT","moduleDefinition","extensionId","availablePlugins","LayoutManager","toolTypes","defaultDropdownItems","actionType","nearbyToolData","removeToolState","_ref3","getDropdownItems","isTouchEvent","coords","nearbyTool","pointNearTool","toolData","toolInterface","getNearbyToolData","canvas","dropdownItems","params","ToolContextMenu","updateElementPosition","_this$mainElement$cur","offBoundPixels","availableTools","dropdownComponents","ConnectedToolContextMenu","extensions","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","v","setViewportData","dSet","getDisplaySets","connectedComponents_ConnectedLayoutManager","connectedComponents_ConnectedToolContextMenu","clearViewportSpecificData","ConnectedViewerMain","SidePanel","fromSideClass","styles","maxWidth","marginRight","Number","parseInt","is-open","Viewer","isLeftSidePanelOpen","isRightSidePanelOpen","retrieveMeasurements","patientId","timepointIds","Promise","resolve","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","currentTimepointId","_mapStudiesToThumbnails","VisiblePanelLeft","VisiblePanelRight","panelExt","comp","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","selectedPanel","sideClicked","slice","openKey","selectedKey","updatedState","prevSelectedPanel","isSameSelectedPanel","src_components_SidePanel","activeIndex","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedLabellingOverlay","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","setTimepoints","setMeasurements","ConnectedViewer","OHIFStudyMetadata","metadata","retrieveStudiesMetadata","updateMetaDataManager","ViewerRetrieveStudyData","seriesInstanceUids","server","purge","updatedStudies","studyMetadata","sopClassHandlerModules","createDisplaySets","setDisplaySets","add","_context","t0","JSON","stringify","connectedComponents_ConnectedViewer","ConnectedViewerRetrieveStudyData","servers","studyUids","_getQueryParameters","queryString","parse","search","getQueryParameters","requestType","studyUID","connectedComponents_ConnectedViewerRetrieveStudyData","split","atob","ViewerRouting","studyUIDs","seriesUIDs","match","_match$params","StudyListWithData","searchData","searchForStudies","currentPage","rowsPerPage","studyDateFrom","defaultStudyDateFrom","studyDateTo","defaultStudyDateTo","sortData","defaultSort","patientName","accessionNumber","studyDescription","modalitiesInStudy","modalities","limit","offset","searchStudies","then","_searchData$sortData","field","order","sortedStudies","isValid","fieldA","fieldB","catch","onImport","onSelectItem","studyInstanceUID","history","onSearch","studyListFunctionsEnabled","pageSize","studyListDateFilterNumDays","subtract","toDate","ConnectedStudyList","StudyListRouting","studylist_ConnectedStudyList","StandaloneRouting","qs","parseQueryAndFetchStudies","src_connectedComponents_Viewer","reject","url","oReq","XMLHttpRequest","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","sessionStorage","getItem","errorCallback","NotFound","Bar","animationDuration","background","transition","boxShadow","opacity","transform","Container","isFinished","pointerEvents","reload","OHIFStandaloneViewer","isLoading","unlisten","listen","setContext","expired","setItem","react_router","exact","path","onEnter","render","routes_CallbackPage","signinRedirect","routes","IHEInvokeImageDisplay","currentPath","noMatchingRoutes","r","matchPath","react_nprogress","isAnimating","LoadingBar_Container","LoadingBar_Bar","unmountOnExit","onEntered","NotFound_NotFound","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","dataset","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","Hammer","cornerstoneMath","init","textStyle","setFont","toolStyle","setToolWidth","toolColors","setToolColor","setActiveColor","touchProximity","initCornerstoneTools","globalToolSyncEnabled","commandsManagerConfig","getAppState","CommandsManager","HotkeysManager","ExtensionManager","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","registerExtensions","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","hotkeys","setHotkeys","App","firstOpenIdClient","addServers","baseDirectory","webWorkScriptsPath","scriptsPath","protocol","host","maxWebWorkers","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","initWebWorkers","routerBasename","relativeWebWorkerScriptsPath","react_redux_es","es","i18n","basename","Provider","src_OHIFStandaloneViewer_0","__webpack_require__","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.365fb11c.chunk.js","sourcesContent":["import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\n//if (process.env.node_env === 'development') {\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n//}\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.21';\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","const defaultState = {\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_LABELLING_FLOW_DATA': {\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    }\n    case 'SET_TOOL_CONTEXT_MENU_DATA': {\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    }\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\n\n// import { createLogger } from 'redux-logger';\nimport layoutReducers from './layout/reducers.js';\nimport { reducer as oidcReducer } from 'redux-oidc';\nimport { redux } from 'ohif-core';\nimport thunkMiddleware from 'redux-thunk';\n\n// Combine our ohif-core, ui, and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage } = redux;\n// const loggerMiddleware = createLogger();\n\nreducers.ui = layoutReducers;\nreducers.oidc = oidcReducer;\n\nconst rootReducer = combineReducers(reducers);\nconst store = createStore(\n  rootReducer,\n  localStorage.loadState(), // preloadedState\n  applyMiddleware(\n    thunkMiddleware // Lets us dispatch() functions\n    // loggerMiddleware // neat middleware that logs actions\n  )\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nexport default store;\n","import { redux } from 'ohif-core';\nimport store from './../../store';\nconst { setViewportActive } = redux.actions;\n\nconst actions = {\n  updateViewportDisplaySet: ({ direction }) => {\n    // TODO\n    // console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: ({ viewports, direction }) => {\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n    const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n    let newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n    store.dispatch(setViewportActive(newIndex));\n  },\n};\n\nconst definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: 1 },\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: -1 },\n  },\n};\n\nexport default {\n  definitions,\n  defaultContext: 'VIEWER',\n};\n","import commandsModule from './commandsModule.js';\n\nexport default {\n  id: 'generic-viewer-commands',\n  getCommandsModule() {\n    return commandsModule;\n  },\n};\n","import { measurements, utils } from 'ohif-core';\n\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  if (\n    !ToolInstance ||\n    !ToolInstance.configuration ||\n    !ToolInstance.configuration.getMeasurementLocationCallback\n  ) {\n    console.warn(\n      'Tool instance configuration is missing: getMeasurementLocationCallback'\n    );\n\n    return;\n  }\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\n\n//\nimport jumpToRowItem from './jumpToRowItem.js';\nimport getMeasurementLocationCallback from './../../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import ConnectedMeasurementTable from './ConnectedMeasurementTable.js';\n\nexport default {\n  id: 'measurements-table',\n  getPanelModule() {\n    return {\n      menuOptions: [\n        {\n          icon: 'list',\n          label: 'Measurements',\n          target: 'measurement-panel',\n        },\n      ],\n      components: [\n        {\n          id: 'measurement-panel',\n          component: ConnectedMeasurementTable,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n};\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","import './Header.css';\nimport './Header.css';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Dropdown } from 'react-viewerbase';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport PropTypes from 'prop-types';\nimport { AboutModal } from 'react-viewerbase';\nimport { hotkeysManager } from './../../App.js';\nimport { withTranslation } from 'react-i18next';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  // onSave: data => {\n  //   const contextName = store.getState().commandContext.context;\n  //   const preferences = cloneDeep(store.getState().preferences);\n  //   preferences[contextName] = data;\n  //   dispatch(setUserPreferences(preferences));\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n  // },\n  // onResetToDefaults: () => {\n  //   dispatch(setUserPreferences());\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys();\n  // },\n\n  constructor(props) {\n    super(props);\n    this.state = { isUserPreferencesOpen: false, isOpen: false };\n\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    const { t } = this.props;\n    this.options = [\n      {\n        title: t('About'),\n        icon: { name: 'info' },\n        onClick: () => {\n          this.setState({\n            isOpen: true,\n          });\n        },\n      },\n    ];\n\n    this.hotKeysData = hotkeysManager.hotkeyDefinitions;\n  }\n\n  onUserPreferencesSave({ windowLevelData, hotKeysData }) {\n    // console.log(windowLevelData);\n    // console.log(hotKeysData);\n    // TODO: Update hotkeysManager\n    // TODO: reset `this.hotKeysData`\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              {t('Back to Viewer')}\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {!this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              {t('Study list')}\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">{t('INVESTIGATIONAL USE ONLY')}</span>\n          <Dropdown title={t('Options')} list={this.options} align=\"right\" />\n          <AboutModal\n            {...this.state}\n            onCancel={() =>\n              this.setState({\n                isOpen: false,\n              })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('Header')(withRouter(Header));\n","import Header from '../components/Header/Header.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst ConnectedHeader = connect(mapStateToProps)(Header);\n\nexport default ConnectedHeader;\n","import { connect } from 'react-redux';\nimport { CineDialog } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport csTools from 'cornerstone-tools';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// Why do I need or care about any of this info?\n// A dispatch action should be able to pull this at the time of an event?\n// `isPlaying` and `cineFrameRate` might matter, but I think we can prop pass for those.\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { cine, dom } = viewportSpecificData[activeViewportIndex] || {};\n\n  const cineData = cine || {\n    isPlaying: false,\n    cineFrameRate: 24,\n  };\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportCineData: cineData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportCineData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  return {\n    cineFrameRate: activeViewportCineData.cineFrameRate,\n    isPlaying: activeViewportCineData.isPlaying,\n    onPlayPauseChanged: isPlaying => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.isPlaying = !cine.isPlaying;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onFrameRateChanged: frameRate => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.cineFrameRate = frameRate;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onClickNextButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex, imageIds } = stackData.data[0];\n      if (currentImageIdIndex >= imageIds.length - 1) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex + 1);\n    },\n    onClickBackButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex } = stackData.data[0];\n      if (currentImageIdIndex === 0) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex - 1);\n    },\n    onClickSkipToStart: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      scrollToIndex(activeEnabledElement, 0);\n    },\n    onClickSkipToEnd: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const lastIndex = stackData.data[0].imageIds.length - 1;\n      scrollToIndex(activeEnabledElement, lastIndex);\n    },\n  };\n};\n\nconst ConnectedCineDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CineDialog);\n\nexport default ConnectedCineDialog;\n","import { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} text={'View'} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import OHIF from 'ohif-core';\nimport PluginSwitch from './PluginSwitch.js';\nimport { commandsManager } from './../App.js';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    viewportSpecificData,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\n/*function setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}*/\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  //const { activeViewportIndex, layout } = propsFromState;\n  //const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    /*{\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('axial');\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('sagittal');\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('coronal');\n      },\n    },*/\n    {\n      label: '2D MPR',\n      icon: 'cube',\n      onClick: () => {\n        commandsManager.runCommand('mpr2d');\n      },\n    },\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\nimport { ExpandableToolMenu, RoundedButtonGroup, ToolbarButton } from 'react-viewerbase';\nimport { commandsManager, extensionManager } from './../App.js';\n\nimport ConnectedCineDialog from './ConnectedCineDialog';\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport { MODULE_TYPES } from 'ohif-core';\nimport PropTypes from 'prop-types';\n\nclass ToolbarRow extends Component {\n  // TODO: Simplify these? isOpen can be computed if we say \"any\" value for selected,\n  // closed if selected is null/undefined\n  static propTypes = {\n    isLeftSidePanelOpen: PropTypes.bool.isRequired,\n    isRightSidePanelOpen: PropTypes.bool.isRequired,\n    selectedLeftSidePanel: PropTypes.string.isRequired,\n    selectedRightSidePanel: PropTypes.string.isRequired,\n    handleSidePanelChange: PropTypes.func,\n    activeContexts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const toolbarButtonDefinitions = _getVisibleToolbarButtons.call(this);\n    // TODO:\n    // If it's a tool that can be active... Mark it as active?\n    // - Tools that are on/off?\n    // - Tools that can be bound to multiple buttons?\n\n    // Normal ToolbarButtons...\n    // Just how high do we need to hoist this state?\n    // Why ToolbarRow instead of just Toolbar? Do we have any others?\n    this.state = {\n      toolbarButtons: toolbarButtonDefinitions,\n      activeButtons: [],\n      isCineDialogOpen: false,\n    };\n\n    this._handleBuiltIn = _handleBuiltIn.bind(this);\n\n    const panelModules = extensionManager.modules[MODULE_TYPES.PANEL];\n    this.buttonGroups = {\n      left: [\n        // TODO: This should come from extensions, instead of being baked in\n        {\n          value: 'studies',\n          icon: 'th-large',\n          bottomLabel: 'Series',\n        },\n      ],\n      right: [],\n    };\n\n    panelModules.forEach(panelExtension => {\n      const panelModule = panelExtension.module;\n      const defaultContexts = Array.from(panelModule.defaultContext);\n\n      // MENU OPTIONS\n      panelModule.menuOptions.forEach(menuOption => {\n        const contexts = Array.from(menuOption.context || defaultContexts);\n\n        const activeContextIncludesAnyPanelContexts = this.props.activeContexts.some(\n          actx => contexts.includes(actx)\n        );\n        if (activeContextIncludesAnyPanelContexts) {\n          const menuOptionEntry = {\n            value: menuOption.target,\n            icon: menuOption.icon,\n            bottomLabel: menuOption.label,\n          };\n          const from = menuOption.from || 'right';\n\n          this.buttonGroups[from].push(menuOptionEntry);\n        }\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const activeContextsChanged =\n      prevProps.activeContexts !== this.props.activeContexts;\n\n    if (activeContextsChanged) {\n      this.setState({\n        toolbarButtons: _getVisibleToolbarButtons.call(this),\n      });\n    }\n  }\n\n  render() {\n    const buttonComponents = _getButtonComponents.call(\n      this,\n      this.state.toolbarButtons,\n      this.state.activeButtons\n    );\n\n    const cineDialogContainerStyle = {\n      display: this.state.isCineDialogOpen ? 'block' : 'none',\n      position: 'absolute',\n      top: '82px',\n      zIndex: 999,\n    };\n\n    const onPress = (side, value) => {\n      this.props.handleSidePanelChange(side, value);\n    };\n    const onPressLeft = onPress.bind(this, 'left');\n    const onPressRight = onPress.bind(this, 'right');\n\n    return (\n      <>\n        <div className=\"ToolbarRow\">\n          <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n            <RoundedButtonGroup\n              options={this.buttonGroups.left}\n              value={this.props.selectedLeftSidePanel || ''}\n              onValueChanged={onPressLeft}\n            />\n          </div>\n          {buttonComponents}\n          <ConnectedLayoutButton />\n          <ConnectedPluginSwitch />\n          <div\n            className=\"pull-right m-t-1 rm-x-1\"\n            style={{ marginLeft: 'auto' }}\n          >\n            {this.buttonGroups.right.length && (\n              <RoundedButtonGroup\n                options={this.buttonGroups.right}\n                value={this.props.selectedRightSidePanel || ''}\n                onValueChanged={onPressRight}\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"CineDialogContainer\" style={cineDialogContainerStyle}>\n          <ConnectedCineDialog />\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Determine which extension buttons should be showing, if they're\n * active, and what their onClick behavior should be.\n */\nfunction _getButtonComponents(toolbarButtons, activeButtons) {\n  return toolbarButtons.map((button, index) => {\n    if (button.buttons && button.buttons.length) {\n      // Iterate over button definitions and update `onClick` behavior\n      const childButtons = button.buttons.map(childButton => {\n        childButton.onClick = _handleToolbarButtonClick.bind(this, childButton);\n        return childButton;\n      });\n\n      return (\n        <ExpandableToolMenu\n          key={button.id}\n          text={button.label}\n          icon={button.icon}\n          buttons={childButtons}\n        />\n      );\n    }\n    return (\n      <ToolbarButton\n        key={button.id}\n        label={button.label}\n        icon={button.icon}\n        onClick={_handleToolbarButtonClick.bind(this, button)}\n        isActive={activeButtons.includes(button.id)}\n      />\n    );\n  });\n}\n\n/**\n * A handy way for us to handle different button types. IE. firing commands for\n * buttons, or initiation built in behavior.\n *\n * @param {*} button\n * @param {*} evt\n * @param {*} props\n */\nfunction _handleToolbarButtonClick(button, evt, props) {\n  if (button.commandName) {\n    const options = Object.assign({ evt }, button.commandOptions);\n    commandsManager.runCommand(button.commandName, options);\n  }\n\n  // TODO: Use Types ENUM\n  // TODO: We can update this to be a `getter` on the extension to query\n  //       For the active tools after we apply our updates?\n  if (button.type === 'setToolActive') {\n    this.setState({\n      activeButtons: [button.id],\n    });\n  } else if (button.type === 'builtIn') {\n    this._handleBuiltIn(button.options);\n  }\n}\n\n/**\n *\n */\nfunction _getVisibleToolbarButtons() {\n  const toolbarModules = extensionManager.modules[MODULE_TYPES.TOOLBAR];\n  const toolbarButtonDefinitions = [];\n\n  toolbarModules.forEach(extension => {\n    const { definitions, defaultContext } = extension.module;\n    definitions.forEach(definition => {\n      const context = definition.context || defaultContext;\n\n      if (this.props.activeContexts.includes(context)) {\n        toolbarButtonDefinitions.push(definition);\n      }\n    });\n  });\n\n  return toolbarButtonDefinitions;\n}\n\nfunction _handleBuiltIn({ behavior } = {}) {\n  if (behavior === 'CINE') {\n    this.setState({\n      isCineDialogOpen: !this.state.isCineDialogOpen,\n    });\n  }\n}\n\nexport default ToolbarRow;\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","// TODO: REPLACE THIS WITH A CONTEXT PROVIDER\n// EVERYTHING IN `VIEWER.JS` COULD USE THIS FOR APPROPRIATE CONTEXT\nimport ToolbarRow from './ToolbarRow';\nimport { connect } from 'react-redux';\nimport { getActiveContexts } from './../store/layout/selectors.js';\n\nconst mapStateToProps = state => {\n  return {\n    activeContexts: getActiveContexts(state),\n  };\n};\n\nconst ConnectedToolbarRow = connect(mapStateToProps)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { LayoutManager } from 'react-viewerbase';\nimport { MODULE_TYPES } from 'ohif-core';\nimport { connect } from 'react-redux';\nimport { extensionManager } from './../App.js';\n\nconst mapStateToProps = state => {\n  const availableViewportModules = {};\n  const viewportModules = extensionManager.modules[MODULE_TYPES.VIEWPORT];\n\n  viewportModules.forEach(moduleDefinition => {\n    availableViewportModules[moduleDefinition.extensionId] =\n      moduleDefinition.module;\n  });\n\n  // TODO: Use something like state.plugins.defaultPlugin[MODULE_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportModules.length) {\n    defaultPlugin = viewportModules[0].extensionId;\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    // TODO: rename `availableViewportModules`\n    availablePlugins: availableViewportModules,\n    // TODO: rename `defaultViewportModule`\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './ViewerMain.css';\n\nimport { Component } from 'react';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport ConnectedToolContextMenu from './ConnectedToolContextMenu.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    activeViewportIndex: PropTypes.number.isRequired,\n    studies: PropTypes.array,\n    viewportSpecificData: PropTypes.object.isRequired,\n    layout: PropTypes.object.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    if (this.props.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n\n      this.setState({\n        displaySets,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n\n      this.setState({\n        displaySets,\n      });\n    }\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        {this.state.displaySets.length && (\n          <ConnectedLayoutManager\n            studies={this.props.studies}\n            viewportData={this.getViewportData()}\n            setViewportData={this.setViewportData}\n          >\n            {/* Children to add to each viewport that support children */}\n            <ConnectedToolContextMenu />\n          </ConnectedLayoutManager>\n        )}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // TODO: These don't have to be viewer specific?\n    // Could qualify for other routes?\n    // hotkeys.destroy();\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import OHIF from 'ohif-core';\nimport ViewerMain from './ViewerMain';\nimport { connect } from 'react-redux';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './SidePanel.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass SidePanel extends Component {\n  static propTypes = {\n    from: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    children: PropTypes.node,\n    width: PropTypes.string,\n  };\n\n  render() {\n    const fromSideClass =\n      this.props.from === 'right' ? 'from-right' : 'from-left';\n\n    const styles = this.props.width\n      ? {\n          maxWidth: this.props.width,\n          marginRight: this.props.isOpen\n            ? '0'\n            : Number.parseInt(this.props.width) * -1,\n        }\n      : {};\n\n    return (\n      <section\n        style={styles}\n        className={classNames('sidepanel', fromSideClass, {\n          'is-open': this.props.isOpen,\n        })}\n      >\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { MODULE_TYPES } from 'ohif-core';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport SidePanel from './../components/SidePanel.js';\nimport { extensionManager } from './../App.js';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n    // window.store.getState().viewports.viewportSpecificData\n    viewports: PropTypes.object.isRequired,\n    // window.store.getState().viewports.activeViewportIndex\n    activeViewportIndex: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  state = {\n    isLeftSidePanelOpen: true,\n    isRightSidePanelOpen: false,\n    selectedRightSidePanel: '',\n    selectedLeftSidePanel: 'studies', // TODO: Don't hardcode this\n    thumbnails: [],\n  };\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    this.currentTimepointId = currentTimepointId;\n    this.timepointApi = timepointApi;\n    this.measurementApi = measurementApi;\n\n    if (studies) {\n      const patientId = studies[0] && studies[0].patientId;\n\n      timepointApi.retrieveTimepoints({ patientId });\n      measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n\n      this.setState({\n        thumbnails: _mapStudiesToThumbnails(studies),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const { studies } = this.props;\n      const patientId = studies[0] && studies[0].patientId;\n      const currentTimepointId = this.currentTimepointId;\n\n      this.timepointApi.retrieveTimepoints({ patientId });\n      this.measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n\n      this.setState({\n        thumbnails: _mapStudiesToThumbnails(studies),\n      });\n    }\n  }\n\n  render() {\n    let VisiblePanelLeft, VisiblePanelRight;\n    const panelExtensions = extensionManager.modules[MODULE_TYPES.PANEL];\n\n    panelExtensions.forEach(panelExt => {\n      panelExt.module.components.forEach(comp => {\n        if (comp.id === this.state.selectedRightSidePanel) {\n          VisiblePanelRight = comp.component;\n        } else if (comp.id === this.state.selectedLeftSidePanel) {\n          VisiblePanelLeft = comp.component;\n        }\n      });\n    });\n\n    return (\n      <>\n        {/* HEADER */}\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n\n        {/* TOOLBAR */}\n        <ConnectedToolbarRow\n          isLeftSidePanelOpen={this.state.isLeftSidePanelOpen}\n          isRightSidePanelOpen={this.state.isRightSidePanelOpen}\n          selectedLeftSidePanel={\n            this.state.isLeftSidePanelOpen\n              ? this.state.selectedLeftSidePanel\n              : ''\n          }\n          selectedRightSidePanel={\n            this.state.isRightSidePanelOpen\n              ? this.state.selectedRightSidePanel\n              : ''\n          }\n          handleSidePanelChange={(side, selectedPanel) => {\n            const sideClicked = side && side[0].toUpperCase() + side.slice(1);\n            const openKey = `is${sideClicked}SidePanelOpen`;\n            const selectedKey = `selected${sideClicked}SidePanel`;\n            const updatedState = Object.assign({}, this.state);\n\n            const isOpen = updatedState[openKey];\n            const prevSelectedPanel = updatedState[selectedKey];\n            // RoundedButtonGroup returns `null` if selected button is clicked\n            const isSameSelectedPanel =\n              prevSelectedPanel === selectedPanel || selectedPanel === null;\n\n            updatedState[selectedKey] = selectedPanel || prevSelectedPanel;\n\n            const isClosedOrShouldClose = !isOpen || isSameSelectedPanel;\n            if (isClosedOrShouldClose) {\n              updatedState[openKey] = !updatedState[openKey];\n            }\n\n            this.setState(updatedState);\n          }}\n        />\n\n        {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n        {/*<StudyPrefetcher studies={this.props.studies} />*/}\n\n        {/* VIEWPORTS + SIDEPANELS */}\n        <div className=\"FlexboxLayout\">\n          {/* LEFT */}\n          <SidePanel from=\"left\" isOpen={this.state.isLeftSidePanelOpen}>\n            {VisiblePanelLeft ? (\n              <VisiblePanelLeft\n                viewports={this.props.viewports}\n                activeIndex={this.props.activeViewportIndex}\n              />\n            ) : (\n              <ConnectedStudyBrowser studies={this.state.thumbnails} />\n            )}\n          </SidePanel>\n\n          {/* MAIN */}\n          <div className={classNames('main-content')}>\n            <ConnectedViewerMain studies={this.props.studies} />\n          </div>\n\n          {/* RIGHT */}\n          <SidePanel from=\"right\" isOpen={this.state.isRightSidePanelOpen}>\n            {VisiblePanelRight && (\n              <VisiblePanelRight\n                viewports={this.props.viewports}\n                activeIndex={this.props.activeViewportIndex}\n              />\n            )}\n          </SidePanel>\n        </div>\n        <ConnectedLabellingOverlay />\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n\n/**\n * What types are these? Why do we have \"mapping\" dropped in here instead of in\n * a mapping layer?\n *\n * TODO[react]:\n * - Add sorting of display sets\n * - Add useMiddleSeriesInstanceAsThumbnail\n * - Add showStackLoadingProgressBar option\n *\n * @param {Study[]} studies\n * @param {DisplaySet[]} studies[].displaySets\n */\nconst _mapStudiesToThumbnails = function(studies) {\n  return studies.map(study => {\n    const { studyInstanceUid } = study;\n\n    const thumbnails = study.displaySets.map(displaySet => {\n      const {\n        displaySetInstanceUid,\n        seriesDescription,\n        seriesNumber,\n        instanceNumber,\n        numImageFrames,\n      } = displaySet;\n\n      let imageId;\n      let altImageText = ' '; // modality\n\n      if (displaySet.images && displaySet.images.length) {\n        imageId = displaySet.images[0].getImageId();\n      } else {\n        altImageText = 'SR';\n      }\n\n      return {\n        imageId,\n        altImageText,\n        displaySetInstanceUid,\n        seriesDescription,\n        seriesNumber,\n        instanceNumber,\n        numImageFrames,\n      };\n    });\n\n    return {\n      studyInstanceUid,\n      thumbnails,\n    };\n  });\n};\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    viewports: state.viewports.viewportSpecificData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport { metadata, studies, utils } from 'ohif-core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  async componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n\n    try {\n      const studies = await retrieveStudiesMetadata(\n        server,\n        studyInstanceUids,\n        seriesInstanceUids\n      );\n\n      // Render the viewer when the data is ready\n      // TODO: CLEAR THIS SOMEWHERE ELSE\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({\n        studies: updatedStudies,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n      });\n\n      // TODO: Handle gracefully instead of throwing?\n      throw new Error(err);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData.js';\n\nfunction decodeStudyUids(studyUids) {\n  const decodedData = window.atob(studyUids);\n\n  return decodedData.split(';');\n}\n\nfunction getQueryParameters(location) {\n  if (location) {\n    return queryString.parse(location.search);\n  }\n\n  return {};\n}\n\nfunction IHEInvokeImageDisplay({ location }) {\n  const {\n    // patientID,\n    requestType,\n    studyUID,\n  } = getQueryParameters(location);\n\n  switch (requestType) {\n    case 'STUDY':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={studyUID.split(';')}\n        />\n      );\n\n    case 'STUDYBASE64':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={decodeStudyUids(studyUID)}\n        />\n      );\n\n    case 'PATIENT':\n      // TODO: connect this to the StudyList when we have the filter parameters set up\n      // return <StudyList patientUids={patientID.split(';')} />;\n      return '';\n\n    default:\n      // TODO: Figure out what to do here, this won't work because StudyList expects studies\n      // return <StudyList />;\n      return '';\n  }\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(IHEInvokeImageDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [match.params.studyInstanceUid];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n\n    this.searchForStudies();\n  }\n\n  searchForStudies = (\n    searchData = {\n      currentPage: 0,\n      rowsPerPage: StudyListWithData.rowsPerPage,\n      studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n      studyDateTo: StudyListWithData.defaultStudyDateTo,\n      sortData: StudyListWithData.defaultSort,\n    }\n  ) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        let sortedStudies = studies.map(study => {\n          if (!moment(study.studyDate, 'MMM DD, YYYY', true).isValid()) {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n          }\n          return study;\n        });\n\n        sortedStudies.sort(function(a, b) {\n          let fieldA = a[field];\n          let fieldB = b[field];\n          if (field === 'studyDate') {\n            fieldA = moment(fieldA).toISOString();\n            fieldB = moment(fieldB).toISOString();\n          }\n          if (order === 'desc') {\n            if (fieldA < fieldB) {\n              return -1;\n            }\n            if (fieldA > fieldB) {\n              return 1;\n            }\n            return 0;\n          } else {\n            if (fieldA > fieldB) {\n              return -1;\n            }\n            if (fieldA < fieldB) {\n              return 1;\n            }\n            return 0;\n          }\n        });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        <StudyList\n          studies={this.state.studies}\n          studyListFunctionsEnabled={false}\n          onImport={this.onImport}\n          onSelectItem={this.onSelectItem}\n          pageSize={this.rowsPerPage}\n          defaultSort={StudyListWithData.defaultSort}\n          studyListDateFilterNumDays={\n            StudyListWithData.studyListDateFilterNumDays\n          }\n          onSearch={this.onSearch}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(StudyListWithData);\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction StudyListRouting({ match }) {\n  // TODO: Figure out which filters we want to pass in via a URL\n  //const { patientId } = match.params;\n\n  return <ConnectedStudyList />;\n}\n\nStudyListRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      patientIds: PropTypes.string,\n    }),\n  }),\n};\n\nexport default StudyListRouting;\n","import React, { Component } from 'react';\nimport { log, metadata, studies, utils } from 'ohif-core';\n\nimport PropTypes from 'prop-types';\nimport Viewer from '../connectedComponents/Viewer';\nimport { extensionManager } from './../App.js';\nimport qs from 'querystring';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          retrieveStudiesMetadata(\n            server,\n            studyInstanceUids,\n            seriesInstanceUids\n          ).then(\n            studies => {\n              resolve(studies);\n            },\n            error => {\n              reject(error);\n            }\n          );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const query = qs.parse(this.props.location.search);\n      const studies = await StandaloneRouting.parseQueryAndFetchStudies(query);\n\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({ studies: updatedStudies });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <div className={'not-found'}>\n      <div>\n        <h4>Sorry, this page does not exist.</h4>\n        <h5>\n          <Link to={'/'}>Go back to the Study List</Link>\n        </h5>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031,\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100,\n      }}\n    />\n  </div>\n);\n\nexport default Bar;\n","import React from 'react';\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, matchPath } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { NProgress } from '@tanem/react-nprogress';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './routes/CallbackPage.js';\nimport NotFound from './routes/NotFound.js';\nimport { Bar, Container } from './components/LoadingBar/';\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  state = {\n    isLoading: false,\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    /**\n     * Note: this approach for routing is caused by the conflict between\n     * react-transition-group and react-router's <Switch> component.\n     *\n     * See http://reactcommunity.org/react-transition-group/with-react-router/\n     */\n    const routes = [\n      {\n        path: '/',\n        Component: StudyListRouting,\n      },\n      {\n        path: '/studylist',\n        Component: StudyListRouting,\n      },\n      {\n        path: '/viewer',\n        Component: StandaloneRouting,\n      },\n      {\n        path: '/viewer/:studyInstanceUids',\n        Component: ViewerRouting,\n      },\n      {\n        path: '/study/:studyInstanceUid/series/:seriesInstanceUids',\n        Component: ViewerRouting,\n      },\n      {\n        path: '/IHEInvokeImageDisplay',\n        Component: IHEInvokeImageDisplay,\n      },\n    ];\n\n    const currentPath = this.props.location.pathname;\n    const noMatchingRoutes = !routes.find(r =>\n      matchPath(currentPath, {\n        path: r.path,\n        exact: true,\n      })\n    );\n\n    return (\n      <>\n        <NProgress isAnimating={this.state.isLoading}>\n          {({ isFinished, progress, animationDuration }) => (\n            <Container\n              isFinished={isFinished}\n              animationDuration={animationDuration}\n            >\n              <Bar progress={progress} animationDuration={animationDuration} />\n            </Container>\n          )}\n        </NProgress>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        {!noMatchingRoutes &&\n          routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                  in={match !== null}\n                  timeout={300}\n                  classNames=\"fade\"\n                  unmountOnExit\n                  onEnter={() => {\n                    this.setState({ isLoading: true });\n                  }}\n                  onEntered={() => {\n                    this.setState({ isLoading: false });\n                  }}\n                >\n                  {match === null ? <></> : <Component match={match} />}\n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        {noMatchingRoutes && <NotFound />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    { name: 'Magnify', mouseButtonMasks: [1] },\n    { name: 'WwwcRegion', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'DragProbe', mouseButtonMasks: [1] },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","import Hammer from 'hammerjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneMath from 'cornerstone-math';\nimport cornerstoneTools from 'cornerstone-tools';\n\nexport default function(configuration = {}) {\n  // For debugging\n  window.cornerstoneTools = cornerstoneTools;\n\n  cornerstoneTools.external.cornerstone = cornerstone;\n  cornerstoneTools.external.Hammer = Hammer;\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\n  cornerstoneTools.init(configuration);\n\n  // Set the tool font and font size\n  // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\n  const fontFamily =\n    'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\n\n  // Tool styles/colors\n  cornerstoneTools.toolStyle.setToolWidth(2);\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\n\n  cornerstoneTools.store.state.touchProximity = 40;\n}\n","import './config';\n// Imported flat feature since is not transpiled for old browser versions\nimport 'core-js/features/array/flat';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  utils,\n} from 'ohif-core';\nimport React, { Component } from 'react';\nimport {\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport { I18nextProvider } from 'react-i18next';\nimport initCornerstoneTools from './initCornerstoneTools.js';\n\n// ~~ EXTENSIONS\nimport { GenericViewerCommands, MeasurementsPanel } from './appExtensions';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\n// ~~ EXTENSIONS\nimport { OidcProvider } from 'redux-oidc';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport i18n from '@ohif/i18n';\nimport setupTools from './setupTools.js';\nimport store from './store';\n\n// ~~~~ APP SETUP\ninitCornerstoneTools({\n  globalToolSyncEnabled: true,\n});\n\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst hotkeysManager = new HotkeysManager(commandsManager);\nconst extensionManager = new ExtensionManager({ commandsManager });\n\n// CornerstoneTools and labeling/measurements?\nsetupTools(store);\n// ~~~~ END APP SETUP\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nextensionManager.registerExtensions([\n  // Core\n  GenericViewerCommands,\n  MeasurementsPanel,\n  //\n  OHIFCornerstoneExtension,\n  OHIFVTKExtension,\n  OHIFDicomPDFExtension,\n  OHIFDicomHtmlExtension,\n  OHIFDicomMicroscopyExtension,\n]);\n\n// Must run after extension commands are registered\nif (window.config.hotkeys) {\n  hotkeysManager.setHotkeys(window.config.hotkeys, true);\n}\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <I18nextProvider i18n={i18n}>\n            <OidcProvider store={store} userManager={userManager}>\n              <Router basename={this.props.routerBasename}>\n                <WhiteLabellingContext.Provider\n                  value={this.props.whiteLabelling}\n                >\n                  <OHIFStandaloneViewer userManager={userManager} />\n                </WhiteLabellingContext.Provider>\n              </Router>\n            </OidcProvider>\n          </I18nextProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n          <Router basename={this.props.routerBasename}>\n            <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n              <OHIFStandaloneViewer />\n            </WhiteLabellingContext.Provider>\n          </Router>\n        </I18nextProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// Make our managers accessible\nexport { commandsManager, extensionManager, hotkeysManager };\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n  \n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}