{"version":3,"sources":["../node_modules/@ohif/i18n/dist/locales sync //.json$","config.js","version.js","utils/getUserManagerForOpenIdConnectClient.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","lib/jumpToRowItem.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","connectedComponents/ConnectedMeasurementTable.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","connectedComponents/FlexboxLayout.js","connectedComponents/ConnectedFlexboxLayout.js","store/layout/actions.js","connectedComponents/ConnectedCineDialog.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","store/layout/selectors.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","routes/ViewerRouting.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","CallbackPage.js","OHIFStandaloneViewer.js","store/layout/reducers.js","store/index.js","appCommands/viewer.js","appCommands/index.js","setupTools.js","App.js","utils/initWebWorkers.js","index.js"],"names":["map","./en/Buttons.json","./en/CineDialog.json","./en/Common.json","./en/Header.json","./en/MeasurementTable.json","./en/UK/Header.json","./en/US/Header.json","./en/UserPreferencesModal.json","./es/AR/Header.json","./es/Buttons.json","./es/CineDialog.json","./es/Common.json","./es/Header.json","./es/MX/Header.json","./es/MeasurementTable.json","./es/UserPreferencesModal.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getUserManagerForOpenIdConnectClient","oidcSettings","settings","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","OHIFLogo","react_default","a","createElement","target","rel","className","href","react_viewerbase_dist_index_es","name","defaultContextValues","logoComponent","WhiteLabellingContext","React","createContext","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isUserPreferencesOpen","loadOptions","t","options","title","icon","link","hotKeysData","hotkeysManager","hotkeyDefinitions","isOpen","setState","_ref","windowLevelData","home","location","studyLink","react_router_dom","to","children","pathname","list","align","Component","defaultProps","withTranslation","withRouter","ConnectedHeader","connect","ui","userPreferencesModalOpen","MeasurementApi","measurements","studyMetadataManager","utils","updateTableWithNewMeasurementData","toolType","measurementNumber","description","measurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","doneCallback","cornerstoneTools","getToolForElement","configuration","setViewportSpecificData","redux","actions","getMeasurementText","measurementData","text","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","data","timepoint","eachData","displayText","timepointId","push","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","config","toolGroup","childTools","getAllTools","tableMeasurements","groupName","groupId","toolId","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","length","date","moment","latestDate","format","ConnectedMeasurementTable","_state$timepointManag","timepointManager","measurementCollection","viewports","dispatch","dispatchRelabel","event","viewportsState","activeViewportIndex","enabledElements","log","error","clientX","clientY","assign","skipAddLabelButton","editLocation","dispatchEditDescription","editDescriptionOnDialog","dispatchJumpToRowItem","timepointManagerState","arguments","undefined","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","Math","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","key","viewportSpecificData","viewportIndex","study","get","studyInstanceUid","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","active","measurementToActive","propsFromState","propsFromDispatch","ownProps","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","cloneDeep","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","availableViewportModules","viewportModules","extensionManager","modules","MODULE_TYPES","VIEWPORT","moduleDefinition","extensionId","availablePlugins","LayoutManager","toolTypes","defaultDropdownItems","actionType","action","nearbyToolData","removeToolState","_ref2","_ref3","getDropdownItems","isTouchEvent","coords","nearbyTool","pointNearTool","toolData","getToolState","index","toolInterface","getNearbyToolData","currentPoints","canvas","dropdownItems","item","params","ToolContextMenu","componentDidMount","mainElement","current","updateElementPosition","componentDidUpdate","_this$mainElement$cur","offsetParent","offsetTop","offsetHeight","offsetWidth","offsetLeft","offBoundPixels","top","y","style","left","x","createRef","_this2","_this$props","availableTools","dropdownComponents","onClick","onClose","position","ref","visible","ConnectedToolContextMenu","contextMenu","toolContextMenuData","extensions","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","some","v","setViewportData","dSet","plugin","getDisplaySets","connectedComponents_ConnectedLayoutManager","connectedComponents_ConnectedToolContextMenu","clearViewportSpecificData","ConnectedViewerMain","_state$viewports","FlexboxLayout","studiesForBrowser","getStudiesForBrowser","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","mainContentClassName","leftSidebarOpen","rightSidebarOpen","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedMeasurementTable","ConnectedFlexboxLayout","setLeftSidebarOpen","type","setRightSidebarOpen","scrollToIndex","toolImport","csTools","import","ConnectedCineDialog","cine","activeEnabledElement","dom","activeViewportCineData","isPlaying","cineFrameRate","dispatchSetViewportSpecificData","onPlayPauseChanged","onFrameRateChanged","frameRate","onClickNextButton","stackData","_stackData$data$","currentImageIdIndex","imageIds","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","lastIndex","CineDialog","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","ConnectedPluginSwitch","commandsManager","runCommand","ToolbarRow","onLeftSidebarValueChanged","value","onRightSidebarValueChanged","toolbarButtonDefinitions","_getVisibleToolbarButtons","assertThisInitialized","toolbarButtons","activeButtons","isCineDialogOpen","_handleBuiltIn","behavior","bind","prevProps","activeContexts","leftSidebarToggle","bottomLabel","rightSidebarToggle","leftSidebarValue","rightSidebarValue","buttonComponents","button","evt","commandName","commandOptions","isActive","includes","cineDialogContainerStyle","display","zIndex","Fragment","padding","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","connectedComponents_ConnectedCineDialog","_this3","toolbarModules","TOOLBAR","extension","_extension$module","definitions","defaultContext","definition","context","getActiveContexts","createSelector","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","activeViewportExtension","toUpperCase","ConnectedToolbarRow","SimpleDialog","rootClass","componentRef","componentStyle","headerTitle","onConfirm","bounding","elementRef","currentPosition","currentElement","maxHeight","buttonSize","EditDescriptionDialog","onCancel","onUpdate","handleChange","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","react_transition_group","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","LabellingFlow","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","LabellingManager_LabellingManager","ConnectedLabellingOverlay","labelling","labellingFlowData","Viewer","retrieveMeasurements","patientId","timepointIds","Promise","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","connectedComponents_ConnectedFlexboxLayout","connectedComponents_ConnectedLabellingOverlay","setTimepoints","setMeasurements","ConnectedViewer","OHIFStudyMetadata","metadata","retrieveStudiesMetadata","updateMetaDataManager","ViewerRetrieveStudyData","seriesInstanceUids","server","purge","updatedStudies","studyMetadata","sopClassHandlerModules","createDisplaySets","setDisplaySets","add","_context","t0","JSON","stringify","connectedComponents_ConnectedViewer","ConnectedViewerRetrieveStudyData","servers","studyUids","_getQueryParameters","queryString","parse","search","getQueryParameters","requestType","studyUID","connectedComponents_ConnectedViewerRetrieveStudyData","split","atob","ViewerRouting","studyUIDs","seriesUIDs","match","_match$params","StudyListWithData","searchData","searchForStudies","currentPage","rowsPerPage","studyDateFrom","defaultStudyDateFrom","studyDateTo","defaultStudyDateTo","sortData","defaultSort","patientName","accessionNumber","studyDescription","modalitiesInStudy","modalities","limit","offset","searchStudies","then","_searchData$sortData","field","order","sortedStudies","isValid","fieldA","fieldB","catch","onImport","onSelectItem","studyInstanceUID","history","onSearch","studyListFunctionsEnabled","pageSize","studyListDateFilterNumDays","subtract","toDate","ConnectedStudyList","StudyListRouting","studylist_ConnectedStudyList","StandaloneRouting","qs","parseQueryAndFetchStudies","src_connectedComponents_Viewer","reject","url","oReq","XMLHttpRequest","warn","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","sessionStorage","getItem","errorCallback","reload","OHIFStandaloneViewer","unlisten","listen","setContext","expired","setItem","react_router","exact","path","onEnter","render","src_CallbackPage","component","signinRedirect","IHEInvokeImageDisplay","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","defaultState","reducers","localStorage","layoutReducers","oidcReducer","rootReducer","combineReducers","createStore","loadState","applyMiddleware","thunkMiddleware","subscribe","saveState","preferences","setViewportActive","updateViewportDisplaySet","direction","console","updateActiveViewport","maxIndex","newIndex","incrementActiveViewport","commandFn","storeContexts","decrementActiveViewport","CONTEXTS","viewer","appCommands","init","commandContext","viewerCommandDefinitions","commandDefinition","registerCommand","_registerViewerCommands","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","parseInt","dataset","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","commandsManagerConfig","getAppState","CommandsManager","HotkeysManager","ExtensionManager","hotkeys","setHotkeys","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","registerExtensions","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","App","firstOpenIdClient","addServers","baseDirectory","webWorkScriptsPath","scriptsPath","protocol","host","maxWebWorkers","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","initWebWorkers","routerBasename","relativeWebWorkerScriptsPath","react_redux_es","es","i18n","basename","Provider","src_OHIFStandaloneViewer_0","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.429ee85c.chunk.js","sourcesContent":["var map = {\n\t\"./en/Buttons.json\": 176,\n\t\"./en/CineDialog.json\": 177,\n\t\"./en/Common.json\": 178,\n\t\"./en/Header.json\": 179,\n\t\"./en/MeasurementTable.json\": 180,\n\t\"./en/UK/Header.json\": 181,\n\t\"./en/US/Header.json\": 182,\n\t\"./en/UserPreferencesModal.json\": 183,\n\t\"./es/AR/Header.json\": 184,\n\t\"./es/Buttons.json\": 185,\n\t\"./es/CineDialog.json\": 186,\n\t\"./es/Common.json\": 187,\n\t\"./es/Header.json\": 188,\n\t\"./es/MX/Header.json\": 189,\n\t\"./es/MeasurementTable.json\": 190,\n\t\"./es/UserPreferencesModal.json\": 191\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 175;","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\n//if (process.env.node_env === 'development') {\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n//}\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.21';\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","import './Header.css';\nimport './Header.css';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Dropdown } from 'react-viewerbase';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport PropTypes from 'prop-types';\n// import { UserPreferencesModal } from 'react-viewerbase';\nimport { hotkeysManager } from './../../App.js';\nimport { withTranslation } from 'react-i18next';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  // onSave: data => {\n  //   const contextName = store.getState().commandContext.context;\n  //   const preferences = cloneDeep(store.getState().preferences);\n  //   preferences[contextName] = data;\n  //   dispatch(setUserPreferences(preferences));\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n  // },\n  // onResetToDefaults: () => {\n  //   dispatch(setUserPreferences());\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys();\n  // },\n\n  constructor(props) {\n    super(props);\n    this.state = { isUserPreferencesOpen: false };\n\n    // const onClick = this.toggleUserPreferences.bind(this);\n\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    const { t } = this.props;\n    this.options = [\n      // {\n      //   title: t('Preferences'),\n      //   icon: { name: 'user' },\n      //   onClick: onClick,\n      // },\n      {\n        title: t('About'),\n        icon: {\n          name: 'info',\n        },\n        link: 'http://ohif.org',\n      },\n    ];\n\n    this.hotKeysData = hotkeysManager.hotkeyDefinitions;\n  }\n\n  toggleUserPreferences() {\n    const isOpen = this.state.isUserPreferencesOpen;\n\n    this.setState({\n      isUserPreferencesOpen: !isOpen,\n    });\n  }\n\n  onUserPreferencesSave({ windowLevelData, hotKeysData }) {\n    // console.log(windowLevelData);\n    // console.log(hotKeysData);\n    // TODO: Update hotkeysManager\n    // TODO: reset `this.hotKeysData`\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              {t('Back to Viewer')}\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {!this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              {t('Study list')}\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">{t('INVESTIGATIONAL USE ONLY')}</span>\n          <Dropdown title={t('Options')} list={this.options} align=\"right\" />\n          {/* <ConnectedUserPreferencesModal /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('Header')(withRouter(Header));\n","import Header from '../components/Header/Header.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst ConnectedHeader = connect(mapStateToProps)(Header);\n\nexport default ConnectedHeader;\n","import { measurements, utils } from 'ohif-core';\n\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\nimport jumpToRowItem from '../lib/jumpToRowItem.js';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { LayoutManager } from 'react-viewerbase';\nimport { MODULE_TYPES } from 'ohif-core';\nimport { connect } from 'react-redux';\nimport { extensionManager } from './../App.js';\n\nconst mapStateToProps = state => {\n  const availableViewportModules = {};\n  const viewportModules = extensionManager.modules[MODULE_TYPES.VIEWPORT];\n\n  viewportModules.forEach(moduleDefinition => {\n    availableViewportModules[moduleDefinition.extensionId] =\n      moduleDefinition.module;\n  });\n\n  // TODO: Use something like state.plugins.defaultPlugin[MODULE_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportModules.length) {\n    defaultPlugin = viewportModules[0].extensionId;\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    // TODO: rename `availableViewportModules`\n    availablePlugins: availableViewportModules,\n    // TODO: rename `defaultViewportModule`\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './ViewerMain.css';\n\nimport { Component } from 'react';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport ConnectedToolContextMenu from './ConnectedToolContextMenu.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    activeViewportIndex: PropTypes.number.isRequired,\n    studies: PropTypes.array.isRequired,\n    viewportSpecificData: PropTypes.object.isRequired,\n    layout: PropTypes.object.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    const displaySets = this.getDisplaySets(this.props.studies);\n\n    this.setState({\n      displaySets,\n    });\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        <ConnectedLayoutManager\n          studies={this.props.studies}\n          viewportData={this.getViewportData()}\n          setViewportData={this.setViewportData}\n        >\n          {/* Children to add to each viewport that support children */}\n          <ConnectedToolContextMenu />\n        </ConnectedLayoutManager>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // TODO: These don't have to be viewer specific?\n    // Could qualify for other routes?\n    // hotkeys.destroy();\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import OHIF from 'ohif-core';\nimport ViewerMain from './ViewerMain';\nimport { connect } from 'react-redux';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './FlexboxLayout.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport PropTypes from 'prop-types';\n\nclass FlexboxLayout extends Component {\n  static propTypes = {\n    studies: PropTypes.array.isRequired,\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    studiesForBrowser: [],\n  };\n\n  componentDidMount() {\n    const studiesForBrowser = this.getStudiesForBrowser();\n\n    this.setState({\n      studiesForBrowser,\n    });\n  }\n\n  getStudiesForBrowser = () => {\n    const { studies } = this.props;\n\n    // TODO[react]:\n    // - Add sorting of display sets\n    // - Add useMiddleSeriesInstanceAsThumbnail\n    // - Add showStackLoadingProgressBar option\n    return studies.map(study => {\n      const { studyInstanceUid } = study;\n\n      const thumbnails = study.displaySets.map(displaySet => {\n        const {\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n          // TODO: This is undefined\n          // modality,\n        } = displaySet;\n\n        let imageId;\n        let altImageText = ' '; // modality\n\n        if (displaySet.images && displaySet.images.length) {\n          imageId = displaySet.images[0].getImageId();\n        } else {\n          altImageText = 'SR';\n        }\n\n        return {\n          imageId,\n          altImageText,\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n        };\n      });\n\n      return {\n        studyInstanceUid,\n        thumbnails,\n      };\n    });\n  };\n\n  render() {\n    let mainContentClassName = 'main-content';\n    if (this.props.leftSidebarOpen) {\n      mainContentClassName += ' sidebar-left-open';\n    }\n\n    if (this.props.rightSidebarOpen) {\n      mainContentClassName += ' sidebar-right-open';\n    }\n\n    // TODO[react]: Make ConnectedMeasurementTable extension with state.timepointManager\n    return (\n      <div className=\"FlexboxLayout\">\n        <div\n          className={\n            this.props.leftSidebarOpen\n              ? 'sidebar-menu sidebar-left sidebar-open'\n              : 'sidebar-menu sidebar-left'\n          }\n        >\n          <ConnectedStudyBrowser studies={this.state.studiesForBrowser} />\n        </div>\n        <div className={mainContentClassName}>\n          <ConnectedViewerMain studies={this.props.studies} />\n        </div>\n        <div\n          className={\n            this.props.rightSidebarOpen\n              ? 'sidebar-menu sidebar-right sidebar-open'\n              : 'sidebar-menu sidebar-right'\n          }\n        >\n          <ConnectedMeasurementTable />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlexboxLayout;\n","import { connect } from 'react-redux';\nimport FlexboxLayout from './FlexboxLayout';\n\nconst mapStateToProps = state => {\n  return {\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst ConnectedFlexboxLayout = connect(\n  mapStateToProps,\n  null\n)(FlexboxLayout);\n\nexport default ConnectedFlexboxLayout;\n","export const setLeftSidebarOpen = state => ({\n  type: 'SET_LEFT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setRightSidebarOpen = state => ({\n  type: 'SET_RIGHT_SIDEBAR_OPEN',\n  state,\n});\n\nconst actions = {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n};\n\nexport default actions;\n","import { connect } from 'react-redux';\nimport { CineDialog } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport csTools from 'cornerstone-tools';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// Why do I need or care about any of this info?\n// A dispatch action should be able to pull this at the time of an event?\n// `isPlaying` and `cineFrameRate` might matter, but I think we can prop pass for those.\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { cine, dom } = viewportSpecificData[activeViewportIndex] || {};\n\n  const cineData = cine || {\n    isPlaying: false,\n    cineFrameRate: 24,\n  };\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportCineData: cineData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportCineData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  return {\n    cineFrameRate: activeViewportCineData.cineFrameRate,\n    isPlaying: activeViewportCineData.isPlaying,\n    onPlayPauseChanged: isPlaying => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.isPlaying = !cine.isPlaying;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onFrameRateChanged: frameRate => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.cineFrameRate = frameRate;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onClickNextButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex, imageIds } = stackData.data[0];\n      if (currentImageIdIndex >= imageIds.length - 1) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex + 1);\n    },\n    onClickBackButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex } = stackData.data[0];\n      if (currentImageIdIndex === 0) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex - 1);\n    },\n    onClickSkipToStart: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      scrollToIndex(activeEnabledElement, 0);\n    },\n    onClickSkipToEnd: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const lastIndex = stackData.data[0].imageIds.length - 1;\n      scrollToIndex(activeEnabledElement, lastIndex);\n    },\n  };\n};\n\nconst ConnectedCineDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CineDialog);\n\nexport default ConnectedCineDialog;\n","import { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import OHIF from 'ohif-core';\nimport PluginSwitch from './PluginSwitch.js';\nimport { commandsManager } from './../App.js';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    viewportSpecificData,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\n/*function setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}*/\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  //const { activeViewportIndex, layout } = propsFromState;\n  //const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    /*{\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('axial');\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('sagittal');\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('coronal');\n      },\n    },*/\n    {\n      label: '2D MPR',\n      icon: 'cube',\n      onClick: () => {\n        commandsManager.runCommand('mpr2d');\n      },\n    },\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\nimport { RoundedButtonGroup, ToolbarButton } from 'react-viewerbase';\nimport { commandsManager, extensionManager } from './../App.js';\n\nimport ConnectedCineDialog from './ConnectedCineDialog';\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport { MODULE_TYPES } from 'ohif-core';\nimport PropTypes from 'prop-types';\n\nclass ToolbarRow extends Component {\n  static propTypes = {\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n    setLeftSidebarOpen: PropTypes.func,\n    setRightSidebarOpen: PropTypes.func,\n    activeContexts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  };\n\n  static defaultProps = {\n    leftSidebarOpen: false,\n    rightSidebarOpen: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const toolbarButtonDefinitions = _getVisibleToolbarButtons.call(this);\n    // TODO:\n    // If it's a tool that can be active... Mark it as active?\n    // - Tools that are on/off?\n    // - Tools that can be bound to multiple buttons?\n\n    // Normal ToolbarButtons...\n    // Just how high do we need to hoist this state?\n    // Why ToolbarRow instead of just Toolbar? Do we have any others?\n    this.state = {\n      toolbarButtons: toolbarButtonDefinitions,\n      activeButtons: [],\n      isCineDialogOpen: false,\n    };\n\n    this._handleBuiltIn = _handleBuiltIn.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const activeContextsChanged =\n      prevProps.activeContexts !== this.props.activeContexts;\n\n    if (activeContextsChanged) {\n      this.setState({\n        toolbarButtons: _getVisibleToolbarButtons.call(this),\n      });\n    }\n  }\n\n  onLeftSidebarValueChanged = value => {\n    this.props.setLeftSidebarOpen(!!value);\n  };\n\n  onRightSidebarValueChanged = value => {\n    this.props.setRightSidebarOpen(!!value);\n  };\n\n  render() {\n    const leftSidebarToggle = [\n      {\n        value: 'studies',\n        icon: 'th-large',\n        bottomLabel: 'Series',\n      },\n    ];\n\n    const rightSidebarToggle = [\n      {\n        value: 'measurements',\n        icon: 'list',\n        bottomLabel: 'Measurements',\n      },\n    ];\n\n    const leftSidebarValue = this.props.leftSidebarOpen\n      ? leftSidebarToggle[0].value\n      : null;\n\n    const rightSidebarValue = this.props.rightSidebarOpen\n      ? rightSidebarToggle[0].value\n      : null;\n\n    const buttonComponents = _getButtonComponents.call(\n      this,\n      this.state.toolbarButtons,\n      this.state.activeButtons\n    );\n\n    const cineDialogContainerStyle = {\n      display: this.state.isCineDialogOpen ? 'block' : 'none',\n      position: 'absolute',\n      top: '82px',\n      zIndex: 999,\n    };\n\n    return (\n      <>\n        <div className=\"ToolbarRow\">\n          <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n            <RoundedButtonGroup\n              options={leftSidebarToggle}\n              value={leftSidebarValue}\n              onValueChanged={this.onLeftSidebarValueChanged}\n            />\n          </div>\n          {buttonComponents}\n          <ConnectedLayoutButton />\n          <ConnectedPluginSwitch />\n          <div\n            className=\"pull-right m-t-1 rm-x-1\"\n            style={{ marginLeft: 'auto' }}\n          >\n            <RoundedButtonGroup\n              options={rightSidebarToggle}\n              value={rightSidebarValue}\n              onValueChanged={this.onRightSidebarValueChanged}\n            />\n          </div>\n        </div>\n        <div className=\"CineDialogContainer\" style={cineDialogContainerStyle}>\n          <ConnectedCineDialog />\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Determine which extension buttons should be showing, if they're\n * active, and what their onClick behavior should be.\n */\nfunction _getButtonComponents(toolbarButtons, activeButtons) {\n  return toolbarButtons.map((button, index) => {\n    // TODO: If `button.buttons`, use `ExpandedToolMenu`\n    // I don't believe any extensions currently leverage this\n    return (\n      <ToolbarButton\n        key={button.id}\n        label={button.label}\n        icon={button.icon}\n        onClick={(evt, props) => {\n          if (button.commandName) {\n            const options = Object.assign({ evt }, button.commandOptions);\n            commandsManager.runCommand(button.commandName, options);\n          }\n\n          // TODO: Use Types ENUM\n          // TODO: We can update this to be a `getter` on the extension to query\n          //       For the active tools after we apply our updates?\n          if (button.type === 'setToolActive') {\n            this.setState({\n              activeButtons: [button.id],\n            });\n          } else if (button.type === 'builtIn') {\n            this._handleBuiltIn(button.options);\n          }\n        }}\n        isActive={activeButtons.includes(button.id)}\n      />\n    );\n  });\n}\n\nfunction _getVisibleToolbarButtons() {\n  const toolbarModules = extensionManager.modules[MODULE_TYPES.TOOLBAR];\n  const toolbarButtonDefinitions = [];\n\n  toolbarModules.forEach(extension => {\n    const { definitions, defaultContext } = extension.module;\n    definitions.forEach(definition => {\n      const context = definition.context || defaultContext;\n\n      if (this.props.activeContexts.includes(context)) {\n        toolbarButtonDefinitions.push(definition);\n      }\n    });\n  });\n\n  return toolbarButtonDefinitions;\n}\n\nfunction _handleBuiltIn({ behavior } = {}) {\n  if (behavior === 'CINE') {\n    this.setState({\n      isCineDialogOpen: !this.state.isCineDialogOpen,\n    });\n  }\n}\n\nexport default ToolbarRow;\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","import {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n} from './../store/layout/actions.js';\n\nimport ToolbarRow from './ToolbarRow';\nimport { connect } from 'react-redux';\nimport { getActiveContexts } from './../store/layout/selectors.js';\n\nconst mapStateToProps = state => {\n  return {\n    activeContexts: getActiveContexts(state),\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLeftSidebarOpen: state => {\n      dispatch(setLeftSidebarOpen(state));\n    },\n    setRightSidebarOpen: state => {\n      dispatch(setRightSidebarOpen(state));\n    },\n  };\n};\n\nconst ConnectedToolbarRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import OHIF from 'ohif-core';\n//import { CineDialog } from 'react-viewerbase';\n\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedFlexboxLayout from './ConnectedFlexboxLayout.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    const patientId = studies[0] && studies[0].patientId;\n    timepointApi.retrieveTimepoints({ patientId });\n    measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n  }\n\n  render() {\n    return (\n      <>\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n        <div id=\"viewer\" className=\"Viewer\">\n          <ConnectedToolbarRow />\n          {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n          {/*<StudyPrefetcher studies={this.props.studies} />*/}\n          <ConnectedFlexboxLayout studies={this.props.studies} />\n          <ConnectedLabellingOverlay />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  null,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport { metadata, studies, utils } from 'ohif-core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  async componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n\n    try {\n      const studies = await retrieveStudiesMetadata(\n        server,\n        studyInstanceUids,\n        seriesInstanceUids\n      );\n\n      // Render the viewer when the data is ready\n      // TODO: CLEAR THIS SOMEWHERE ELSE\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({\n        studies: updatedStudies,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n      });\n\n      // TODO: Handle gracefully instead of throwing?\n      throw new Error(err);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData.js';\n\nfunction decodeStudyUids(studyUids) {\n  const decodedData = window.atob(studyUids);\n\n  return decodedData.split(';');\n}\n\nfunction getQueryParameters(location) {\n  if (location) {\n    return queryString.parse(location.search);\n  }\n\n  return {};\n}\n\nfunction IHEInvokeImageDisplay({ location }) {\n  const {\n    // patientID,\n    requestType,\n    studyUID,\n  } = getQueryParameters(location);\n\n  switch (requestType) {\n    case 'STUDY':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={studyUID.split(';')}\n        />\n      );\n\n    case 'STUDYBASE64':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={decodeStudyUids(studyUID)}\n        />\n      );\n\n    case 'PATIENT':\n      // TODO: connect this to the StudyList when we have the filter parameters set up\n      // return <StudyList patientUids={patientID.split(';')} />;\n      return '';\n\n    default:\n      // TODO: Figure out what to do here, this won't work because StudyList expects studies\n      // return <StudyList />;\n      return '';\n  }\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(IHEInvokeImageDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [match.params.studyInstanceUid];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n\n    this.searchForStudies();\n  }\n\n  searchForStudies = (\n    searchData = {\n      currentPage: 0,\n      rowsPerPage: StudyListWithData.rowsPerPage,\n      studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n      studyDateTo: StudyListWithData.defaultStudyDateTo,\n      sortData: StudyListWithData.defaultSort,\n    }\n  ) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        let sortedStudies = studies.map(study => {\n          if (!moment(study.studyDate, 'MMM DD, YYYY', true).isValid()) {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n          }\n          return study;\n        });\n\n        sortedStudies.sort(function(a, b) {\n          let fieldA = a[field];\n          let fieldB = b[field];\n          if (field === 'studyDate') {\n            fieldA = moment(fieldA).toISOString();\n            fieldB = moment(fieldB).toISOString();\n          }\n          if (order === 'desc') {\n            if (fieldA < fieldB) {\n              return -1;\n            }\n            if (fieldA > fieldB) {\n              return 1;\n            }\n            return 0;\n          } else {\n            if (fieldA > fieldB) {\n              return -1;\n            }\n            if (fieldA < fieldB) {\n              return 1;\n            }\n            return 0;\n          }\n        });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        <StudyList\n          studies={this.state.studies}\n          studyListFunctionsEnabled={false}\n          onImport={this.onImport}\n          onSelectItem={this.onSelectItem}\n          pageSize={this.rowsPerPage}\n          defaultSort={StudyListWithData.defaultSort}\n          studyListDateFilterNumDays={\n            StudyListWithData.studyListDateFilterNumDays\n          }\n          onSearch={this.onSearch}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(StudyListWithData);\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction StudyListRouting({ match }) {\n  // TODO: Figure out which filters we want to pass in via a URL\n  //const { patientId } = match.params;\n\n  return <ConnectedStudyList />;\n}\n\nStudyListRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      patientIds: PropTypes.string,\n    }),\n  }),\n};\n\nexport default StudyListRouting;\n","import React, { Component } from 'react';\nimport { log, metadata, studies, utils } from 'ohif-core';\n\nimport PropTypes from 'prop-types';\nimport Viewer from '../connectedComponents/Viewer';\nimport { extensionManager } from './../App.js';\nimport qs from 'querystring';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          retrieveStudiesMetadata(\n            server,\n            studyInstanceUids,\n            seriesInstanceUids\n          ).then(\n            studies => {\n              resolve(studies);\n            },\n            error => {\n              reject(error);\n            }\n          );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const query = qs.parse(this.props.location.search);\n      const studies = await StandaloneRouting.parseQueryAndFetchStudies(query);\n\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({ studies: updatedStudies });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './CallbackPage.js';\nimport { withRouter } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        <Route exact path=\"/studylist\" component={StudyListRouting} />\n        <Route exact path=\"/\" component={StudyListRouting} />\n        <Route exact path=\"/viewer\" component={StandaloneRouting} />\n        <Route path=\"/viewer/:studyInstanceUids\" component={ViewerRouting} />\n        <Route\n          path=\"/study/:studyInstanceUid/series/:seriesInstanceUids\"\n          component={ViewerRouting}\n        />\n        <Route\n          path=\"/IHEInvokeImageDisplay\"\n          component={IHEInvokeImageDisplay}\n        />\n        <Route render={() => <div> Sorry, this page does not exist. </div>} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","const defaultState = {\n  leftSidebarOpen: true,\n  rightSidebarOpen: false,\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    // ~ SIDEBAR\n    case 'SET_LEFT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { leftSidebarOpen: action.state });\n    case 'SET_RIGHT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { rightSidebarOpen: action.state });\n    case 'SET_LABELLING_FLOW_DATA': {\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    }\n    case 'SET_TOOL_CONTEXT_MENU_DATA': {\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    }\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\n\n// import { createLogger } from 'redux-logger';\nimport layoutReducers from './layout/reducers.js';\nimport { reducer as oidcReducer } from 'redux-oidc';\nimport { redux } from 'ohif-core';\nimport thunkMiddleware from 'redux-thunk';\n\n// Combine our ohif-core, ui, and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage } = redux;\n// const loggerMiddleware = createLogger();\n\nreducers.ui = layoutReducers;\nreducers.oidc = oidcReducer;\n\nconst rootReducer = combineReducers(reducers);\nconst store = createStore(\n  rootReducer,\n  localStorage.loadState(), // preloadedState\n  applyMiddleware(\n    thunkMiddleware // Lets us dispatch() functions\n    // loggerMiddleware // neat middleware that logs actions\n  )\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nexport default store;\n","import { redux } from 'ohif-core';\nimport store from './../store';\nconst { setViewportActive } = redux.actions;\n\nconst actions = {\n  updateViewportDisplaySet: ({ direction }) => {\n    // TODO\n    console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: ({ viewports, direction }) => {\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n    const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n    let newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n    store.dispatch(setViewportActive(newIndex));\n  },\n};\n\nconst definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: 1 },\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: -1 },\n  },\n};\n\nexport default definitions;\n","import viewerCommandDefinitions from './viewer.js';\n\nconst CONTEXTS = {\n  viewer: 'VIEWER',\n};\n\n/**\n * Register all commands.\n * TODO: Extensions should self-register their commands\n */\nfunction init(commandsManager) {\n  _registerViewerCommands(commandsManager);\n}\n\n/**\n * Register all Viewer commands\n *\n * @private\n */\nfunction _registerViewerCommands(commandsManager) {\n  const commandContext = CONTEXTS.viewer;\n\n  commandsManager.createContext(commandContext);\n  Object.keys(viewerCommandDefinitions).forEach(commandName => {\n    const commandDefinition = viewerCommandDefinitions[commandName];\n\n    commandsManager.registerCommand(\n      commandContext,\n      commandName,\n      commandDefinition\n    );\n  });\n}\n\nexport default {\n  init,\n};\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","import './config';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  utils,\n} from 'ohif-core';\nimport React, { Component } from 'react';\nimport {\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport { I18nextProvider } from 'react-i18next';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\nimport { OidcProvider } from 'redux-oidc';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport appCommands from './appCommands';\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport i18n from '@ohif/i18n';\nimport setupTools from './setupTools';\nimport store from './store';\n// Imported flat feature since is not transpiled for old browser versions\nimport 'core-js/features/array/flat';\n\n// ~~~~ APP SETUP\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst hotkeysManager = new HotkeysManager(commandsManager);\nconst extensionManager = new ExtensionManager({ commandsManager });\n\n// TODO: Should be done in extensions w/ commandsModule\n// ~~ ADD COMMANDS\nappCommands.init(commandsManager);\nif (window.config.hotkeys) {\n  hotkeysManager.setHotkeys(window.config.hotkeys, true);\n}\n// ~~~~ END APP SETUP\n\nsetupTools(store);\n\n// const children = {\n//   viewport: [<ConnectedToolContextMenu key=\"tool-context\" />],\n// };\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nextensionManager.registerExtensions([\n  OHIFCornerstoneExtension,\n  OHIFVTKExtension,\n  OHIFDicomPDFExtension,\n  OHIFDicomHtmlExtension,\n  OHIFDicomMicroscopyExtension,\n]);\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <I18nextProvider i18n={i18n}>\n            <OidcProvider store={store} userManager={userManager}>\n              <Router basename={this.props.routerBasename}>\n                <WhiteLabellingContext.Provider\n                  value={this.props.whiteLabelling}\n                >\n                  <OHIFStandaloneViewer userManager={userManager} />\n                </WhiteLabellingContext.Provider>\n              </Router>\n            </OidcProvider>\n          </I18nextProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n          <Router basename={this.props.routerBasename}>\n            <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n              <OHIFStandaloneViewer />\n            </WhiteLabellingContext.Provider>\n          </Router>\n        </I18nextProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// Make our managers accessible\nexport { commandsManager, extensionManager, hotkeysManager };\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n  \n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\nUI settings\nPlugins\n    - Custom tools / buttons\n    - Custom Sidebar module thing\n    - Custom Viewports\n    - Custom Sop Class Interpreters\n*/\n\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"leftSidebarOpen\": false,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}