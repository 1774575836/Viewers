{"version":3,"sources":["config.js","version.js","utils/getUserManagerForOpenIdConnectClient.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","lib/jumpToRowItem.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","connectedComponents/ConnectedMeasurementTable.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","connectedComponents/FlexboxLayout.js","connectedComponents/ConnectedFlexboxLayout.js","store/layout/actions.js","connectedComponents/ConnectedCineDialog.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","store/layout/selectors.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","routes/ViewerRouting.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","routes/CallbackPage.js","routes/NotFound.js","components/LoadingBar/Bar.js","components/LoadingBar/Container.js","OHIFStandaloneViewer.js","store/layout/reducers.js","store/index.js","appCommands/viewer.js","appCommands/index.js","setupTools.js","App.js","utils/initWebWorkers.js","index.js"],"names":["window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getUserManagerForOpenIdConnectClient","oidcSettings","settings","Object","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","OHIFLogo","react_default","a","createElement","target","rel","className","href","react_viewerbase_dist_index_es","name","defaultContextValues","logoComponent","WhiteLabellingContext","React","createContext","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isUserPreferencesOpen","isOpen","loadOptions","_this2","t","options","title","icon","onClick","setState","hotKeysData","hotkeysManager","hotkeyDefinitions","_ref","windowLevelData","_this3","home","location","studyLink","react_router_dom","to","children","pathname","list","align","assign","onCancel","Component","defaultProps","withTranslation","withRouter","ConnectedHeader","connect","ui","userPreferencesModalOpen","MeasurementApi","measurements","studyMetadataManager","utils","updateTableWithNewMeasurementData","toolType","measurementNumber","description","measurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","doneCallback","cornerstoneTools","getToolForElement","configuration","setViewportSpecificData","redux","actions","getMeasurementText","measurementData","text","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","data","timepoint","eachData","displayText","timepointId","push","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","config","toolGroup","childTools","getAllTools","tableMeasurements","map","groupName","groupId","id","keys","toolId","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","length","date","moment","latestDate","format","ConnectedMeasurementTable","_state$timepointManag","timepointManager","measurementCollection","viewports","dispatch","dispatchRelabel","event","viewportsState","activeViewportIndex","enabledElements","log","error","clientX","clientY","skipAddLabelButton","editLocation","dispatchEditDescription","editDescriptionOnDialog","dispatchJumpToRowItem","timepointManagerState","arguments","undefined","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","Math","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","key","viewportSpecificData","viewportIndex","study","get","studyInstanceUid","Error","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","active","measurementToActive","propsFromState","propsFromDispatch","ownProps","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","cloneDeep","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","availableViewportModules","viewportModules","extensionManager","modules","MODULE_TYPES","VIEWPORT","moduleDefinition","extensionId","module","availablePlugins","LayoutManager","toolTypes","defaultDropdownItems","actionType","action","nearbyToolData","removeToolState","_ref2","_ref3","getDropdownItems","isTouchEvent","coords","nearbyTool","pointNearTool","toolData","getToolState","index","toolInterface","getNearbyToolData","currentPoints","canvas","dropdownItems","item","params","ToolContextMenu","componentDidMount","mainElement","current","updateElementPosition","componentDidUpdate","_this$mainElement$cur","offsetParent","offsetTop","offsetHeight","offsetWidth","offsetLeft","offBoundPixels","top","y","style","left","x","createRef","_this$props","availableTools","dropdownComponents","onClose","position","ref","visible","ConnectedToolContextMenu","contextMenu","toolContextMenuData","extensions","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","some","v","setViewportData","dSet","plugin","getDisplaySets","prevProps","connectedComponents_ConnectedLayoutManager","connectedComponents_ConnectedToolContextMenu","clearViewportSpecificData","ConnectedViewerMain","_state$viewports","FlexboxLayout","studiesForBrowser","getStudiesForBrowser","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","mainContentClassName","leftSidebarOpen","rightSidebarOpen","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedMeasurementTable","ConnectedFlexboxLayout","setLeftSidebarOpen","type","setRightSidebarOpen","scrollToIndex","toolImport","csTools","import","ConnectedCineDialog","cine","activeEnabledElement","dom","activeViewportCineData","isPlaying","cineFrameRate","dispatchSetViewportSpecificData","onPlayPauseChanged","onFrameRateChanged","frameRate","onClickNextButton","stackData","_stackData$data$","currentImageIdIndex","imageIds","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","lastIndex","CineDialog","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","ConnectedPluginSwitch","commandsManager","runCommand","ToolbarRow","onLeftSidebarValueChanged","value","onRightSidebarValueChanged","toolbarButtonDefinitions","_getVisibleToolbarButtons","assertThisInitialized","toolbarButtons","activeButtons","isCineDialogOpen","_handleBuiltIn","behavior","bind","activeContexts","leftSidebarToggle","bottomLabel","rightSidebarToggle","leftSidebarValue","rightSidebarValue","buttonComponents","button","evt","commandName","commandOptions","isActive","includes","cineDialogContainerStyle","display","zIndex","Fragment","padding","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","connectedComponents_ConnectedCineDialog","toolbarModules","TOOLBAR","extension","_extension$module","definitions","defaultContext","definition","context","getActiveContexts","createSelector","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","activeViewportExtension","toUpperCase","ConnectedToolbarRow","SimpleDialog","rootClass","componentRef","componentStyle","headerTitle","onConfirm","bounding","elementRef","currentPosition","currentElement","maxHeight","buttonSize","EditDescriptionDialog","onUpdate","handleChange","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","CSSTransition","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","LabellingFlow","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","LabellingManager_LabellingManager","ConnectedLabellingOverlay","labelling","labellingFlowData","Viewer","retrieveMeasurements","patientId","timepointIds","Promise","resolve","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","currentTimepointId","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","connectedComponents_ConnectedFlexboxLayout","connectedComponents_ConnectedLabellingOverlay","setTimepoints","setMeasurements","ConnectedViewer","OHIFStudyMetadata","metadata","retrieveStudiesMetadata","updateMetaDataManager","ViewerRetrieveStudyData","seriesInstanceUids","server","purge","updatedStudies","studyMetadata","sopClassHandlerModules","createDisplaySets","setDisplaySets","add","_context","t0","JSON","stringify","connectedComponents_ConnectedViewer","ConnectedViewerRetrieveStudyData","servers","studyUids","_getQueryParameters","queryString","parse","search","getQueryParameters","requestType","studyUID","connectedComponents_ConnectedViewerRetrieveStudyData","split","atob","ViewerRouting","studyUIDs","seriesUIDs","match","_match$params","StudyListWithData","searchData","searchForStudies","currentPage","rowsPerPage","studyDateFrom","defaultStudyDateFrom","studyDateTo","defaultStudyDateTo","sortData","defaultSort","patientName","accessionNumber","studyDescription","modalitiesInStudy","modalities","limit","offset","searchStudies","then","_searchData$sortData","field","order","sortedStudies","isValid","fieldA","fieldB","catch","onImport","onSelectItem","studyInstanceUID","history","onSearch","studyListFunctionsEnabled","pageSize","studyListDateFilterNumDays","subtract","toDate","ConnectedStudyList","StudyListRouting","studylist_ConnectedStudyList","StandaloneRouting","qs","parseQueryAndFetchStudies","src_connectedComponents_Viewer","reject","url","oReq","XMLHttpRequest","warn","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","sessionStorage","getItem","errorCallback","NotFound","Bar","animationDuration","background","transition","boxShadow","opacity","right","transform","Container","isFinished","pointerEvents","reload","OHIFStandaloneViewer","isLoading","unlisten","listen","setContext","expired","setItem","react_router","exact","path","onEnter","render","routes_CallbackPage","component","signinRedirect","routes","IHEInvokeImageDisplay","currentPath","noMatchingRoutes","r","matchPath","react_nprogress","isAnimating","LoadingBar_Container","LoadingBar_Bar","unmountOnExit","onEntered","NotFound_NotFound","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","defaultState","reducers","localStorage","layoutReducers","oidcReducer","rootReducer","combineReducers","createStore","loadState","applyMiddleware","thunkMiddleware","subscribe","saveState","preferences","setViewportActive","updateViewportDisplaySet","direction","console","updateActiveViewport","maxIndex","newIndex","incrementActiveViewport","commandFn","storeContexts","decrementActiveViewport","CONTEXTS","viewer","appCommands","init","commandContext","viewerCommandDefinitions","commandDefinition","registerCommand","_registerViewerCommands","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","parseInt","dataset","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","commandsManagerConfig","getAppState","CommandsManager","HotkeysManager","ExtensionManager","hotkeys","setHotkeys","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","registerExtensions","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","App","firstOpenIdClient","addServers","baseDirectory","webWorkScriptsPath","scriptsPath","protocol","host","maxWebWorkers","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","initWebWorkers","routerBasename","relativeWebWorkerScriptsPath","react_redux_es","es","i18n","basename","Provider","src_OHIFStandaloneViewer_0","__webpack_require__","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.09d6e8c3.chunk.js","sourcesContent":["import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\n//if (process.env.node_env === 'development') {\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n//}\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.21';\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","import './Header.css';\nimport './Header.css';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Dropdown } from 'react-viewerbase';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport PropTypes from 'prop-types';\nimport { AboutModal } from 'react-viewerbase';\nimport { hotkeysManager } from './../../App.js';\nimport { withTranslation } from 'react-i18next';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  // onSave: data => {\n  //   const contextName = store.getState().commandContext.context;\n  //   const preferences = cloneDeep(store.getState().preferences);\n  //   preferences[contextName] = data;\n  //   dispatch(setUserPreferences(preferences));\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n  // },\n  // onResetToDefaults: () => {\n  //   dispatch(setUserPreferences());\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys();\n  // },\n\n  constructor(props) {\n    super(props);\n    this.state = { isUserPreferencesOpen: false, isOpen: false };\n\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    const { t } = this.props;\n    this.options = [\n      {\n        title: t('About'),\n        icon: { name: 'info' },\n        onClick: () => {\n          this.setState({\n            isOpen: true,\n          });\n        },\n      },\n    ];\n\n    this.hotKeysData = hotkeysManager.hotkeyDefinitions;\n  }\n\n  onUserPreferencesSave({ windowLevelData, hotKeysData }) {\n    // console.log(windowLevelData);\n    // console.log(hotKeysData);\n    // TODO: Update hotkeysManager\n    // TODO: reset `this.hotKeysData`\n  }\n\n  render() {\n    const { t } = this.props;\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              {t('Back to Viewer')}\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {!this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              {t('Study list')}\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">{t('INVESTIGATIONAL USE ONLY')}</span>\n          <Dropdown title={t('Options')} list={this.options} align=\"right\" />\n          <AboutModal\n            {...this.state}\n            onCancel={() =>\n              this.setState({\n                isOpen: false,\n              })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('Header')(withRouter(Header));\n","import Header from '../components/Header/Header.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst ConnectedHeader = connect(mapStateToProps)(Header);\n\nexport default ConnectedHeader;\n","import { measurements, utils } from 'ohif-core';\n\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\nimport jumpToRowItem from '../lib/jumpToRowItem.js';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { LayoutManager } from 'react-viewerbase';\nimport { MODULE_TYPES } from 'ohif-core';\nimport { connect } from 'react-redux';\nimport { extensionManager } from './../App.js';\n\nconst mapStateToProps = state => {\n  const availableViewportModules = {};\n  const viewportModules = extensionManager.modules[MODULE_TYPES.VIEWPORT];\n\n  viewportModules.forEach(moduleDefinition => {\n    availableViewportModules[moduleDefinition.extensionId] =\n      moduleDefinition.module;\n  });\n\n  // TODO: Use something like state.plugins.defaultPlugin[MODULE_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportModules.length) {\n    defaultPlugin = viewportModules[0].extensionId;\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    // TODO: rename `availableViewportModules`\n    availablePlugins: availableViewportModules,\n    // TODO: rename `defaultViewportModule`\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './ViewerMain.css';\n\nimport { Component } from 'react';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport ConnectedToolContextMenu from './ConnectedToolContextMenu.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    activeViewportIndex: PropTypes.number.isRequired,\n    studies: PropTypes.array,\n    viewportSpecificData: PropTypes.object.isRequired,\n    layout: PropTypes.object.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    if (this.props.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n\n      this.setState({\n        displaySets,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n\n      this.setState({\n        displaySets,\n      });\n    }\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        {this.state.displaySets.length && (\n          <ConnectedLayoutManager\n          studies={this.props.studies}\n          viewportData={this.getViewportData()}\n          setViewportData={this.setViewportData}\n          >\n            {/* Children to add to each viewport that support children */}\n            <ConnectedToolContextMenu />\n          </ConnectedLayoutManager>\n        )}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // TODO: These don't have to be viewer specific?\n    // Could qualify for other routes?\n    // hotkeys.destroy();\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import OHIF from 'ohif-core';\nimport ViewerMain from './ViewerMain';\nimport { connect } from 'react-redux';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './FlexboxLayout.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport PropTypes from 'prop-types';\n\nclass FlexboxLayout extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    studiesForBrowser: [],\n  };\n\n  componentDidMount() {\n    if (this.props.studies) {\n      const studiesForBrowser = this.getStudiesForBrowser();\n\n      this.setState({\n        studiesForBrowser,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const studiesForBrowser = this.getStudiesForBrowser();\n\n      this.setState({\n        studiesForBrowser,\n      });\n    }\n  }\n\n  getStudiesForBrowser = () => {\n    const { studies } = this.props;\n\n    // TODO[react]:\n    // - Add sorting of display sets\n    // - Add useMiddleSeriesInstanceAsThumbnail\n    // - Add showStackLoadingProgressBar option\n    return studies.map(study => {\n      const { studyInstanceUid } = study;\n\n      const thumbnails = study.displaySets.map(displaySet => {\n        const {\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n          // TODO: This is undefined\n          // modality,\n        } = displaySet;\n\n        let imageId;\n        let altImageText = ' '; // modality\n\n        if (displaySet.images && displaySet.images.length) {\n          imageId = displaySet.images[0].getImageId();\n        } else {\n          altImageText = 'SR';\n        }\n\n        return {\n          imageId,\n          altImageText,\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n        };\n      });\n\n      return {\n        studyInstanceUid,\n        thumbnails,\n      };\n    });\n  };\n\n  render() {\n    let mainContentClassName = 'main-content';\n    if (this.props.leftSidebarOpen) {\n      mainContentClassName += ' sidebar-left-open';\n    }\n\n    if (this.props.rightSidebarOpen) {\n      mainContentClassName += ' sidebar-right-open';\n    }\n\n    // TODO[react]: Make ConnectedMeasurementTable extension with state.timepointManager\n    return (\n      <div className=\"FlexboxLayout\">\n        <div\n          className={\n            this.props.leftSidebarOpen\n              ? 'sidebar-menu sidebar-left sidebar-open'\n              : 'sidebar-menu sidebar-left'\n          }\n        >\n          <ConnectedStudyBrowser studies={this.state.studiesForBrowser} />\n        </div>\n        <div className={mainContentClassName}>\n          <ConnectedViewerMain studies={this.props.studies} />\n        </div>\n        <div\n          className={\n            this.props.rightSidebarOpen\n              ? 'sidebar-menu sidebar-right sidebar-open'\n              : 'sidebar-menu sidebar-right'\n          }\n        >\n          <ConnectedMeasurementTable />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlexboxLayout;\n","import { connect } from 'react-redux';\nimport FlexboxLayout from './FlexboxLayout';\n\nconst mapStateToProps = state => {\n  return {\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst ConnectedFlexboxLayout = connect(\n  mapStateToProps,\n  null\n)(FlexboxLayout);\n\nexport default ConnectedFlexboxLayout;\n","export const setLeftSidebarOpen = state => ({\n  type: 'SET_LEFT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setRightSidebarOpen = state => ({\n  type: 'SET_RIGHT_SIDEBAR_OPEN',\n  state,\n});\n\nconst actions = {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n};\n\nexport default actions;\n","import { connect } from 'react-redux';\nimport { CineDialog } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport csTools from 'cornerstone-tools';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// Why do I need or care about any of this info?\n// A dispatch action should be able to pull this at the time of an event?\n// `isPlaying` and `cineFrameRate` might matter, but I think we can prop pass for those.\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { cine, dom } = viewportSpecificData[activeViewportIndex] || {};\n\n  const cineData = cine || {\n    isPlaying: false,\n    cineFrameRate: 24,\n  };\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportCineData: cineData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportCineData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  return {\n    cineFrameRate: activeViewportCineData.cineFrameRate,\n    isPlaying: activeViewportCineData.isPlaying,\n    onPlayPauseChanged: isPlaying => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.isPlaying = !cine.isPlaying;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onFrameRateChanged: frameRate => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.cineFrameRate = frameRate;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onClickNextButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex, imageIds } = stackData.data[0];\n      if (currentImageIdIndex >= imageIds.length - 1) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex + 1);\n    },\n    onClickBackButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex } = stackData.data[0];\n      if (currentImageIdIndex === 0) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex - 1);\n    },\n    onClickSkipToStart: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      scrollToIndex(activeEnabledElement, 0);\n    },\n    onClickSkipToEnd: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const lastIndex = stackData.data[0].imageIds.length - 1;\n      scrollToIndex(activeEnabledElement, lastIndex);\n    },\n  };\n};\n\nconst ConnectedCineDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CineDialog);\n\nexport default ConnectedCineDialog;\n","import { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import OHIF from 'ohif-core';\nimport PluginSwitch from './PluginSwitch.js';\nimport { commandsManager } from './../App.js';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    viewportSpecificData,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\n/*function setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}*/\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  //const { activeViewportIndex, layout } = propsFromState;\n  //const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    /*{\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('axial');\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('sagittal');\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('coronal');\n      },\n    },*/\n    {\n      label: '2D MPR',\n      icon: 'cube',\n      onClick: () => {\n        commandsManager.runCommand('mpr2d');\n      },\n    },\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\nimport { RoundedButtonGroup, ToolbarButton } from 'react-viewerbase';\nimport { commandsManager, extensionManager } from './../App.js';\n\nimport ConnectedCineDialog from './ConnectedCineDialog';\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport { MODULE_TYPES } from 'ohif-core';\nimport PropTypes from 'prop-types';\n\nclass ToolbarRow extends Component {\n  static propTypes = {\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n    setLeftSidebarOpen: PropTypes.func,\n    setRightSidebarOpen: PropTypes.func,\n    activeContexts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  };\n\n  static defaultProps = {\n    leftSidebarOpen: false,\n    rightSidebarOpen: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const toolbarButtonDefinitions = _getVisibleToolbarButtons.call(this);\n    // TODO:\n    // If it's a tool that can be active... Mark it as active?\n    // - Tools that are on/off?\n    // - Tools that can be bound to multiple buttons?\n\n    // Normal ToolbarButtons...\n    // Just how high do we need to hoist this state?\n    // Why ToolbarRow instead of just Toolbar? Do we have any others?\n    this.state = {\n      toolbarButtons: toolbarButtonDefinitions,\n      activeButtons: [],\n      isCineDialogOpen: false,\n    };\n\n    this._handleBuiltIn = _handleBuiltIn.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const activeContextsChanged =\n      prevProps.activeContexts !== this.props.activeContexts;\n\n    if (activeContextsChanged) {\n      this.setState({\n        toolbarButtons: _getVisibleToolbarButtons.call(this),\n      });\n    }\n  }\n\n  onLeftSidebarValueChanged = value => {\n    this.props.setLeftSidebarOpen(!!value);\n  };\n\n  onRightSidebarValueChanged = value => {\n    this.props.setRightSidebarOpen(!!value);\n  };\n\n  render() {\n    const leftSidebarToggle = [\n      {\n        value: 'studies',\n        icon: 'th-large',\n        bottomLabel: 'Series',\n      },\n    ];\n\n    const rightSidebarToggle = [\n      {\n        value: 'measurements',\n        icon: 'list',\n        bottomLabel: 'Measurements',\n      },\n    ];\n\n    const leftSidebarValue = this.props.leftSidebarOpen\n      ? leftSidebarToggle[0].value\n      : null;\n\n    const rightSidebarValue = this.props.rightSidebarOpen\n      ? rightSidebarToggle[0].value\n      : null;\n\n    const buttonComponents = _getButtonComponents.call(\n      this,\n      this.state.toolbarButtons,\n      this.state.activeButtons\n    );\n\n    const cineDialogContainerStyle = {\n      display: this.state.isCineDialogOpen ? 'block' : 'none',\n      position: 'absolute',\n      top: '82px',\n      zIndex: 999,\n    };\n\n    return (\n      <>\n        <div className=\"ToolbarRow\">\n          <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n            <RoundedButtonGroup\n              options={leftSidebarToggle}\n              value={leftSidebarValue}\n              onValueChanged={this.onLeftSidebarValueChanged}\n            />\n          </div>\n          {buttonComponents}\n          <ConnectedLayoutButton />\n          <ConnectedPluginSwitch />\n          <div\n            className=\"pull-right m-t-1 rm-x-1\"\n            style={{ marginLeft: 'auto' }}\n          >\n            <RoundedButtonGroup\n              options={rightSidebarToggle}\n              value={rightSidebarValue}\n              onValueChanged={this.onRightSidebarValueChanged}\n            />\n          </div>\n        </div>\n        <div className=\"CineDialogContainer\" style={cineDialogContainerStyle}>\n          <ConnectedCineDialog />\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Determine which extension buttons should be showing, if they're\n * active, and what their onClick behavior should be.\n */\nfunction _getButtonComponents(toolbarButtons, activeButtons) {\n  return toolbarButtons.map((button, index) => {\n    // TODO: If `button.buttons`, use `ExpandedToolMenu`\n    // I don't believe any extensions currently leverage this\n    return (\n      <ToolbarButton\n        key={button.id}\n        label={button.label}\n        icon={button.icon}\n        onClick={(evt, props) => {\n          if (button.commandName) {\n            const options = Object.assign({ evt }, button.commandOptions);\n            commandsManager.runCommand(button.commandName, options);\n          }\n\n          // TODO: Use Types ENUM\n          // TODO: We can update this to be a `getter` on the extension to query\n          //       For the active tools after we apply our updates?\n          if (button.type === 'setToolActive') {\n            this.setState({\n              activeButtons: [button.id],\n            });\n          } else if (button.type === 'builtIn') {\n            this._handleBuiltIn(button.options);\n          }\n        }}\n        isActive={activeButtons.includes(button.id)}\n      />\n    );\n  });\n}\n\nfunction _getVisibleToolbarButtons() {\n  const toolbarModules = extensionManager.modules[MODULE_TYPES.TOOLBAR];\n  const toolbarButtonDefinitions = [];\n\n  toolbarModules.forEach(extension => {\n    const { definitions, defaultContext } = extension.module;\n    definitions.forEach(definition => {\n      const context = definition.context || defaultContext;\n\n      if (this.props.activeContexts.includes(context)) {\n        toolbarButtonDefinitions.push(definition);\n      }\n    });\n  });\n\n  return toolbarButtonDefinitions;\n}\n\nfunction _handleBuiltIn({ behavior } = {}) {\n  if (behavior === 'CINE') {\n    this.setState({\n      isCineDialogOpen: !this.state.isCineDialogOpen,\n    });\n  }\n}\n\nexport default ToolbarRow;\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","import {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n} from './../store/layout/actions.js';\n\nimport ToolbarRow from './ToolbarRow';\nimport { connect } from 'react-redux';\nimport { getActiveContexts } from './../store/layout/selectors.js';\n\nconst mapStateToProps = state => {\n  return {\n    activeContexts: getActiveContexts(state),\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLeftSidebarOpen: state => {\n      dispatch(setLeftSidebarOpen(state));\n    },\n    setRightSidebarOpen: state => {\n      dispatch(setRightSidebarOpen(state));\n    },\n  };\n};\n\nconst ConnectedToolbarRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import OHIF from 'ohif-core';\n//import { CineDialog } from 'react-viewerbase';\n\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedFlexboxLayout from './ConnectedFlexboxLayout.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    this.currentTimepointId = currentTimepointId;\n    this.timepointApi = timepointApi;\n    this.measurementApi = measurementApi;\n\n    if (studies) {\n      const patientId = studies[0] && studies[0].patientId;\n      timepointApi.retrieveTimepoints({ patientId });\n      measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const { studies } = this.props;\n      const patientId = studies[0] && studies[0].patientId;\n      const currentTimepointId = this.currentTimepointId;\n      this.timepointApi.retrieveTimepoints({ patientId });\n      this.measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n        <div id=\"viewer\" className=\"Viewer\">\n          <ConnectedToolbarRow />\n          {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n          {/*<StudyPrefetcher studies={this.props.studies} />*/}\n          <ConnectedFlexboxLayout studies={this.props.studies} />\n          <ConnectedLabellingOverlay />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  null,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport { metadata, studies, utils } from 'ohif-core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  async componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n\n    try {\n      const studies = await retrieveStudiesMetadata(\n        server,\n        studyInstanceUids,\n        seriesInstanceUids\n      );\n\n      // Render the viewer when the data is ready\n      // TODO: CLEAR THIS SOMEWHERE ELSE\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({\n        studies: updatedStudies,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n      });\n\n      // TODO: Handle gracefully instead of throwing?\n      throw new Error(err);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData.js';\n\nfunction decodeStudyUids(studyUids) {\n  const decodedData = window.atob(studyUids);\n\n  return decodedData.split(';');\n}\n\nfunction getQueryParameters(location) {\n  if (location) {\n    return queryString.parse(location.search);\n  }\n\n  return {};\n}\n\nfunction IHEInvokeImageDisplay({ location }) {\n  const {\n    // patientID,\n    requestType,\n    studyUID,\n  } = getQueryParameters(location);\n\n  switch (requestType) {\n    case 'STUDY':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={studyUID.split(';')}\n        />\n      );\n\n    case 'STUDYBASE64':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={decodeStudyUids(studyUID)}\n        />\n      );\n\n    case 'PATIENT':\n      // TODO: connect this to the StudyList when we have the filter parameters set up\n      // return <StudyList patientUids={patientID.split(';')} />;\n      return '';\n\n    default:\n      // TODO: Figure out what to do here, this won't work because StudyList expects studies\n      // return <StudyList />;\n      return '';\n  }\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(IHEInvokeImageDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [match.params.studyInstanceUid];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n\n    this.searchForStudies();\n  }\n\n  searchForStudies = (\n    searchData = {\n      currentPage: 0,\n      rowsPerPage: StudyListWithData.rowsPerPage,\n      studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n      studyDateTo: StudyListWithData.defaultStudyDateTo,\n      sortData: StudyListWithData.defaultSort,\n    }\n  ) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        let sortedStudies = studies.map(study => {\n          if (!moment(study.studyDate, 'MMM DD, YYYY', true).isValid()) {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n          }\n          return study;\n        });\n\n        sortedStudies.sort(function(a, b) {\n          let fieldA = a[field];\n          let fieldB = b[field];\n          if (field === 'studyDate') {\n            fieldA = moment(fieldA).toISOString();\n            fieldB = moment(fieldB).toISOString();\n          }\n          if (order === 'desc') {\n            if (fieldA < fieldB) {\n              return -1;\n            }\n            if (fieldA > fieldB) {\n              return 1;\n            }\n            return 0;\n          } else {\n            if (fieldA > fieldB) {\n              return -1;\n            }\n            if (fieldA < fieldB) {\n              return 1;\n            }\n            return 0;\n          }\n        });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        <StudyList\n          studies={this.state.studies}\n          studyListFunctionsEnabled={false}\n          onImport={this.onImport}\n          onSelectItem={this.onSelectItem}\n          pageSize={this.rowsPerPage}\n          defaultSort={StudyListWithData.defaultSort}\n          studyListDateFilterNumDays={\n            StudyListWithData.studyListDateFilterNumDays\n          }\n          onSearch={this.onSearch}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(StudyListWithData);\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction StudyListRouting({ match }) {\n  // TODO: Figure out which filters we want to pass in via a URL\n  //const { patientId } = match.params;\n\n  return <ConnectedStudyList />;\n}\n\nStudyListRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      patientIds: PropTypes.string,\n    }),\n  }),\n};\n\nexport default StudyListRouting;\n","import React, { Component } from 'react';\nimport { log, metadata, studies, utils } from 'ohif-core';\n\nimport PropTypes from 'prop-types';\nimport Viewer from '../connectedComponents/Viewer';\nimport { extensionManager } from './../App.js';\nimport qs from 'querystring';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          retrieveStudiesMetadata(\n            server,\n            studyInstanceUids,\n            seriesInstanceUids\n          ).then(\n            studies => {\n              resolve(studies);\n            },\n            error => {\n              reject(error);\n            }\n          );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const query = qs.parse(this.props.location.search);\n      const studies = await StandaloneRouting.parseQueryAndFetchStudies(query);\n\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({ studies: updatedStudies });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <div className={'not-found'}>\n      <div>\n        <h4>Sorry, this page does not exist.</h4>\n        <h5>\n          <Link to={'/'}>Go back to the Study List</Link>\n        </h5>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031,\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100,\n      }}\n    />\n  </div>\n);\n\nexport default Bar;\n","import React from 'react';\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, matchPath } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { NProgress } from '@tanem/react-nprogress';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './routes/CallbackPage.js';\nimport NotFound from './routes/NotFound.js';\nimport { Bar, Container } from './components/LoadingBar/';\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  state = {\n    isLoading: false,\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    /**\n     * Note: this approach for routing is caused by the conflict between\n     * react-transition-group and react-router's <Switch> component.\n     *\n     * See http://reactcommunity.org/react-transition-group/with-react-router/\n     */\n    const routes = [\n      {\n        path: '/',\n        Component: StudyListRouting,\n      },\n      {\n        path: '/studylist',\n        Component: StudyListRouting,\n      },\n      {\n        path: '/viewer',\n        Component: StandaloneRouting,\n      },\n      {\n        path: '/viewer/:studyInstanceUids',\n        Component: ViewerRouting,\n      },\n      {\n        path: '/study/:studyInstanceUid/series/:seriesInstanceUids',\n        Component: ViewerRouting,\n      },\n      {\n        path: '/IHEInvokeImageDisplay',\n        Component: IHEInvokeImageDisplay,\n      },\n    ];\n\n    const currentPath = this.props.location.pathname;\n    const noMatchingRoutes = !routes.find(r =>\n      matchPath(currentPath, {\n        path: r.path,\n        exact: true,\n      })\n    );\n\n    return (\n      <>\n        <NProgress isAnimating={this.state.isLoading}>\n          {({ isFinished, progress, animationDuration }) => (\n            <Container\n              isFinished={isFinished}\n              animationDuration={animationDuration}\n            >\n              <Bar progress={progress} animationDuration={animationDuration} />\n            </Container>\n          )}\n        </NProgress>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        {!noMatchingRoutes &&\n          routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                  in={match !== null}\n                  timeout={300}\n                  classNames=\"fade\"\n                  unmountOnExit\n                  onEnter={() => {\n                    this.setState({ isLoading: true });\n                  }}\n                  onEntered={() => {\n                    this.setState({ isLoading: false });\n                  }}\n                >\n                  {match === null ? <></> : <Component match={match} />}\n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        {noMatchingRoutes && <NotFound />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","const defaultState = {\n  leftSidebarOpen: true,\n  rightSidebarOpen: false,\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    // ~ SIDEBAR\n    case 'SET_LEFT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { leftSidebarOpen: action.state });\n    case 'SET_RIGHT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { rightSidebarOpen: action.state });\n    case 'SET_LABELLING_FLOW_DATA': {\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    }\n    case 'SET_TOOL_CONTEXT_MENU_DATA': {\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    }\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\n\n// import { createLogger } from 'redux-logger';\nimport layoutReducers from './layout/reducers.js';\nimport { reducer as oidcReducer } from 'redux-oidc';\nimport { redux } from 'ohif-core';\nimport thunkMiddleware from 'redux-thunk';\n\n// Combine our ohif-core, ui, and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage } = redux;\n// const loggerMiddleware = createLogger();\n\nreducers.ui = layoutReducers;\nreducers.oidc = oidcReducer;\n\nconst rootReducer = combineReducers(reducers);\nconst store = createStore(\n  rootReducer,\n  localStorage.loadState(), // preloadedState\n  applyMiddleware(\n    thunkMiddleware // Lets us dispatch() functions\n    // loggerMiddleware // neat middleware that logs actions\n  )\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nexport default store;\n","import { redux } from 'ohif-core';\nimport store from './../store';\nconst { setViewportActive } = redux.actions;\n\nconst actions = {\n  updateViewportDisplaySet: ({ direction }) => {\n    // TODO\n    console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: ({ viewports, direction }) => {\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n    const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n    let newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n    store.dispatch(setViewportActive(newIndex));\n  },\n};\n\nconst definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: 1 },\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: -1 },\n  },\n};\n\nexport default definitions;\n","import viewerCommandDefinitions from './viewer.js';\n\nconst CONTEXTS = {\n  viewer: 'VIEWER',\n};\n\n/**\n * Register all commands.\n * TODO: Extensions should self-register their commands\n */\nfunction init(commandsManager) {\n  _registerViewerCommands(commandsManager);\n}\n\n/**\n * Register all Viewer commands\n *\n * @private\n */\nfunction _registerViewerCommands(commandsManager) {\n  const commandContext = CONTEXTS.viewer;\n\n  commandsManager.createContext(commandContext);\n  Object.keys(viewerCommandDefinitions).forEach(commandName => {\n    const commandDefinition = viewerCommandDefinitions[commandName];\n\n    commandsManager.registerCommand(\n      commandContext,\n      commandName,\n      commandDefinition\n    );\n  });\n}\n\nexport default {\n  init,\n};\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","import './config';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  utils,\n} from 'ohif-core';\nimport React, { Component } from 'react';\nimport {\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport { I18nextProvider } from 'react-i18next';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\nimport { OidcProvider } from 'redux-oidc';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport appCommands from './appCommands';\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport i18n from '@ohif/i18n';\nimport setupTools from './setupTools';\nimport store from './store';\n// Imported flat feature since is not transpiled for old browser versions\nimport 'core-js/features/array/flat';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\n// ~~~~ APP SETUP\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst hotkeysManager = new HotkeysManager(commandsManager);\nconst extensionManager = new ExtensionManager({ commandsManager });\n\n// TODO: Should be done in extensions w/ commandsModule\n// ~~ ADD COMMANDS\nappCommands.init(commandsManager);\nif (window.config.hotkeys) {\n  hotkeysManager.setHotkeys(window.config.hotkeys, true);\n}\n// ~~~~ END APP SETUP\n\nsetupTools(store);\n\n// const children = {\n//   viewport: [<ConnectedToolContextMenu key=\"tool-context\" />],\n// };\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nextensionManager.registerExtensions([\n  OHIFCornerstoneExtension,\n  OHIFVTKExtension,\n  OHIFDicomPDFExtension,\n  OHIFDicomHtmlExtension,\n  OHIFDicomMicroscopyExtension,\n]);\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <I18nextProvider i18n={i18n}>\n            <OidcProvider store={store} userManager={userManager}>\n              <Router basename={this.props.routerBasename}>\n                <WhiteLabellingContext.Provider\n                  value={this.props.whiteLabelling}\n                >\n                  <OHIFStandaloneViewer userManager={userManager} />\n                </WhiteLabellingContext.Provider>\n              </Router>\n            </OidcProvider>\n          </I18nextProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n          <Router basename={this.props.routerBasename}>\n            <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n              <OHIFStandaloneViewer />\n            </WhiteLabellingContext.Provider>\n          </Router>\n        </I18nextProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// Make our managers accessible\nexport { commandsManager, extensionManager, hotkeysManager };\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n  \n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\nUI settings\nPlugins\n    - Custom tools / buttons\n    - Custom Sidebar module thing\n    - Custom Viewports\n    - Custom Sop Class Interpreters\n*/\n\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"leftSidebarOpen\": false,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}