{"version":3,"sources":["config.js","version.js","utils/getDefaultToolbarButtons.js","utils/getUserManagerForOpenIdConnectClient.js","utils/initWebWorkers.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","redux/actions.js","connectedComponents/ConnectedUserPreferencesModal.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","connectedComponents/ConnectedMeasurementTable.js","lib/jumpToRowItem.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","connectedComponents/FlexboxLayout.js","connectedComponents/ConnectedFlexboxLayout.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/ViewerRouting.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","CallbackPage.js","OHIFStandaloneViewer.js","setupTools.js","redux/ui.js","App.js","index.js"],"names":["window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getDefaultToolbarButtons","command","type","text","icon","active","getUserManagerForOpenIdConnectClient","oidcSettings","settings","Object","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","initWebWorkers","baseDirectory","webWorkScriptsPath","scriptsPath","location","protocol","host","config","maxWebWorkers","Math","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","updateTableWithNewMeasurementData","_ref","toolType","measurementNumber","description","measurementApi","measurements","MeasurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","options","doneCallback","cornerstoneTools","getToolForElement","configuration","toolTypes","defaultDropdownItems","actionType","action","nearbyToolData","removeToolState","_ref2","skipAddLabelButton","editLocation","_ref3","editDescriptionOnDialog","getDropdownItems","isTouchEvent","arguments","length","undefined","coords","nearbyTool","pointNearTool","toolData","getToolState","data","index","toolInterface","Error","getNearbyToolData","currentPoints","canvas","dropdownItems","item","params","push","ToolContextMenu","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","mainElement","current","updateElementPosition","componentDidUpdate","_this$mainElement$cur","offsetParent","offsetTop","offsetHeight","offsetWidth","offsetLeft","offBoundPixels","top","y","style","left","x","React","createRef","_this2","_this$props","availableTools","dropdownComponents","map","react_default","a","createElement","key","className","onClick","event","onClose","position","ref","Component","defaultProps","visible","ConnectedToolContextMenu","connect","ownProps","ui","contextMenu","viewportIndex","toolContextMenuData","extensions","OHIFLogo","target","rel","href","react_viewerbase_dist_index_es","name","defaultContextValues","logoComponent","WhiteLabellingContext","createContext","setLeftSidebarOpen","setRightSidebarOpen","setUserPreferencesModalOpen","setUserPreferences","redux","actions","ConnectedUserPreferencesModal","contextName","commandContext","context","isOpen","userPreferencesModalOpen","windowLevelData","preferences","hotKeysData","dispatch","onCancel","onSave","cloneDeep","hotkeysUtil","setHotkeys","onResetToDefaults","UserPreferencesModal","Header","userPreferencesOpen","title","openUserPreferencesModal","link","home","studyLink","Link","to","children","pathname","list","align","connectedComponents_ConnectedUserPreferencesModal","withRouter","ConnectedHeader","setViewportSpecificData","getMeasurementText","measurementData","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","timepoint","eachData","displayText","timepointId","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","toolGroup","childTools","getAllTools","tableMeasurements","groupName","groupId","id","keys","toolId","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","date","moment","latestDate","format","ConnectedMeasurementTable","_state$timepointManag","timepointManager","measurementCollection","viewports","dispatchRelabel","viewportsState","activeViewportIndex","enabledElements","log","error","clientX","clientY","assign","dispatchEditDescription","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","viewportSpecificData","study","utils","studyMetadataManager","get","studyInstanceUid","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","measurementToActive","propsFromState","propsFromDispatch","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","viewportPluginIds","plugins","availablePlugins","plugin","PLUGIN_TYPES","VIEWPORT","component","LayoutManager","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","some","v","setViewportData","HotkeysUtil","clearViewportSpecificData","setToolActive","setActiveViewportSpecificData","dSet","getDisplaySets","setState","connectedComponents_ConnectedLayoutManager","ConnectedViewerMain","_state$viewports","viewport","FlexboxLayout","studiesForBrowser","getStudiesForBrowser","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","mainContentClassName","leftSidebarOpen","rightSidebarOpen","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedMeasurementTable","ConnectedFlexboxLayout","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","setSingleLayoutData","originalArray","slice","layoutData","ConnectedPluginSwitch","console","warn","vtk","mode","sliceNormal","ToolbarRow","onLeftSidebarValueChanged","value","onRightSidebarValueChanged","pluginComp","leftSidebarToggle","bottomLabel","rightSidebarToggle","leftSidebarValue","rightSidebarValue","currentPluginId","pluginId","_OHIF$plugins","TOOLBAR","PluginComponent","padding","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","ConnectedToolbarRow","pluginInLayout","pluginInViewportData","SimpleDialog","rootClass","componentRef","componentStyle","headerTitle","onConfirm","bounding","elementRef","currentPosition","currentElement","maxHeight","buttonSize","EditDescriptionDialog","onUpdate","handleChange","prevProps","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","react_transition_group","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","LabellingFlow","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","Fragment","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","LabellingManager_LabellingManager","ConnectedLabellingOverlay","labelling","labellingFlowData","Viewer","retrieveMeasurements","patientId","timepointIds","Promise","resolve","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","connectedComponents_ConnectedFlexboxLayout","connectedComponents_ConnectedLabellingOverlay","setTimepoints","setMeasurements","ConnectedViewer","createDisplaySets","ViewerRetrieveStudyData","seriesInstanceUids","server","retrieveStudiesMetadata","then","updatedStudies","catch","JSON","stringify","connectedComponents_ConnectedViewer","IHEInvokeImageDisplay","match","requestType","displayStudyList","studyUID","split","uids","atob","connectedComponents_ViewerRetrieveStudyData","isActive","ConnectedViewerRetrieveStudyData","servers","ViewerRouting","studyUIDs","seriesUIDs","_match$params","connectedComponents_ConnectedViewerRetrieveStudyData","StudyListWithData","searchData","searchForStudies","currentPage","rowsPerPage","studyDateFrom","defaultStudyDateFrom","studyDateTo","defaultStudyDateTo","sortData","defaultSort","patientName","accessionNumber","studyDescription","modalitiesInStudy","modalities","limit","offset","searchStudies","_searchData$sortData","field","order","sortedStudies","onImport","onSelectItem","studyInstanceUID","history","onSearch","studyListFunctionsEnabled","pageSize","studyListDateFilterNumDays","subtract","toDate","ConnectedStudyList","StudyListRouting","studylist_ConnectedStudyList","StandaloneRouting","qs","parse","search","parseQueryAndFetchStudies","src_connectedComponents_Viewer","reject","url","oReq","XMLHttpRequest","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","sessionStorage","getItem","errorCallback","reload","OHIFStandaloneViewer","unlisten","listen","setContext","expired","setItem","Switch","Route","exact","path","onEnter","render","src_CallbackPage","signinRedirect","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","parseInt","dataset","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","defaultState","ExtensionManager","reducers","localStorage","oidcReducer","combined","combineReducers","createStore","loadState","subscribe","saveState","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","connectedComponents_ConnectedToolContextMenu","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","registerExtensions","App","defaultButtons","routerBasename","buttonsAction","setAvailableButtons","firstOpenIdClient","addServers","relativeWebWorkerScriptsPath","es","BrowserRouter","basename","Provider","src_OHIFStandaloneViewer_0","__webpack_require__","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ab7a7e8a.chunk.js","sourcesContent":["import dicomParser from 'dicom-parser';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport OHIF from 'ohif-core';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.20';\n","export default function() {\n  return [\n    {\n      command: 'StackScroll',\n      type: 'tool',\n      text: 'Stack Scroll',\n      icon: 'bars',\n      active: false,\n    },\n    {\n      command: 'Zoom',\n      type: 'tool',\n      text: 'Zoom',\n      icon: 'search-plus',\n      active: false,\n    },\n    {\n      command: 'Wwwc',\n      type: 'tool',\n      text: 'Levels',\n      icon: 'level',\n      active: true,\n    },\n    {\n      command: 'Pan',\n      type: 'tool',\n      text: 'Pan',\n      icon: 'arrows',\n      active: false,\n    },\n    {\n      command: 'Length',\n      type: 'tool',\n      text: 'Length',\n      icon: 'measure-temp',\n      active: false,\n    },\n    /*{\n        command: 'Annotate',\n        type: 'tool',\n        text: 'Annotate',\n        icon: `icon-tools-measure-non-target`,\n        active: false\n    },*/\n    {\n      command: 'Angle',\n      type: 'tool',\n      text: 'Angle',\n      icon: 'angle-left',\n      active: false,\n    },\n    {\n      command: 'Bidirectional',\n      type: 'tool',\n      text: 'Bidirectional',\n      icon: 'measure-target',\n      active: false,\n    },\n    {\n      command: 'Brush',\n      type: 'tool',\n      text: 'Brush',\n      icon: 'circle',\n      active: false,\n    },\n    {\n      command: 'FreehandMouse',\n      type: 'tool',\n      text: 'Freehand',\n      icon: 'star',\n      active: false,\n    },\n    {\n      command: 'EllipticalRoi',\n      type: 'tool',\n      text: 'EllipticalRoi',\n      icon: 'oval',\n      active: false,\n    },\n    {\n      command: 'CircleRoi',\n      type: 'tool',\n      text: 'CircleRoi',\n      icon: 'dot-circle',\n      active: false,\n    },\n    {\n      command: 'RectangleRoi',\n      type: 'tool',\n      text: 'RectangleRoi',\n      icon: 'square-o',\n      active: false,\n    },\n    {\n      command: 'reset',\n      type: 'command',\n      text: 'Reset',\n      icon: 'reset',\n      active: false,\n    },\n  ];\n}\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function(baseDirectory, webWorkScriptsPath) {\n  const scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}/${webWorkScriptsPath}`;\n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}/cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}/cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","export const setLeftSidebarOpen = state => ({\n  type: 'SET_LEFT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setRightSidebarOpen = state => ({\n  type: 'SET_RIGHT_SIDEBAR_OPEN',\n  state,\n});\n\nexport const setUserPreferencesModalOpen = state => ({\n  type: 'SET_USER_PREFERENCES_MODAL_OPEN',\n  state,\n});\n\nconst actions = {\n  setLeftSidebarOpen,\n  setRightSidebarOpen,\n  setUserPreferencesModalOpen,\n};\n\nexport default actions;\n","import { connect } from 'react-redux';\nimport { UserPreferencesModal } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { setUserPreferencesModalOpen } from '../redux/actions.js';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst { setUserPreferences } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const contextName = window.store.getState().commandContext.context;\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n    windowLevelData: state.preferences[contextName]\n      ? state.preferences[contextName].windowLevelData\n      : {},\n    hotKeysData: state.preferences[contextName]\n      ? state.preferences[contextName].hotKeysData\n      : {},\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCancel: () => {\n      dispatch(setUserPreferencesModalOpen(false));\n    },\n    onSave: data => {\n      const contextName = window.store.getState().commandContext.context;\n      const preferences = cloneDeep(window.store.getState().preferences);\n      preferences[contextName] = data;\n      dispatch(setUserPreferences(preferences));\n      dispatch(setUserPreferencesModalOpen(false));\n      OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n    },\n    onResetToDefaults: () => {\n      dispatch(setUserPreferences());\n      dispatch(setUserPreferencesModalOpen(false));\n      OHIF.hotkeysUtil.setHotkeys();\n    },\n  };\n};\n\nconst ConnectedUserPreferencesModal = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserPreferencesModal);\n\nexport default ConnectedUserPreferencesModal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Dropdown } from 'react-viewerbase';\nimport './Header.css';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport ConnectedUserPreferencesModal from '../../connectedComponents/ConnectedUserPreferencesModal.js';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    openUserPreferencesModal: PropTypes.func,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userPreferencesOpen: false,\n    };\n\n    this.options = [\n      {\n        title: 'Preferences ',\n        icon: {\n          name: 'user',\n        },\n        onClick: this.props.openUserPreferencesModal,\n      },\n      {\n        title: 'About',\n        icon: {\n          name: 'info',\n        },\n        link: 'http://ohif.org',\n      },\n    ];\n  }\n\n  render() {\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              Back to Viewer\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {!this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              Study list\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">INVESTIGATIONAL USE ONLY</span>\n          <Dropdown title=\"Options\" list={this.options} align=\"right\" />\n          <ConnectedUserPreferencesModal />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","import { connect } from 'react-redux';\nimport Header from '../components/Header/Header.js';\nimport { setUserPreferencesModalOpen } from '../redux/actions.js';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openUserPreferencesModal: () => {\n      dispatch(setUserPreferencesModalOpen(true));\n    },\n  };\n};\n\nconst ConnectedHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\nexport default ConnectedHeader;\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\nimport jumpToRowItem from '../lib/jumpToRowItem.js';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import { OHIF } from 'ohif-core';\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = OHIF.measurements.MeasurementApi.getToolConfiguration(\n      toolType\n    );\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = OHIF.utils.studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { connect } from 'react-redux';\nimport { LayoutManager } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\n\nconst mapStateToProps = state => {\n  const viewportPluginIds = state.plugins.availablePlugins\n    .filter(plugin => plugin.type === OHIF.plugins.PLUGIN_TYPES.VIEWPORT)\n    .map(plugin => plugin.id);\n\n  const availablePlugins = {};\n  viewportPluginIds.forEach(id => {\n    const plugin = OHIF.plugins.availablePlugins.find(\n      plugin => plugin.id === id\n    );\n    if (plugin) {\n      availablePlugins[id] = plugin.component;\n    }\n  });\n\n  // TODO Use something like state.plugins.defaultPlugin[OHIF.plugins.PLUGIN_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportPluginIds && viewportPluginIds.length) {\n    defaultPlugin = viewportPluginIds[0];\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    availablePlugins,\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OHIF } from 'ohif-core';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport './ViewerMain.css';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    studies: PropTypes.array.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n    setToolActive: PropTypes.func.isRequired,\n    setActiveViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Initialize hotkeys\n    new OHIF.HotkeysUtil('viewer', {\n      setViewportSpecificData: props.setViewportSpecificData,\n      clearViewportSpecificData: props.clearViewportSpecificData,\n      setToolActive: props.setToolActive,\n      setActiveViewportSpecificData: props.setActiveViewportSpecificData,\n    });\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    const displaySets = this.getDisplaySets(this.props.studies);\n\n    this.setState({\n      displaySets,\n    });\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        <ConnectedLayoutManager\n          studies={this.props.studies}\n          viewportData={this.getViewportData()}\n          setViewportData={this.setViewportData}\n        />\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import { connect } from 'react-redux';\nimport ViewerMain from './ViewerMain';\nimport OHIF from 'ohif-core';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n  setToolActive,\n  setActiveViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n    setToolActive: tool => {\n      dispatch(setToolActive(tool));\n    },\n    setActiveViewportSpecificData: viewport => {\n      dispatch(setActiveViewportSpecificData(viewport));\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './FlexboxLayout.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedMeasurementTable from './ConnectedMeasurementTable';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport PropTypes from 'prop-types';\n\nclass FlexboxLayout extends Component {\n  static propTypes = {\n    studies: PropTypes.array.isRequired,\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    studiesForBrowser: [],\n  };\n\n  componentDidMount() {\n    const studiesForBrowser = this.getStudiesForBrowser();\n\n    this.setState({\n      studiesForBrowser,\n    });\n  }\n\n  getStudiesForBrowser = () => {\n    const { studies } = this.props;\n\n    // TODO[react]:\n    // - Add sorting of display sets\n    // - Add useMiddleSeriesInstanceAsThumbnail\n    // - Add showStackLoadingProgressBar option\n    return studies.map(study => {\n      const { studyInstanceUid } = study;\n\n      const thumbnails = study.displaySets.map(displaySet => {\n        const {\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n          // TODO: This is undefined\n          // modality,\n        } = displaySet;\n\n        let imageId;\n        let altImageText = ' '; // modality\n\n        if (displaySet.images && displaySet.images.length) {\n          imageId = displaySet.images[0].getImageId();\n        } else {\n          altImageText = 'SR';\n        }\n\n        return {\n          imageId,\n          altImageText,\n          displaySetInstanceUid,\n          seriesDescription,\n          seriesNumber,\n          instanceNumber,\n          numImageFrames,\n        };\n      });\n\n      return {\n        studyInstanceUid,\n        thumbnails,\n      };\n    });\n  };\n\n  render() {\n    let mainContentClassName = 'main-content';\n    if (this.props.leftSidebarOpen) {\n      mainContentClassName += ' sidebar-left-open';\n    }\n\n    if (this.props.rightSidebarOpen) {\n      mainContentClassName += ' sidebar-right-open';\n    }\n\n    // TODO[react]: Make ConnectedMeasurementTable extension with state.timepointManager\n    return (\n      <div className=\"FlexboxLayout\">\n        <div\n          className={\n            this.props.leftSidebarOpen\n              ? 'sidebar-menu sidebar-left sidebar-open'\n              : 'sidebar-menu sidebar-left'\n          }\n        >\n          <ConnectedStudyBrowser studies={this.state.studiesForBrowser} />\n        </div>\n        <div className={mainContentClassName}>\n          <ConnectedViewerMain studies={this.props.studies} />\n        </div>\n        <div\n          className={\n            this.props.rightSidebarOpen\n              ? 'sidebar-menu sidebar-right sidebar-open'\n              : 'sidebar-menu sidebar-right'\n          }\n        >\n          <ConnectedMeasurementTable />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FlexboxLayout;\n","import { connect } from 'react-redux';\nimport FlexboxLayout from './FlexboxLayout';\n\nconst mapStateToProps = state => {\n  return {\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst ConnectedFlexboxLayout = connect(\n  mapStateToProps,\n  null\n)(FlexboxLayout);\n\nexport default ConnectedFlexboxLayout;\n","import { connect } from 'react-redux';\nimport { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import { connect } from 'react-redux';\nimport PluginSwitch from './PluginSwitch.js';\nimport OHIF from 'ohif-core';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\nfunction setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const { activeViewportIndex, layout } = propsFromState;\n  const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    {\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        console.warn('Axial');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: 'mpr',\n            sliceNormal: [0, 0, 1],\n          },\n        };\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          data\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        console.warn('Sagittal');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: 'mpr',\n            sliceNormal: [1, 0, 0],\n          },\n        };\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          data\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        console.warn('Coronal');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: 'mpr',\n            sliceNormal: [0, 1, 0],\n          },\n        };\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          data\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    /*{\n      text: '3D',\n      icon: `#cube`,\n      onClick: (click) => {\n        console.warn('3D Perspective');\n        const data = {\n          plugin: 'vtk',\n          vtk: {\n            mode: '3d',\n          }\n        };\n\n        const layoutData = setSingleLayoutData(layout.viewports, activeViewportIndex, data);\n\n        setLayout({ viewports: layoutData });\n      }\n    }*/\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\n\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport OHIF from 'ohif-core';\nimport PropTypes from 'prop-types';\nimport { RoundedButtonGroup } from 'react-viewerbase';\n\nclass ToolbarRow extends Component {\n  static propTypes = {\n    leftSidebarOpen: PropTypes.bool.isRequired,\n    rightSidebarOpen: PropTypes.bool.isRequired,\n    setLeftSidebarOpen: PropTypes.func,\n    setRightSidebarOpen: PropTypes.func,\n    pluginId: PropTypes.string,\n  };\n\n  static defaultProps = {\n    leftSidebarOpen: false,\n    rightSidebarOpen: false,\n  };\n\n  onLeftSidebarValueChanged = value => {\n    this.props.setLeftSidebarOpen(!!value);\n  };\n\n  onRightSidebarValueChanged = value => {\n    this.props.setRightSidebarOpen(!!value);\n  };\n\n  render() {\n    const leftSidebarToggle = [\n      {\n        value: 'studies',\n        icon: 'th-large',\n        bottomLabel: 'Series',\n      },\n    ];\n\n    const rightSidebarToggle = [\n      {\n        value: 'measurements',\n        icon: 'list',\n        bottomLabel: 'Measurements',\n      },\n    ];\n\n    const leftSidebarValue = this.props.leftSidebarOpen\n      ? leftSidebarToggle[0].value\n      : null;\n\n    const rightSidebarValue = this.props.rightSidebarOpen\n      ? rightSidebarToggle[0].value\n      : null;\n\n    const currentPluginId = this.props.pluginId;\n\n    const { PLUGIN_TYPES, availablePlugins } = OHIF.plugins;\n    const plugin = availablePlugins.find(entry => {\n      return (\n        entry.type === PLUGIN_TYPES.TOOLBAR && entry.id === currentPluginId\n      );\n    });\n\n    let pluginComp;\n    if (plugin) {\n      const PluginComponent = plugin.component;\n\n      pluginComp = <PluginComponent />;\n    }\n\n    return (\n      <div className=\"ToolbarRow\">\n        <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n          <RoundedButtonGroup\n            options={leftSidebarToggle}\n            value={leftSidebarValue}\n            onValueChanged={this.onLeftSidebarValueChanged}\n          />\n        </div>\n        {pluginComp}\n        <ConnectedLayoutButton />\n        <ConnectedPluginSwitch />\n        <div className=\"pull-right m-t-1 rm-x-1\" style={{ marginLeft: 'auto' }}>\n          <RoundedButtonGroup\n            options={rightSidebarToggle}\n            value={rightSidebarValue}\n            onValueChanged={this.onRightSidebarValueChanged}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToolbarRow;\n","import { connect } from 'react-redux';\nimport ToolbarRow from './ToolbarRow';\nimport { setLeftSidebarOpen, setRightSidebarOpen } from '../redux/actions.js';\n\nconst defaultPlugin = 'cornerstone';\n\nconst mapStateToProps = state => {\n  const { layout, viewportSpecificData, activeViewportIndex } = state.viewports;\n  const pluginInLayout =\n    layout.viewports[activeViewportIndex] &&\n    layout.viewports[activeViewportIndex].plugin;\n  const pluginInViewportData =\n    viewportSpecificData[activeViewportIndex] &&\n    viewportSpecificData[activeViewportIndex].plugin;\n  const pluginInActiveViewport =\n    pluginInLayout || pluginInViewportData || defaultPlugin;\n  //     const extensionData = state.extensions[pluginInActiveViewport];\n\n  return {\n    pluginId: pluginInActiveViewport,\n    leftSidebarOpen: state.ui.leftSidebarOpen,\n    rightSidebarOpen: state.ui.rightSidebarOpen,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLeftSidebarOpen: state => {\n      dispatch(setLeftSidebarOpen(state));\n    },\n    setRightSidebarOpen: state => {\n      dispatch(setRightSidebarOpen(state));\n    },\n  };\n};\n\nconst ConnectedToolbarRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n//import OHIF from 'ohif-core';\n//import { CineDialog } from 'react-viewerbase';\n\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedFlexboxLayout from './ConnectedFlexboxLayout.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    const patientId = studies[0] && studies[0].patientId;\n    timepointApi.retrieveTimepoints({ patientId });\n    measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n  }\n\n  render() {\n    return (\n      <>\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n        <div id=\"viewer\" className=\"Viewer\">\n          <ConnectedToolbarRow />\n          {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n          {/*<StudyPrefetcher studies={this.props.studies} />*/}\n          <ConnectedFlexboxLayout studies={this.props.studies} />\n          <ConnectedLabellingOverlay />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  null,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport ConnectedViewer from './ConnectedViewer.js';\n\nconst { createDisplaySets } = OHIF.utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n    const promise = OHIF.studies.retrieveStudiesMetadata(\n      server,\n      studyInstanceUids,\n      seriesInstanceUids\n    );\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        const updatedStudies = createDisplaySets(studies);\n\n        this.setState({\n          studies: updatedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ViewerRetrieveStudyData from '../connectedComponents/ViewerRetrieveStudyData.js';\n\nfunction IHEInvokeImageDisplay({ match }) {\n  const requestType = match.params.query.requestType;\n  let studyInstanceUids;\n  //let patientUids;\n  let displayStudyList = false;\n\n  if (requestType === 'STUDY') {\n    studyInstanceUids = match.params.query.studyUID.split(';');\n  } else if (requestType === 'STUDYBASE64') {\n    const uids = this.params.query.studyUID;\n    const decodedData = window.atob(uids);\n    studyInstanceUids = decodedData.split(';');\n  } else if (requestType === 'PATIENT') {\n    //patientUidspatientUids = this.params.query.patientID.split(';');\n    displayStudyList = true;\n  } else {\n    displayStudyList = true;\n  }\n\n  if (displayStudyList) {\n    return ''; //<StudyList patientUids={patientUids}/>);\n  }\n\n  return <ViewerRetrieveStudyData studyInstanceUids={studyInstanceUids} />;\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      query: PropTypes.shape({\n        requestType: PropTypes.string.isRequired,\n        studyUID: PropTypes.string,\n        patientID: PropTypes.string,\n      }),\n    }),\n  }),\n};\n\nexport default IHEInvokeImageDisplay;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [match.params.studyInstanceUid];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n\n    this.searchForStudies();\n  }\n\n  searchForStudies = (\n    searchData = {\n      currentPage: 0,\n      rowsPerPage: StudyListWithData.rowsPerPage,\n      studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n      studyDateTo: StudyListWithData.defaultStudyDateTo,\n      sortData: StudyListWithData.defaultSort,\n    }\n  ) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        const sortedStudies = studies\n          .sort(function(a, b) {\n            if (order === 'desc') {\n              if (a[field] < b[field]) {\n                return -1;\n              }\n              if (a[field] > b[field]) {\n                return 1;\n              }\n              return 0;\n            } else {\n              if (a[field] > b[field]) {\n                return -1;\n              }\n              if (a[field] < b[field]) {\n                return 1;\n              }\n              return 0;\n            }\n          })\n          .map(study => {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n            return study;\n          });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        <StudyList\n          studies={this.state.studies}\n          studyListFunctionsEnabled={false}\n          onImport={this.onImport}\n          onSelectItem={this.onSelectItem}\n          pageSize={this.rowsPerPage}\n          defaultSort={StudyListWithData.defaultSort}\n          studyListDateFilterNumDays={\n            StudyListWithData.studyListDateFilterNumDays\n          }\n          onSearch={this.onSearch}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(StudyListWithData);\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction StudyListRouting({ match }) {\n  // TODO: Figure out which filters we want to pass in via a URL\n  //const { patientId } = match.params;\n\n  return <ConnectedStudyList />;\n}\n\nStudyListRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      patientIds: PropTypes.string,\n    }),\n  }),\n};\n\nexport default StudyListRouting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport qs from 'querystring';\nimport Viewer from '../connectedComponents/Viewer';\nimport OHIF from 'ohif-core';\n\nconst { createDisplaySets } = OHIF.utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        OHIF.log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          OHIF.log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        OHIF.log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          OHIF.studies\n            .retrieveStudiesMetadata(\n              server,\n              studyInstanceUids,\n              seriesInstanceUids\n            )\n            .then(\n              studies => {\n                resolve(studies);\n              },\n              error => {\n                reject(error);\n              }\n            );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      OHIF.log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  componentDidMount() {\n    const query = qs.parse(this.props.location.search);\n    StandaloneRouting.parseQueryAndFetchStudies(query).then(\n      studies => {\n        const updatedStudies = createDisplaySets(studies);\n\n        this.setState({ studies: updatedStudies });\n      },\n      error => {\n        this.setState({ error });\n      }\n    );\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './CallbackPage.js';\nimport { withRouter } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        <Route exact path=\"/studylist\" component={StudyListRouting} />\n        <Route exact path=\"/\" component={StudyListRouting} />\n        <Route exact path=\"/viewer\" component={StandaloneRouting} />\n        <Route path=\"/viewer/:studyInstanceUids\" component={ViewerRouting} />\n        <Route\n          path=\"/study/:studyInstanceUid/series/:seriesInstanceUids\"\n          component={ViewerRouting}\n        />\n        <Route\n          path=\"/IHEInvokeImageDisplay\"\n          component={IHEInvokeImageDisplay}\n        />\n        <Route render={() => <div> Sorry, this page does not exist. </div>} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      configuration: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","const defaultState = {\n  leftSidebarOpen: true,\n  rightSidebarOpen: false,\n  userPreferencesModalOpen: false,\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_LEFT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { leftSidebarOpen: action.state });\n    case 'SET_RIGHT_SIDEBAR_OPEN':\n      return Object.assign({}, state, { rightSidebarOpen: action.state });\n    case 'SET_USER_PREFERENCES_MODAL_OPEN':\n      return Object.assign({}, state, {\n        userPreferencesModalOpen: action.state,\n      });\n    case 'SET_LABELLING_FLOW_DATA':\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    case 'SET_TOOL_CONTEXT_MENU_DATA':\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import './config';\n\nimport { OidcProvider, reducer as oidcReducer } from 'redux-oidc';\nimport React, { Component } from 'react';\nimport { combineReducers, createStore } from 'redux';\nimport {\n  getDefaultToolbarButtons,\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport ConnectedToolContextMenu from './connectedComponents/ConnectedToolContextMenu';\nimport OHIF from 'ohif-core';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from 'ohif-dicom-html-extension';\nimport OHIFDicomMicroscopyExtension from 'ohif-dicom-microscopy-extension';\nimport OHIFDicomPDFExtension from 'ohif-dicom-pdf-extension';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport setupTools from './setupTools';\nimport ui from './redux/ui.js';\n\nconst { ExtensionManager } = OHIF.extensions;\nconst { reducers, localStorage } = OHIF.redux;\n\nreducers.ui = ui;\nreducers.oidc = oidcReducer;\n\nconst combined = combineReducers(reducers);\nconst store = createStore(combined, localStorage.loadState());\n\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nsetupTools(store);\n\nconst children = {\n  viewport: [<ConnectedToolContextMenu />],\n};\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nconst extensions = [\n  new OHIFCornerstoneExtension({ children }),\n  new OHIFVTKExtension(),\n  new OHIFDicomPDFExtension(),\n  new OHIFDicomHtmlExtension(),\n  new OHIFDicomMicroscopyExtension(),\n];\nExtensionManager.registerExtensions(store, extensions);\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    OHIF.utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    //\n    const defaultButtons = getDefaultToolbarButtons(this.props.routerBasename);\n    const buttonsAction = OHIF.redux.actions.setAvailableButtons(\n      defaultButtons\n    );\n\n    store.dispatch(buttonsAction);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <OidcProvider store={store} userManager={userManager}>\n            <Router basename={this.props.routerBasename}>\n              <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n                <OHIFStandaloneViewer userManager={userManager} />\n              </WhiteLabellingContext.Provider>\n            </Router>\n          </OidcProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <Router basename={this.props.routerBasename}>\n          <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n            <OHIFStandaloneViewer />\n          </WhiteLabellingContext.Provider>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\nUI settings\nPlugins\n    - Custom tools / buttons\n    - Custom Sidebar module thing\n    - Custom Viewports\n    - Custom Sop Class Interpreters\n*/\n\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"leftSidebarOpen\": false,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}